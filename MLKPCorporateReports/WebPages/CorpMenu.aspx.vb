Imports MySql.Data.MySqlClient
Imports log4net
Imports log4net.Config
Imports System.Data
Imports CrystalDecisions.CrystalReports.Engine
Imports System.Net.Mail
Imports CrystalDecisions.Shared
Imports ML.OFW.Services
Imports ML.OFW.Contracts
Imports System.Reflection
Imports System.Globalization
Imports System.IO
Imports System.Diagnostics
<System.Runtime.InteropServices.ComVisible(False)> Partial Class WebPages_CorpMenu
    Inherits System.Web.UI.Page
    Dim ini As New ini()
    Dim Rpt As ReportDocument = New ReportDocument
    Dim Con As ClsCon = New ClsCon
    Dim Con2 As ClsCon = New ClsCon
    Dim Con1 As ClsCon = New ClsCon
    Dim opencon As DBwallet = New DBwallet
    Dim databasewallet As DBwallet = New DBwallet
    'Dim databasewallet As String


    Dim clsreport As ClsReport = New ClsReport
    Private Shared ReadOnly kplog As ILog = LogManager.GetLogger(GetType(WebPages_CorpMenu))
    Dim _BackWork As New System.ComponentModel.BackgroundWorker
    Private _flag As String

    Public Event DoWork As System.ComponentModel.DoWorkEventHandler

    Dim dtable As DataTable = New DataTable
    Dim dtable1 As DataTable = New DataTable
    Dim dtable2 As DataTable = New DataTable
    Dim dtmerger As DataTable = New DataTable
    Dim dt As DataTable = New DataTable
    Public DtMer As New DataTable
    Dim _dt As New DataTable

    Dim _year As String = String.Empty
    Dim _day As String = String.Empty
    Dim _Dateme As String = String.Empty
    Dim _dategenerate As String = String.Empty
    Dim _dateofreport As String = String.Empty
    Dim _monthnoofdays As Integer = 0
    Dim _rpttitle As String = String.Empty

    Dim gstrquery As String = String.Empty
    Dim kp8strquery As String = String.Empty
    Dim strquery As String = String.Empty
    Dim committedquery As String = String.Empty
    Dim strquery1 As String = String.Empty
    Dim strqueryaub As String = String.Empty
    Dim strquerysky As String = String.Empty
    Dim strquerywu As String = String.Empty
    Dim strquery2 As String = String.Empty
    Dim pstrquery As String = String.Empty
    Dim wscquery As String = String.Empty
    Dim fstrquery As String = String.Empty
    Dim kptquery As String = String.Empty
    Dim walquery As String = String.Empty
    Dim strquerywall As String = String.Empty
    Dim cmd As MySqlCommand = New MySqlCommand
    Dim cmd1 As MySqlCommand = New MySqlCommand
    Dim kp8domesticdb As String = String.Empty
    Dim wallettrans As String = String.Empty

    Dim dr As MySqlDataReader = Nothing
    Dim dr1 As MySqlDataReader = Nothing
    Dim datarow As DataRow = Nothing
    Public xx As New Class2

    Dim sendstatus As String = String.Empty
    Dim emailadd As String = String.Empty
    Dim userrole As String = String.Empty
    Dim partnername As String = String.Empty
    Dim username As String = String.Empty
    Dim accountID As String = String.Empty
    Dim walletID As String = String.Empty
    Dim walletno As String = String.Empty
    Dim walletuser As String = String.Empty
    Dim partnerID As String = String.Empty
    Dim accountname As String = String.Empty
    Dim integtype As String = String.Empty
    Dim ReportType As Integer
    Dim getCode As String = String.Empty
    Dim aCode As String = String.Empty
    Dim zCode As String = String.Empty
    Dim rCode As String = String.Empty
    Dim bCode As String = String.Empty
    Dim oldzCode As String = String.Empty
    Dim IsError As Boolean = False
    Dim sotxnreftype As String = String.Empty
    Dim usertype As String = String.Empty
    Dim _loop As Integer = 1
    Dim errorcon As String = String.Empty
    Const partnertrap As Integer = 0
    Dim walletdb As String = Nothing
    Dim date1 As String
    Dim date2 As String
    Dim _usrinfo As UserInfo
    Dim zones As String = String.Empty
    Dim divcode As String = String.Empty
    Dim eloadni As Boolean = False

    'MLEXPRESS
    Dim expressdb As String = Nothing
    Dim expressmonth As String = Nothing
    Dim expressday As String = Nothing
    Dim expresstrap As Integer = 0
    Dim gendate As String = ""
    Dim gendateto As String = ""

    Dim isepay As Boolean = False
    Dim isCAD As Boolean = False
    Dim isCADTPC As Boolean = False
    Dim hassub As Boolean = False
    Dim issub As Boolean = False
    Dim issm As Boolean = False
    Dim smflag As String = String.Empty
    Dim smperiod As String = String.Empty
    Dim smaccountid As String = ConfigurationManager.AppSettings("smaccountid")
    'Dim wuaccountid As String = ConfigurationManager.AppSettings("wuaccountid") 'westernunion
    Dim psslaiaccountid As String = ConfigurationManager.AppSettings("psslaiaccountid")
    Dim paypalid As String = ConfigurationManager.AppSettings("paypalid")
    Dim kabayanid As String = ConfigurationManager.AppSettings("kabayanid")
    Dim newyorkbayid As String = ConfigurationManager.AppSettings("newyorkbayid")
    Dim aubid As String = ConfigurationManager.AppSettings("aub")
    Dim westernunionid As String = ConfigurationManager.AppSettings("westernunion")
    Dim billspayWU As String = ConfigurationManager.AppSettings("billspayWU")
    Dim walletEmpkey As String = ConfigurationManager.AppSettings("walletEmpkey")
    Dim bayadcenterid As String = ConfigurationManager.AppSettings("bayadcenter")
    Dim globe As String = ConfigurationManager.AppSettings("globe")
    Dim bayantel As String = ConfigurationManager.AppSettings("bayantel")
    Dim RYKOM As String = ConfigurationManager.AppSettings("RYKOM")
    Dim FINASWIDE As String = ConfigurationManager.AppSettings("FINASWIDE")
    Dim MCIA_LOCAL As String = ConfigurationManager.AppSettings("MCIA_LOCAL")
    Dim CARD_2 As String = ConfigurationManager.AppSettings("CARD_2")
    Dim JT As String = ConfigurationManager.AppSettings("JT")
    Dim BatelecID As String = ConfigurationManager.AppSettings("Batelec")
    Dim BillspaymentFeedbackFile As String = ConfigurationManager.AppSettings("feedbackFile")
    Dim Keyloger As String = ConfigurationManager.AppSettings("Keyloger")
    Dim skybridge As String = ConfigurationManager.AppSettings("skybridge")
    Dim tpc As String = ConfigurationManager.AppSettings("tpc")

    Dim billspayresponse As New BFeedbackFile2.ServResponse()
    Dim service As New BFeedbackFile2.MLhuillier()



    Dim branchtin As String = String.Empty

    Protected Sub _BackWork_DoWork(ByVal sender As Object, ByVal e As System.ComponentModel.DoWorkEventArgs) Handles Me.DoWork
        Dim _Bworker As System.ComponentModel.BackgroundWorker = CType(sender, System.ComponentModel.BackgroundWorker)
        Try
            For i = 1 To 10
                If _BackWork.CancellationPending = True Then
                    e.Cancel = True
                    Exit For
                Else
                    System.Threading.Thread.Sleep(500)
                    _BackWork.ReportProgress(i * 10)
                End If
            Next
        Catch ex As Exception
            kplog.Error(ex.ToString())
            'GetMessage(ex.ToString)
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub


    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        AddHandler _BackWork.DoWork, AddressOf _BackWork_DoWork
        XmlConfigurator.Configure()
        sendstatus = Session("send")
        userrole = Session("roles")
        partnername = Session("PartnerName")
        accountID = Session("PartnerID")
        username = Session("UserName")
        ReportType = Request.QueryString("RptType")
        zCode = Session("zcode")
        divcode = Session("divcode")

        _usrinfo = CType(Session("UserInfo"), UserInfo)
    

        If Not IsPostBack Then
            If ReportType = 6 And drpTransactionTypelist.Text = 13 And userrole <> "KP-PARTNERTELLER" Then
                rb.SelectedIndex = -1
            Else
                rb.SelectedIndex = 1
            End If
            drpPartnerAccountlist.SelectedValue = Session("bankname")
           

            drpPeriod.SelectedIndex = 0
           
            perioddisabled()

            If partnername = Nothing Then
                drpPartnerAccountlist.SelectedIndex = 0
                drpglobe.SelectedIndex = 0
            Else
                WithPartnername()
            End If

            drpPartnerAccountlist.Items.Clear()

            getPartners(accountID)

            If Session("roles") = "IAD" Or Session("roles") = "KP-IAD" Or Session("roles") = "KP-RAM" Or Session("roles") = "RAM" Then
                getAllRegion()
            End If

       
            TransType()
        End If
      
       
        Label11.Visible = False
        'drpLeterStart.Visible = False
        SrchBox.Enabled = False
        SrchBox.Visible = False

        If ReportType = 1 Then
            lblreportname.Text = "Corporate Partners Transaction Report"
            sotxnreftype = "API"
        ElseIf ReportType = 2 Then
            lblreportname.Text = "Bills Payment Transaction Report"
        ElseIf ReportType = 3 Then
            lblreportname.Text = "Payment Solution Transaction Report"
            sotxnreftype = "PAYMENTSOLUTION"
        ElseIf ReportType = 4 Then
            lblreportname.Text = "File Upload Transaction Report"
            sotxnreftype = "FILEUPLOAD"
        ElseIf ReportType = 5 Then
            lblreportname.Text = "ML Express Partners Report"
            sotxnreftype = "MLExpress"
        ElseIf ReportType = 6 Then
            lblreportname.Text = "Web Service Client Transaction Report"
            sotxnreftype = "WSC"
        ElseIf ReportType = 7 Then
            If Session("roles") = "KP-PAYROLL" Or Session("roles") = "KP-HRMDPAYROLL" Then
                lblreportname.Text = "ML Wallet Transaction Report"
                Label11.Text = "Wallet Number :"
                Label11.Visible = True
                Label1.Visible = False
            Else
                lblreportname.Text = "ML Wallet Transaction Report"
                Label11.Text = "Wallet User :"
                Label1.Visible = False
                sotxnreftype = "Wallet"
                Label11.Visible = True
                'drpLeterStart.Visible = True
            End If
        ElseIf ReportType = 8 Then
            lblreportname.Text = "ML Online"
            sotxnreftype = "MLO"
        ElseIf ReportType = 9 Then
            lblreportname.Text = "Special Partners Transaction Report"
            sotxnreftype = "SpecialPartner"
        ElseIf ReportType = 10 Then
            lblreportname.Text = "ML Wallet Employee Transaction Report"
            Label1.Text = "Wallet User :"
            sotxnreftype = "WalletE"
            Label11.Visible = True
            'drpLeterStart.Visible = True
        ElseIf ReportType = 11 Then
            lblreportname.Text = "BatchUpload Transaction Report"
            Label1.Text = "Wallet User :"
            drpTransactionTypelist.SelectedIndex = "65"
            drpPeriod.Enabled = False
        ElseIf ReportType = 12 Then
            lblreportname.Text = "Settlement & Collection Report"
            If drpTransactionTypelist.SelectedIndex = 70 Then
                Label1.Text = "Bank Name:"
            Else
                Label1.Text = "Partner Name:"
            End If

        ElseIf ReportType = 13 Then
            lblreportname.Text = "Head Office BatchUpload Transaction Report"
            Label1.Text = "BatchUpload User :"
            drpTransactionTypelist.SelectedIndex = "80"
	    drpPeriod.Enabled = True
	    txtDate.Enabled = True


        Else
            Response.Redirect("Denied.aspx")
        End If

        If (Session("roles") = "IAD" Or Session("roles") = "KP-IAD" Or Session("roles") = "KP-RAM" Or Session("roles") = "RAM") And ReportType <> 10 Then
            usertype = "IAD"
            lblregion.Visible = True
            drpRegion.Visible = True
            lblarea.Visible = True
            drpArea.Visible = True
            lblbranch.Visible = True
            drpBranchName.Visible = True
            drpTransactionTypelist.Enabled = True
            drpRegion.Enabled = True
            drpArea.Enabled = True
            drpBranchName.Enabled = True
            '------------------------------------ 'for IAD Fix--------------------------------------------

            If (Session("roles") = "IAD" Or Session("roles") = "KP-IAD") And (ReportType = 7 Or ReportType = 10) Then
                lblregion.Visible = False
                drpRegion.Visible = False
                lblarea.Visible = False
                drpArea.Visible = False
                lblbranch.Visible = False
                drpBranchName.Visible = False
                drpRegion.Enabled = False
                drpArea.Enabled = False
                drpBranchName.Enabled = False
            End If
            '------------------------------------ 'for IAD Fix--------------------------------------------


        Else
            usertype = "NOTIAD"
            lblregion.Visible = False
            drpRegion.Visible = False
            lblarea.Visible = False
            drpArea.Visible = False
            lblbranch.Visible = False
            drpBranchName.Visible = False
        End If
    End Sub

    'CONNECTIONS
    Protected Sub BGcon()
        Try
            Con.OpenCon("KPBillspayGlobal")
            errorcon = "BillspayGlobal"
        Catch ex As Exception
            kplog.Fatal(ex.ToString())
            GetMessage(ex.ToString())
        End Try
    End Sub
    Protected Sub getconnections()
        Try
            If ReportType = 1 Then 'Corporate Partners Report
                Con.OpenCon("KPAPI")
                errorcon = "Partners"
            ElseIf ReportType = 2 Then 'Bills Payment Transaction Report
                Con.OpenCon("KPBillsPayment")
                errorcon = "Billspayment"
            ElseIf ReportType = 3 Then 'Payment Solution Report
                Con.OpenCon("KPFileUpload")
                errorcon = "Payment Solution"
            ElseIf ReportType = 4 Then 'File Upload Report
                Con.OpenCon("KPFileUpload")
                errorcon = "Fileupload"
            ElseIf ReportType = 5 Then 'ML Express Report
                Con.OpenCon("KPMLExpress")
                errorcon = "ML Express"
            ElseIf ReportType = 6 Then 'Web Service Client
                Con.OpenCon("KPWSC")
                errorcon = "Web Service Client"
            ElseIf ReportType = 7 Then 'Web Service Client
                Con.OpenCon("KPMLWallet")
                errorcon = "Mobile"
            ElseIf ReportType = 8 Then 'MLOnline
                Con.OpenCon("MLOnline")
                errorcon = "MLonline"
            ElseIf ReportType = 9 Then 'Rural Net
                Con.OpenCon("RuralNet")
                errorcon = "RuralNet"
            ElseIf ReportType = 10 Then 'ML Wallet Emp
                Con.OpenCon("KPMLWalletEmp")
            ElseIf ReportType = 11 Then
                Con.OpenCon("KPMLWallet")
                errorcon = "BatchUpload"
            ElseIf ReportType = 12 Then
                Con.OpenCon("KPBillsPayment")
                errorcon = "Billspayment"
            ElseIf ReportType = 13 Then
                Con.OpenCon("KPMLWallet")
                errorcon = "BatchUploadHO"
            End If
            kplog.Info(Con.GetCon.DataSource.ToString() + "  " + Con.GetCon.Database.ToString())

        Catch ex As Exception
            kplog.Error(ex.ToString())
            'GetMessage(ex.ToString())
            GetMessage(String.Format("Unable to connect '{0}' Server! Please try again later.", errorcon))
        End Try
    End Sub
    'GET WALLETNO for Batch
  
    'GET PARTNERNAME
    Private Sub getPartners(ByVal accountid As String)
        Try
            If partnername <> Nothing Then
                drpPartnerAccountlist.Enabled = False
            Else
                drpPartnerAccountlist.Items.Add(New ListItem("-Select-"))
                drppartnerid.Items.Add(New ListItem("-Select-"))
                drpaccountno.Items.Add(New ListItem("-Select-"))
            End If
            If ReportType = 1 Then
                strquery = String.Format("call kpadminpartners.HOgetpartners('{0}','API','{1}')", accountid, username)
            ElseIf ReportType = 2 Then
                strquery = String.Format("call kpadminpartners.HOcorporate_Billspayment('{0}','{1}')", accountid, username)
                strquery1 = String.Format("CALL epayaccounts.`HOcorporate_EpayAccounts`('{0}','{1}')", accountid, username)
            ElseIf ReportType = 3 Then
                strquery = String.Format("call kpadminpartners.HOcorporate_PaymentSolution('{0}','{1}')", accountid, username)
            ElseIf ReportType = 4 Then
                strquery = String.Format("call kpadminpartners.HOcorporate_fileupload('{0}','{1}')", accountid, username)
            ElseIf ReportType = 5 Then
                strquery = "call kpOFW.HOcorporate_MLExpress()"
            ElseIf ReportType = 6 Then
                Dim uname As String = username
                Dim getmainacctid As String = PartnersIsSub(accountid)
                If getmainacctid <> Nothing Then
                    username = ""
                Else
                    getmainacctid = accountid
                End If
                If issub = True Then
                    PartnersWithSub("issub", uname)
                End If
                If Session("roles") = "CAD-DIVMAN" Then
                    strquery = String.Format("call kpadminpartners.HOgetpartners('{0}','WSCOR','{1}')", getmainacctid, username)
                Else
                    strquery = String.Format("call kpadminpartners.HOgetpartners('{0}','WSC','{1}')", getmainacctid, username)
                End If
            ElseIf ReportType = 7 Then
                If Session("roles") = "KP-PAYROLL" Or Session("roles") = "KP-HRMDPAYROLL" Then
                    drpPartnerAccountlist.Enabled = False
                    drpPartnerAccountlist.Visible = False
                    SrchBox.Visible = True
                    SrchBox.Enabled = False
                Else
                    drpPartnerAccountlist.Visible = False
                    Label11.Visible = False
                End If
            ElseIf ReportType = 8 Then
                strquery = "call ecommercetransactions.HOcorporate_MLOnline()"
            ElseIf ReportType = 9 Then
                strquery = String.Format("call kpadminpartners.HOcorporate_RuralNet('{0}','{1}')", accountid, username)
            ElseIf ReportType = 10 Then
                drpPartnerAccountlist.Enabled = False
            ElseIf ReportType = 11 Then
                strquery = String.Format("call kpmobile.HOcorp_BatchUpload('{0}','{1}')", accountid, username)
            ElseIf ReportType = 12 Then
                drpPartnerAccountlist.Enabled = False
                getBankname()
            ElseIf ReportType = 13 Then
                strquery = String.Format("call kpmobile.HOcorp_BatchUploadfire('{0}','{1}')", accountid, username)
                Else
                    Response.Redirect("Denied.aspx")
                End If
                dtmerger.Clear()
                Dim again As Int16 = 0
                getconnections()
newconn:
                If ReportType = 1 And again = 1 Then
                    Con.OpenCon("KPAPINEW")
                ElseIf ReportType = 2 And again = 1 Then
                    Con.OpenCon("MLEpay")
                    strquery = strquery1
                End If
                Using Con.GetCon()
                    If ReportType <> 7 And ReportType <> 10 Then
                        cmd = New MySqlCommand(strquery, Con.GetCon())
                        If cmd.Connection.State = ConnectionState.Closed Then
                            Response.Write(String.Format("<script language='javascript'>window.alert('Connecting to {0}  Server! Please Wait.');window.location=CorpMenu.aspx?RptType= {1}';</script>", errorcon, ReportType))
                            If partnername <> Nothing And ReportType = 1 Then
                                Response.Redirect("CorpMenu.aspx?RptType=6")
                            ElseIf partnername <> Nothing And ReportType = 6 Then
                                Response.Redirect("CorpMenu.aspx?RptType=4")
                            ElseIf partnername <> Nothing And ReportType = 4 Then
                                Response.Redirect("CorpMenu.aspx?RptType=1")
                            Else
                                GetMessage(String.Format("Unable to connect {0} DB. Please contact admin support!", errorcon))
                            End If
                        Else
                            dtable.Clear()
                            dr = cmd.ExecuteReader
                            If dr.HasRows Then
                                dtable.Load(dr)
                                dtmerger.Merge(dtable)
                            End If
                        End If
                    End If
                End Using
                If ReportType = 1 And again = 0 Then
                    again = 1
                    GoTo newconn
                    'ElseIf ReportType = 2 And again = 0 Then
                    '    again = 1
                    '    GoTo newconn
                End If

                If dtmerger.Rows.Count = 0 And partnername <> Nothing And ReportType = 1 Then
                    Response.Redirect("CorpMenu.aspx?RptType=6")
                ElseIf dtmerger.Rows.Count = 0 And partnername <> Nothing And ReportType = 6 Then
                    Response.Redirect("CorpMenu.aspx?RptType=4")
                ElseIf dtmerger.Rows.Count = 0 And partnername <> Nothing And ReportType = 4 Then
                    Response.Redirect("CorpMenu.aspx?RptType=1")

                ElseIf dtmerger.Rows.Count <> 0 Then
                    Dim view As DataView = New DataView(dtmerger)
                    If ReportType = 5 Then
                        view.Sort = "fullname asc"
                        dtmerger = view.ToTable("fullname")
                    ElseIf ReportType <> 7 And ReportType <> 8 And ReportType <> 10 And ReportType <> 12 Then
                        view.Sort = "accountname asc"
                        dtmerger = view.ToTable("accountname")
                    ElseIf ReportType = 8 Then
                        view.Sort = "merchantname asc"
                        dtmerger = view.ToTable("merchantname")
                    End If
                End If


                If dtmerger.Rows.Count <> 0 Or ReportType = 7 Or ReportType = 10 Then
                    For Each row As DataRow In dtmerger.Rows
                        If ReportType = 5 Then
                            drpPartnerAccountlist.Items.Add(String.Format("{0} / {1}", UCase(Trim(row(0).ToString)), UCase(Trim(row(1).ToString))))
                            drpaccountno.Items.Add(UCase(Trim(row(2).ToString)))
                        Else
                            drpPartnerAccountlist.Items.Add(UCase(Trim(row(0).ToString)))
                        End If
                        drppartnerid.Items.Add(UCase(Trim(row(1).ToString)))
                    Next
                    drppartnerid.SelectedIndex = drpPartnerAccountlist.SelectedIndex
                Else
                    Response.Redirect("MainForm.aspx")
                End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + "  " + Con.GetCon.ConnectionString() + " getPartners")
            GetMessage("Please Call Admin Support")
            'GetMessage(ex.ToString() + "  "+ Con.GetCon.ConnectionString())
        End Try
    End Sub
    'GET ACCOUNTID
    Private Function getaccountid() As Boolean
        Dim cmd As MySqlCommand
        Dim drAccountID As MySqlDataReader
        Try

            If ReportType = 1 Then
                strquery = String.Format("SELECT trim(a.accountid) as accountid,trim(a.accounttype) as accounttype,trim(a.accountname) as accountname,trim(i.integrationtype) as integrationtype FROM kpadminpartners.accountlist a INNER JOIN `kpadminpartners`.`accountintegration` i ON i.accountid=a.accountid WHERE a.accountname='{0}' and a.AccountType NOT IN ('MLBPP','MLPSP') and i.integrationtype in ('1') and  isactive=1 limit 1;", Replace(drpPartnerAccountlist.SelectedValue, "'", "''"))
            ElseIf ReportType = 2 Then
                strquery = String.Format("SELECT trim(a.accountid) as accountid,trim(a.accounttype) as accounttype,trim(a.accountname) as accountname,trim(i.integrationtype) as integrationtype FROM kpadminpartners.accountlist a INNER JOIN `kpadminpartners`.`accountintegration` i ON i.accountid=a.accountid WHERE a.accountname='{0}' and a.accountType in ('MLBPP') and isactive=1 limit 1;", Replace(drpPartnerAccountlist.SelectedValue, "'", "''"))
                'strquery = String.Format("SELECT TRIM(a.accountnumber) AS accountid,TRIM(a.accounttype) AS accounttype,TRIM(a.accountname) AS accountname,0 AS integrationtype FROM epayaccounts.accountlist a WHERE a.accountname='{0}' AND a.accountType IN ('MLBPP') AND isactive=1 LIMIT 1;", Replace(drpPartnerAccountlist.SelectedValue, "'", "''"))
            ElseIf ReportType = 3 Then
                strquery = String.Format("SELECT trim(a.accountid) as accountid,trim(a.accounttype) as accounttype,trim(a.accountname) as accountname,trim(i.integrationtype) as integrationtype FROM kpadminpartners.accountlist a INNER JOIN `kpadminpartners`.`accountintegration` i ON i.accountid=a.accountid WHERE a.accountname='{0}' and a.accountType in ('MLPSP') and i.integrationtype in ('2','4') and isactive=1 limit 1;", Replace(drpPartnerAccountlist.SelectedValue, "'", "''"))
            ElseIf ReportType = 4 Then
                strquery = String.Format("SELECT trim(a.accountid) as accountid,trim(a.accounttype) as accounttype,trim(a.accountname) as accountname,trim(i.integrationtype) as integrationtype FROM kpadminpartners.accountlist a INNER JOIN `kpadminpartners`.`accountintegration` i ON i.accountid=a.accountid WHERE a.accountname='{0}' and a.AccountType NOT IN ('MLBPP') and i.integrationtype in ('2','4') and isactive=1 limit 1;", Replace(drpPartnerAccountlist.SelectedValue, "'", "''"))
            ElseIf ReportType = 5 Then
                strquery = String.Format("call kpOFW.HOGetExpressID('{0}');", Replace(drppartnerid.SelectedValue, "'", "''"))
            ElseIf ReportType = 6 Then
                If drpglobe.SelectedValue <> "-Select-" And drpglobe.SelectedValue <> "" Then
                    strquery = String.Format("SELECT a.accountid,a.accounttype,a.accountname,i.integrationtype FROM kpadminpartners.accountlist a INNER JOIN `kpadminpartners`.`accountintegration` i ON i.accountid=a.accountid WHERE a.accountname='{0}' and a.AccountType NOT IN ('MLBPP','MLPSP') and i.integrationtype in ('3') and  isactive=1 limit 1;", Replace(drpglobe.SelectedValue, "'", "''"))
                Else
                    strquery = String.Format("SELECT a.accountid,a.accounttype,a.accountname,i.integrationtype FROM kpadminpartners.accountlist a INNER JOIN `kpadminpartners`.`accountintegration` i ON i.accountid=a.accountid WHERE a.accountname='{0}' and a.AccountType NOT IN ('MLBPP','MLPSP') and i.integrationtype in ('3') and  isactive=1 limit 1;", Replace(drpPartnerAccountlist.SelectedValue, "'", "''"))
                End If
            ElseIf ReportType = 7 Or ReportType = 10 Then
                Return False
            ElseIf ReportType = 9 Then
                strquery = String.Format("SELECT trim(a.accountid) as accountid,trim(a.accounttype) as accounttype,trim(a.accountname) as accountname,trim(i.integrationtype) as integrationtype FROM kpadminpartners.accountlist a INNER JOIN `kpadminpartners`.`accountintegration` i ON i.accountid=a.accountid WHERE a.accountname='{0}' and a.AccountType  IN ('MLDP') and i.integrationtype in ('5') and isactive=1 limit 1;", Replace(drpPartnerAccountlist.SelectedValue, "'", "''"))
            ElseIf ReportType = 12 Then
                strquery = String.Format("SELECT trim(a.accountid) as accountid,trim(a.accounttype) as accounttype,trim(a.accountname) as accountname,trim(i.integrationtype) as integrationtype FROM kpadminpartners.accountlist a INNER JOIN `kpadminpartners`.`accountintegration` i ON i.accountid=a.accountid WHERE a.accountname='{0}' and a.accountType in ('MLBPP') and isactive=1 limit 1;", Replace(drpPartnerAccountlist.SelectedValue, "'", "''"))

            End If
            kplog.Info(ReportType.ToString())
            Dim again As Int16 = 0
            getconnections()
newconn:
            If ReportType = 1 And again = 1 Then
                Con.OpenCon("KPAPINEW")
            ElseIf ReportType = 2 Then
                Con.OpenCon("KPBillsPayment")

                'Con.OpenCon("MLEpay")
                'If again = 1 And isepay = False Then
                '    Con.OpenCon("KPBillsPayment")
                '    strquery = strquery1
                'End If
            End If
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                If cmd.Connection.State = ConnectionState.Closed Then
                    Response.Write(String.Format("<script language='javascript'>window.alert('Connecting to {0}  Server! Please Wait.');window.location=CorpMenu.aspx?RptType= {1}';</script>", errorcon, ReportType))
                    GetMessage(String.Format("Unable to connect {0} DB. Please contact admin support!", errorcon))
                Else
                    drAccountID = cmd.ExecuteReader
                    While drAccountID.Read
                        accountID = drAccountID.Item("accountid")
                        accountname = drAccountID.Item("accountname")
                        Session("AccountID") = drAccountID.Item("accountid")
                        integtype = drAccountID.Item("integrationtype")
                        'If ReportType = 2 And again = 0 Then
                        '    isepay = True
                        'End If
                    End While
                    drAccountID.Close()
                    cmd = Nothing
                End If
            End Using
            If ReportType = 1 And again = 0 Then
                again = 1
                GoTo newconn
                'ElseIf ReportType = 2 And again = 0 Then
                '    again = 1
                '    GoTo newconn
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString())
            'GetMessage(ex.toString())
            GetMessage("Please Call Admin Support!")
        End Try
        If accountID <> Nothing Then
            Return True
        Else
            Return False
            Exit Function
        End If
    End Function

    Protected Sub btngenerate_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btngenerate.Click
        Dim fddate, tddate As DateTime

        Try
            If smaccountid = Session("mainaccountid") And (userrole = "KP-PARTNERTELLER" Or userrole = "KP-SUPERVISOR" Or userrole = "KP-MANAGER") And ReportType = 6 Then
                rb.SelectedIndex = 1
                rb.Enabled = False
            ElseIf Session("roles") = "CAD-DIVMAN" Then
                If drpTransactionTypelist.SelectedIndex = 32 Or drpTransactionTypelist.SelectedIndex = 50 Then
                    rb.SelectedIndex = 1
                ElseIf drpTransactionTypelist.SelectedIndex = 33 Or drpTransactionTypelist.SelectedIndex = 51 Or drpTransactionTypelist.SelectedIndex = 54 Then
                    rb.SelectedIndex = -1
                End If
            ElseIf ReportType = 1 And paypalid = drppartnerid.Text And (userrole = "KP-SECCOMLNCR" Or userrole = "KP-SECCOM" Or userrole = "KP-SECCOMVISMIN") And (drpTransactionTypelist.SelectedValue = "2" Or drpTransactionTypelist.SelectedValue = "8") Then
                rb.SelectedIndex = -1
                rb.Enabled = False
            ElseIf drpTransactionTypelist.SelectedValue = "39" Then
                rb.SelectedIndex = -1
                rb.Enabled = False
                'ElseIf drpTransactionTypelist.SelectedValue = "43" Then
                'rb.SelectedIndex = 1
                'rb.Enabled = False

            End If
            If drpTransactionTypelist.Text = "0" Then
                GetMessage("Please Select Transaction Type!")
            ElseIf drpPeriod.Text = 0 Then
                GetMessage("Please Select a Period!")

            Else

                If (txtdateFrom.Enabled = True And Not IsDate(txtdateFrom.Text)) Or (txtdateTo.Enabled = True And Not IsDate(txtdateTo.Text)) Or (txtDate.Enabled = True And Not IsDate(txtDate.Text)) Then
                    GetMessage("Invalid Date Format! Date format should be: mm/dd/yyyy")
                    txtdateFrom.Text = DateTime.Now.Date
                    txtdateTo.Text = DateTime.Now.Date
                    txtDate.Text = DateTime.Now.Date
                Else
                    fddate = Convert.ToDateTime(txtdateFrom.Text)
                    tddate = Convert.ToDateTime(txtdateTo.Text)
                    If txtdateFrom.Enabled = True And txtdateTo.Enabled = True Then
                        Dim numberofdays As Integer = Math.Abs(fddate.Subtract(tddate).Days) + 1
                        If numberofdays > 31 Then
                            GetMessage("Date Range should be 31 days below!")
                        End If
                    End If
                End If
                If (fddate > tddate) Or (txtdateFrom.Text = "" And txtdateFrom.Enabled = True) Or (txtdateTo.Text = "" And txtdateTo.Enabled = True) Or (txtDate.Text = "" And txtDate.Enabled = True) Or (drpMonth.Text = 0 And drpMonth.Enabled = True) Or (drpYear.Text = "-Select Year-" And drpYear.Enabled = True) Then
                    GetMessage("Please Select Valid Dates!")
                    txtdateFrom.Text = DateTime.Now.Date
                    txtdateTo.Text = DateTime.Now.Date
                    txtDate.Text = DateTime.Now.Date
                    drpMonth.Text = DateTime.Now.Month
                    drpYear.Text = DateTime.Now.Year
                End If
            End If
            '-------------------------------
            If ReportType = 12 Then
                If drpPartnerAccountlist.Text = "-Select-" Then
                    GetMessage("Please Select Partner Name!")
                ElseIf TextBox1.Text = "" And (drpTransactionTypelist.SelectedIndex = 71 or drpTransactionTypelist.SelectedIndex = 72) Then
                    GetMessage("Please fill the PO Number!")
                End If
                If (txtdateFrom.Enabled = True And Not IsDate(txtdateFrom.Text)) Or (txtdateTo.Enabled = True And Not IsDate(txtdateTo.Text)) Or (txtDate.Enabled = True And Not IsDate(txtDate.Text)) Then
                    GetMessage("Invalid Date Format! Date format should be: mm/dd/yyyy")
                    txtdateFrom.Text = DateTime.Now.Date
                    txtdateTo.Text = DateTime.Now.Date
                    txtDate.Text = DateTime.Now.Date
                Else
                    fddate = Convert.ToDateTime(txtdateFrom.Text)
                    tddate = Convert.ToDateTime(txtdateTo.Text)
                    If txtdateFrom.Enabled = True And txtdateTo.Enabled = True Then
                        Dim numberofdays As Integer = Math.Abs(fddate.Subtract(tddate).Days) + 1
                        If drpTransactionTypelist.SelectedIndex = 71 Or drpTransactionTypelist.SelectedIndex = 73 Then
                            If numberofdays > 7 Then
                                GetMessage("Date Range should be 7 days below!")
                            End If
                        End If
                    End If
                    End If
            End If


            If Session("roles") <> "IAD" And Session("roles") <> "KP-IAD" And Session("roles") <> "KP-RAM" And Session("roles") <> "RAM" Then

                If ReportType = 6 And (drpTransactionTypelist.SelectedIndex = 16 Or drpTransactionTypelist.SelectedIndex = 17 Or drpTransactionTypelist.SelectedIndex = 18 Or drpTransactionTypelist.SelectedIndex = 19) Then
                    If drpTransactionTypelist.SelectedIndex = 16 And Session("roles") <> "CAD" And Session("roles") <> "KP-CAD" Then
                        rb.SelectedIndex = 1
                    Else
                        If drpTransactionTypelist.SelectedIndex = 18 And drpterminal.Text = "-Select-" Then
                            GetMessage("Please Select Terminal!")
                        End If

                        If (Session("roles") = "KP-PARTNERTELLER" Or Session("roles") = "KP-SUPERVISOR" Or Session("roles") = "KP-MANAGER") Then
                            rb.SelectedIndex = 1
                        End If
                    End If
                End If

                If drpPartnerAccountlist.Text = "-Select-" And drpTransactionTypelist.SelectedIndex <> "11" Then
                    'If (ReportType = 7 Or ReportType = 10) And (drpTransactionTypelist.SelectedIndex = 52 Or drpTransactionTypelist.SelectedIndex = 53) Then
                    '    GetMessage("Please Select a Merchant!")
                    If ReportType <> 7 And ReportType <> 10 And ReportType <> 12 Then
                        If drpTransactionTypelist.SelectedIndex <> 58 And drpTransactionTypelist.SelectedIndex <> 85 Then
                            GetMessage("Please Select a Partner!")
                        End If
                    End If
                ElseIf drppartnerid.Text = smaccountid And drpglobe.Enabled = True And drpglobe.Text = "-Select-" And drpTransactionTypelist.SelectedIndex <> 20 And drpTransactionTypelist.SelectedIndex <> 21 Then
                    GetMessage("Please Specify Account!")
                End If

            Else
                '------------------------------------ 'for IAD Fix--------------------------------------------
                If (Session("roles") = "IAD" Or Session("roles") = "KP-IAD") And (ReportType = 7 Or ReportType = 10) Then
                    If drpPartnerAccountlist.Text = "-Select-" And drpTransactionTypelist.SelectedIndex <> "11" Then
                        If drpTransactionTypelist.SelectedIndex = 52 Or drpTransactionTypelist.SelectedIndex = 53 Then
                            GetMessage("Please Select a Merchant!")

                        End If
                    End If


                Else
                    If drpPeriod.Text = 1 Then
                        If drpBranchName.Text = "-Select-" Then
                            If ReportType = 5 Then
                                GetMessage("Please Select Branch!")
                            Else
                                GetMessage("Only Monthly/Range can Generate By Region and Area Summary Reports!")
                            End If
                        ElseIf drpPartnerAccountlist.Text = "-Select-" Then
                            GetMessage("Please Select a Partner!")

                        End If
                    ElseIf drpPeriod.Text = 2 Or drpPeriod.Text = 3 Then
                        If drppartnerid.Text <> smaccountid Then
                            If drpPartnerAccountlist.Text = "-Select-" And drpBranchName.Text = "-Select-" Then
                                GetMessage("Please Select Branch/Partner!")
                            ElseIf drpPartnerAccountlist.Text <> "-Select-" And drpRegion.Text = "-Select-" Then
                                GetMessage("Please Select Region!")
                            ElseIf drpBranchName.Text = "-Select-" And ReportType = 5 Then
                                GetMessage("Please Select Branch!")
                            End If
                        Else
                            If drpglobe.Enabled = True And drpglobe.Text = "-Select-" And (drpTransactionTypelist.Text = 1 Or drpTransactionTypelist.Text = 2) Then
                                GetMessage("Please Specify Account!")
                            End If
                        End If
                    End If
                End If
                '------------------------------------ 'for IAD Fix--------------------------------------------

            End If
            '---------------wallet new for serach box --------------------
            If SrchBox.Text = "" Or SrchBox.Text = String.Empty And (drpTransactionTypelist.SelectedIndex = 52 Or drpTransactionTypelist.SelectedIndex = 53 Or drpTransactionTypelist.SelectedIndex = 55) Then
                If (ReportType = 7 Or ReportType = 10) And (drpTransactionTypelist.SelectedIndex = 52 Or drpTransactionTypelist.SelectedIndex = 53) Then
                    GetMessage("Kindly Input Wallet User.")
                    SrchBox.Enabled = True
                    SrchBox.Visible = True
                ElseIf (ReportType = 7 Or ReportType = 10) And drpTransactionTypelist.SelectedIndex = 55 Then
                    GetMessage("Kindly Input Wallet Number.")
                    SrchBox.Enabled = True
                    SrchBox.Visible = True
                Else
                    SrchBox.Enabled = False
                    SrchBox.Visible = False
                End If
            End If

            If IsError = False Then
                getReports()
            End If

        Catch ex As Exception
            kplog.Error(ex.ToString() + " btngenerate_Click")
            'GetMessage(ex.ToString())
            GetMessage("Please Call Admin Support!")
            'Response.Redirect("CorpMenu.aspx?RptType=" & ReportType)
        End Try
    End Sub

    '==================================================================================================================================================
    '==========================================================   GETTING REPORTS DATA   ==============================================================

    Public Sub getReports()
        Dim transtype As Integer = drpTransactionTypelist.Text
        Dim period As Integer = drpPeriod.Text

        Session("regioncode") = Nothing
        Session("areacode") = Nothing
        Session("branchcode") = Nothing
        Session("AccountID") = Nothing
        Session("oldzonecode") = Nothing
        getaccountid()
        getRegionCode()
        getAreaCode()
        getBRanchCode()
        getoldzonecode()
        rCode = Session("regioncode")
        aCode = Session("areacode")
        bCode = Session("branchcode")
        oldzCode = Session("oldzonecode")
        If (ReportType = 7 Or ReportType = 10) And (drpTransactionTypelist.SelectedIndex = 52 Or drpTransactionTypelist.SelectedIndex = 53 Or drpTransactionTypelist.SelectedIndex = 55) Then
            partnerID = drppartnerid.Text

        Else
            If ((ReportType = 5 Or ReportType = 6) And drpglobe.Text <> "-Select-" And drpglobe.Visible = True) Then
                partnerID = drpsubpartnerid.Text
            Else
                partnerID = Session("AccountID")
            End If
        End If


        If sotxnreftype = "" And ReportType = 1 Then
            sotxnreftype = "APIandWSC"
        End If
        'PERIOD
        Select Case period
            Case 1 'DAILY
                gendate = Convert.ToDateTime(txtDate.Text).ToString("yyyy-MM-dd")
                _day = Convert.ToDateTime(txtDate.Text).ToString("MMdd")
                _year = Convert.ToDateTime(txtDate.Text).ToString("yyyy")
                _dategenerate = txtDate.Text
                _dateofreport = txtDate.Text

                expressmonth = Convert.ToDateTime(txtDate.Text).ToString("MM")
                expressday = Convert.ToDateTime(txtDate.Text).ToString("dd")
                expressdb = String.Format("Reports{0}{1}", expressmonth, _year)
            Case 2 'MONTHLY

                gendate = drpMonth.SelectedIndex.ToString().PadLeft(2, "0") & drpYear.Text

                _day = drpMonth.Text
                _year = drpYear.Text
                _monthnoofdays = DateTime.DaysInMonth(drpYear.SelectedItem.Text.Trim(), drpMonth.SelectedValue)
                _dateofreport = String.Format("{0} {1}", MonthName(drpMonth.Text), drpYear.Text)

                expressdb = String.Format("Reports{0}{1}", _day.ToString.PadLeft(2, CType("0", Char)), _year)
            Case 3 'RANGE
                gendate = Convert.ToDateTime(txtdateFrom.Text).ToString("yyyy-MM-dd")
                gendateto = Convert.ToDateTime(txtdateTo.Text).ToString("yyyy-MM-dd")

                If drppartnerid.Text = psslaiaccountid And gendate = gendateto And partnername <> Nothing And transtype = 1 Then
                    Dim _datef = Convert.ToDateTime(txtdateFrom.Text).AddDays(-1)
                    _monthnoofdays = Math.Abs(Convert.ToDateTime(_datef).Subtract(Convert.ToDateTime(txtdateTo.Text)).Days)
                    _monthnoofdays += 1
                    If _monthnoofdays = 1 Then
                        _day = Convert.ToDateTime(_datef).ToString("MMdd")
                    Else
                        _day = Convert.ToDateTime(_datef).ToString("MM")
                    End If
                    _year = Convert.ToDateTime(_datef).ToString("yyyy")
                    _dategenerate = _datef

                    Dim monday = Convert.ToDateTime(txtdateFrom.Text).DayOfWeek.ToString()
                    If monday = "Monday" Then
                        _datef = Convert.ToDateTime(txtdateFrom.Text).AddDays(-3)
                        _monthnoofdays = Math.Abs(Convert.ToDateTime(_datef).Subtract(Convert.ToDateTime(txtdateTo.Text)).Days)
                        _monthnoofdays += 1
                        _dateofreport = String.Format("{0} 16:00:01 TO {1}  16:00:00", _datef.ToString("yyyy-MM-dd"), Convert.ToDateTime(txtdateTo.Text).ToString("yyyy-MM-dd"))
                    Else
                        _dateofreport = String.Format("{0} 16:00:01 TO {1}  16:00:00", _datef.ToString("yyyy-MM-dd"), Convert.ToDateTime(txtdateTo.Text).ToString("yyyy-MM-dd"))
                    End If
                Else
                    _monthnoofdays = Math.Abs(Convert.ToDateTime(txtdateFrom.Text).Subtract(Convert.ToDateTime(txtdateTo.Text)).Days)
                    _monthnoofdays += 1
                    If _monthnoofdays = 1 Then
                        _day = Convert.ToDateTime(txtdateFrom.Text).ToString("MMdd")
                        expressmonth = Convert.ToDateTime(txtdateFrom.Text).ToString("MM")
                        expressday = Convert.ToDateTime(txtdateFrom.Text).ToString("dd")
                    Else
                        _day = Convert.ToDateTime(txtdateFrom.Text).ToString("MM")
                        expressmonth = Convert.ToDateTime(txtdateFrom.Text).ToString("MM")
                    End If
                    _year = Convert.ToDateTime(txtdateFrom.Text).ToString("yyyy")
                    _dategenerate = txtdateFrom.Text
                    _dateofreport = String.Format("{0} TO {1}", txtdateFrom.Text, txtdateTo.Text)
                End If
        End Select

        'TRANSTYPE
        Select Case transtype
            Case 1 'SENDOUT
                If ReportType = 2 Then
                    'sendoutbillspay()
                    billspaysendout()
                ElseIf ReportType = 7 Or ReportType = 10 Then
                    walletsendout()
                Else
                    sendout()
                End If
            Case 2 'CLAIMED
                If ReportType = 7 Or ReportType = 10 Then
                    walletpayout()
                ElseIf ReportType = 1 And paypalid = drppartnerid.Text And (userrole = "KP-SECCOMLNCR" Or userrole = "KP-SECCOM" Or userrole = "KP-SECCOMVISMIN") Then
                    paypal("Claimed")
                Else
                    claimed()
                End If
            Case 3 'UNCLAIMED
                If ReportType = 7 Or ReportType = 10 Then
                    walletunclaimed()
                ElseIf ReportType = 4 Then
                    unclaimedFU()
                Else
                    unclaimed()
                End If
            Case 4 'RETURN TO SENDER
                returntosender()
            Case 5 'CANCEL SENDOUT
                If ReportType = 2 Then
                    billspaycancelsendout()
                ElseIf ReportType = 7 Or ReportType = 10 Then
                    walletcancelso()
                Else
                    cancelsendout()
                End If
            Case 6 'AMENDMENTS/CHANGE DETAILS
                If ReportType = 7 Or ReportType = 10 Then
                    walletammendments()
                Else
                    amendments()
                End If
            Case 7 'PAYOUT SUMMARY
                claimed()
            Case 8 'CANCELLED PAYOUT
                If ReportType = 7 Or ReportType = 10 Then
                    walletcancelpo()
                ElseIf ReportType = 1 And paypalid = drppartnerid.Text And (userrole = "KP-SECCOMLNCR" Or userrole = "KP-SECCOM" Or userrole = "KP-SECCOMVISMIN") Then
                    paypal("CancelPO")
                Else
                    cancelledpayout()
                End If
            Case 9 'CHANGE DETAILS
                billspaychangedetails()
            Case 10
                mlexpresspayout()
            Case 11
                expressloading()
            Case 12
                transactionhistory()
            Case 13
                profitsharereceivepobranchtosm()
            Case 14
                profitsharesendposmtobranch()
            Case 15
                profitsharesendposmtosm()
            Case 16
                If Session("roles") = "CAD-DIVMAN" Then
                    possalesbook()
                Else
                    salesjournal()
                End If
            Case 17
                terminaltxnsummary()
            Case 18
                terminalreading()
            Case 19
                dailyservicefee()
            Case 20
                smdetailedreportsend()
            Case 21
                smmldetailedreportreceive()
            Case 22
                smsummaryreportsend()
            Case 23
                smmlsummaryreportreceive()
            Case 24
                smmlprofitsharesend()
            Case 25
                smmlprofitsharereceive()
            Case 26
                mlsmsend()
            Case 27
                mlsmpayout()
            Case 28
                posreport()
            Case 29
                expresspostaudit()
            Case 30
                smsummaryreport()
            Case 31
                electronicjournal()
            Case 32
                xzreading()
            Case 33
                or_ar_registerreport()
            Case 34
                transactionlogs()
            Case 35
                walletloading()
            Case 36
                walletkppo(0)
            Case 37
                walletcashout()
            Case 38
                walletbillspay()
            Case 39
                walletcustomerbal()
            Case 40
                Sales()
            Case 41
                walleteload()
            Case 42
                walletkppo(1)
            Case 43
                WalletTransReport()
            Case 44
                Walletcustlist()
            Case 45
                walletcashoutclaimed()
            Case 46
                walletpaymentsendout()
            Case 47
                walletpaymentpayout()
            Case 48
                walletexpresspaymentso()
            Case 49
                walletexpresspaymentpo()
            Case 50
                xzreading()
            Case 51
                or_ar_registerreport()
            Case 52
                walletpaymentsendout()
            Case 53
                walletpaymentpayout()
            Case 54
                or_ar_registerreport()
            Case 55
                wallettranshistory()
            Case 56
                mlshopreport()
            Case 57
                sendoutbillspay()
            Case 58
                express_summary()
            Case 59
                expresseload()
            Case 60
                walletcorporatepo()
            Case 61
                expresswalletpo()
            Case 62
                walletregistration()
            Case 63
                walletaccount()
            Case 64
                walletsecuritybank()
            Case 65
                If ReportType = 11 Then
                    batchupload()
                End If
            Case 67
                DomesticSOtoWalletPO()
            Case 68
                MLWalletReturntoSender()

            Case 69
                GlobalSOtoWalletPO()
            Case 70
                DailySettlement() '------darwin
            Case 71
                WeeklyStatement()
            Case 72
                MonthlyStatement()
            Case 73
                WeeklySummaryStatement()
            Case 74
                MonthlySummaryStatement()
            Case 75
                WesterUnionRefund()
            Case 76
                ExpressCancelledBillspayment()
            Case 77
                WalletCancelledBillspayment()
                'Case 78
                '    walletUserSummary()
                'Case 79
                '    walletUsersEnding()
            Case 80
                HOBatchUplaod()
            Case 81
                'Transaction Report
                FeedbackFileBillspayment2(partnerID, gendate, gendateto)
            Case 82
                'Abstract Report
                FeedbackFileBillspayment(partnerID, gendate, gendateto)
            Case 83
                WesterUnionPayment()
            Case 84
                'ML Wallet Loading Adjustment Report
                WalletLoadingAdjustment()
            Case 85
                AllPartnersVol()
            Case 86
                SmartPromo()
            Case 87
                WalletBillspayForceCommitManual()
            Case 88
                WalletBillspayForceCommitAuto()
        End Select
        If (Class1.Emailor = True And accountID <> smaccountid And Session("roles") <> "KP-PARTNERTELLER" And Session("roles") <> "KP-SUPERVISOR" And Session("roles") <> "KP-MANAGER" And Session("roles") <> "KP-SMHO") Then
            If drpPeriod.SelectedValue = "2" Or drpPeriod.SelectedValue = "3" Then
                _BackWork.WorkerSupportsCancellation = True
                _BackWork.WorkerReportsProgress = True
                _BackWork.RunWorkerAsync()
            End If
        End If
    End Sub

    '1 SENDOUT
    Private Sub sendout()
        dtable = GetDatatable()
        dtable.Clear()
        dtable1 = GetDatatable()
        dtable1.Clear()
        dtmerger = GetDatatable()
        dtmerger.Clear()

        Try
            If drpPeriod.Text = 1 Or _monthnoofdays = 1 Then 'DAILY  
                If ReportType = 5 Then
                    If _monthnoofdays = 1 Then
                        expressdb = String.Format("Reports{0}{1}", Convert.ToDateTime(txtdateFrom.Text).ToString("MM"), _year)
                    Else
                        expressdb = String.Format("Reports{0}{1}", Convert.ToDateTime(txtDate.Text).ToString("MM"), _year)
                    End If
                    strquery = String.Format("call kpOFW.HOGetExpressSO('{0}','{1}','{2}','{3}')", expressdb, expressday, _year, partnerID)
                    strquery1 = String.Format("Call kpbillspayment.HOgetdailysendoutBP ('{0}','{1}','{2}');", _day, partnerID, _year)
                ElseIf partnerID = westernunionid Then 'western union
                    'strquery = String.Format("call kppartners.HOgetdailysendout_Partners('{0}','{1}','{2}','{3}','{4}','{5}','WU');", _day, partnerID, _year, sotxnreftype, username, userrole)
                    strquery = String.Format("call kppartners.HOgetdailysendout_Partners('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','WU','{11}');", _day, partnerID, zCode, rCode, aCode, bCode, usertype, _year, sotxnreftype, username, userrole, oldzCode)
                    kplog.Info("DONE Query in Western Union Partner(daily): " + strquery.ToString())
                Else
                    If drppartnerid.Text = smaccountid And ReportType = 6 And partnername <> Nothing Then
                        strquery = String.Format("call kppartners.`HOgetdailySMSO`('{0}','{1}','{2}','{3}','{4}','{5}','{6}');", _day, partnerID, _year, username, userrole, Session("subterminalid"), Session("superviselocationid"))
                    ElseIf sotxnreftype = "SpecialPartner" Then
                        Dim _db As String = String.Empty
                        If _monthnoofdays = 1 Then
                            _db = "sendout" + Convert.ToDateTime(txtdateFrom.Text).ToString("MMddyyyy")
                        Else
                            _db = "sendout" + Convert.ToDateTime(txtDate.Text).ToString("MMddyyyy")
                        End If
                        strquery = String.Format("call reportsdb.HOgetdailysendout('{0}','{1}','{2}','{3}','{4}','{5}');", partnerID, _year, _day, username, userrole, _db)
                    Else
                        If userrole = "KP-HKDTELLER" Or userrole = "KP-HKDPARTNERTELLER" Then
                            strquery = String.Format("call kppartners.HOgetdailysendoutHKD('{0}','{1}','{2}','{3}','{4}','{5}');", _day, partnerID, _year, sotxnreftype, username, userrole)
                        Else
                            strquery = String.Format("call kppartners.HOgetdailysendout('{0}','{1}','{2}','{3}','{4}','{5}');", _day, partnerID, _year, sotxnreftype, username, userrole)
                        End If
                    End If
                End If
                _loop = 2
                GoTo dataloop
            ElseIf drpPeriod.Text = 2 Or drpPeriod.Text = 3 Or _monthnoofdays > 1 Then 'MONTHLY/RANGE
                If drpPeriod.Text = 2 Then
                    If _day < 10 Then
                        _day = String.Concat("0", _day)
                    End If
afterdataloop:
                    If _loop <= _monthnoofdays Then
                        For i As Integer = _loop To _monthnoofdays
                            If ReportType = 5 Then
                                expressdb = String.Format("Reports{0}{1}", _day, _year)
                                strquery = String.Format("call kpOFW.HOGetExpressSO('{0}','{1}','{2}','{3}')", expressdb, i.ToString.PadLeft(2, CType("0", Char)), _year, partnerID)
                                strquery1 = String.Format("Call kpbillspayment.HOgetdailysendoutBP ('{0}{1}','{2}','{3}');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, _year)
                            ElseIf partnerID = westernunionid Then 'western union
                                'strquery = String.Format("call kppartners.HOgetdailysendout_Partners('{0}{1}','{2}','{3}','{4}','{5}','{6}','WU');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, _year, sotxnreftype, username, userrole)
                                strquery = String.Format("call kppartners.HOgetdailysendout_Partners('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','WU','{12}');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, zCode, rCode, aCode, bCode, usertype, _year, sotxnreftype, username, userrole, oldzCode)
                                kplog.Info("DONE Query in Western Union Partner(MONTHLY/RANGE): " + strquery.ToString())
                            Else
                                If userrole = "KP-HKDTELLER" Or userrole = "KP-HKDPARTNERTELLER" Then
                                    strquery = String.Format("call kppartners.HOgetdailysendoutHKD('{0}{1}','{2}','{3}','{4}','{5}','{6}');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, _year, sotxnreftype, username, userrole)
                                ElseIf sotxnreftype = "SpecialPartner" Then
                                    Dim _db As String = "sendout" + _day + i.ToString.PadLeft(2, CType("0", Char)) + _year
                                    strquery = String.Format("call reportsdb.HOgetdailysendout('{0}','{1}','{4}{5}','{2}','{3}','{6}');", partnerID, _year, username, userrole, _day, i.ToString.PadLeft(2, CType("0", Char)), _db)
                                Else
                                    strquery = String.Format("call kppartners.HOgetdailysendout('{0}{1}','{2}','{3}','{4}','{5}','{6}');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, _year, sotxnreftype, username, userrole)
                                End If
                            End If
                            _loop = i + 1
                            GoTo dataloop
                        Next
                    Else
                        GoTo _finaldata
                    End If
                ElseIf drpPeriod.Text = 3 Then
                    Dim _datefrom As Date = txtdateFrom.Text
afterdataloop1:
                    If _loop <= _monthnoofdays Then
                        For i As Integer = _loop To _monthnoofdays
                            _day = Convert.ToDateTime(_datefrom).ToString("MM")
                            _year = Convert.ToDateTime(_datefrom).ToString("yyyy")
                            If ReportType = 5 Then
                                expressdb = String.Format("Reports{0}{1}", _day, _year)
                                strquery = String.Format("call kpOFW.HOGetExpressSO('{0}','{1:dd}','{2}','{3}')", expressdb, Convert.ToDateTime(_datefrom), _year, partnerID)
                                strquery1 = String.Format("Call kpbillspayment.HOgetdailysendoutBP ('{0}{1:dd}','{2}','{3}');", _day, Convert.ToDateTime(_datefrom), partnerID, _year)
                            ElseIf partnerID = westernunionid Then 'western union
                                'strquery = String.Format("call kppartners.HOgetdailysendout('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','WU');", _day, Convert.ToDateTime(_datefrom), partnerID, _year, sotxnreftype, username, userrole)
                                strquery = String.Format("call kppartners.HOgetdailysendout_Partners('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','WU','{12}');", _day, Convert.ToDateTime(_datefrom), partnerID, zCode, rCode, aCode, bCode, usertype, _year, sotxnreftype, username, userrole, oldzCode)

                            Else
                                If userrole = "KP-HKDTELLER" Or userrole = "KP-HKDPARTNERTELLER" Then
                                    strquery = String.Format("call kppartners.HOgetdailysendoutHKD('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}');", _day, Convert.ToDateTime(_datefrom), partnerID, _year, sotxnreftype, username, userrole)
                                ElseIf sotxnreftype = "SpecialPartner" Then
                                    Dim _db As String = "sendout" + Convert.ToDateTime(_datefrom).ToString("MMddyyyy")
                                    strquery = String.Format("call reportsdb.HOgetdailysendout('{0}','{1}','{4}{5:dd}','{2}','{3}','{6}');", partnerID, _year, username, userrole, _day, Convert.ToDateTime(_datefrom), _db)
                                Else
                                    strquery = String.Format("call kppartners.HOgetdailysendout('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}');", _day, Convert.ToDateTime(_datefrom), partnerID, _year, sotxnreftype, username, userrole)
                                End If
                            End If
                            _datefrom = _datefrom.AddDays(1)
                            _loop = i + 1
                            GoTo dataloop
                        Next
                    Else
                        GoTo _finaldata
                    End If
                End If
            End If
dataloop:
            If ReportType = 5 Then
                expresstrap = 0
                If expresstrap = 0 Then
                    Con.OpenCon("KPMLExpress")
                    GoTo _read
                End If
_billspayExpress:
                If expresstrap = 1 Then
                    Con.OpenCon("KPBillsPayment")
                    strquery = strquery1
                    GoTo _read

                End If
            Else
                If partnerID = westernunionid Then
                    Con.OpenCon("WesternUnion")
                    expresstrap = 0
                    kplog.Info("Connection Open ('Western Union'): " + Con.GetCon.ConnectionString())
                Else
                    getconnections()
                End If

                expresstrap = 0
_apinewconnect:
                If ReportType = 1 And expresstrap = 1 Then
                    Con.OpenCon("KPAPINEW")
                End If
            End If
_read:
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                If dr.HasRows Then
                    dtable.Load(dr)
                    dtmerger.Merge(dtable)
                End If
                dr.Close()
                cmd = Nothing
                kplog.Info("Done Load to dtmerger")
            End Using
            If ReportType = 5 And expresstrap = 0 Then
                expresstrap = 1
                GoTo _billspayExpress
            ElseIf ReportType = 1 And expresstrap = 0 Then
                If Not partnerID = westernunionid Then
                    expresstrap = 1
                    GoTo _apinewconnect
                End If
            End If


            If _loop <= _monthnoofdays Then
                If drpPeriod.Text = 2 Then
                    GoTo afterdataloop
                ElseIf drpPeriod.Text = 3 Then
                    GoTo afterdataloop1
                End If
            End If

            Dim counter = 0
 For Each row As DataRow In dtmerger.Rows
                If Not (drppartnerid.Text = smaccountid And ReportType = 6 And partnername <> Nothing) Then
                    Dim canceldate As String = "0000-00-00 00:00:00"
                    Dim transdate As String = "0000-00-00 00:00:00"
                    Dim _canceldate As String = If(Not IsDBNull(row.Item("cancelleddate")), Trim(row.Item("cancelleddate")), "0000-00-00 00:00:00")
                    Dim cancelreason As String = If(Not IsDBNull(row.Item("cancelreason")), Trim(row.Item("cancelreason")), "-")
                    Dim _tdate As String = If(Not IsDBNull(row.Item("transdate")), Trim(row.Item("transdate")), "0000-00-00 00:00:00")
                    If _canceldate <> "0000-00-00 00:00:00" Then
                        canceldate = Convert.ToDateTime(Trim(row.Item("cancelleddate"))).ToString("yyyy-MM-dd")
                        transdate = Convert.ToDateTime(Trim(row.Item("transdate"))).ToString("yyyy-MM-dd")
                    End If
                    If UCase(cancelreason) = "CANCEL" And (Trim(row.Item("flag")) = "" Or canceldate = _dategenerate) And canceldate <> transdate Then
                        dtmerger.Rows(counter).BeginEdit()
                        dtmerger.Rows(counter)("kptn") = "-"
                        dtmerger.Rows(counter)("currency") = If(Not IsDBNull(row.Item("Currency")), Trim(row.Item("Currency")), "-")
                        dtmerger.Rows(counter)("adjprincipal") = If(Not IsDBNull(row.Item("adjprincipal")), CType(Trim(row.Item("adjprincipal")), System.Decimal), 0)
                        dtmerger.Rows(counter)("adjCharge") = If(Not IsDBNull(row.Item("adjCharge")), CType(Trim(row.Item("adjCharge")), System.Decimal), 0)
                        dtmerger.Rows(counter).EndEdit()
                        dtmerger.AcceptChanges()
                    End If
                End If
                counter = counter + 1
            Next

_finaldata:
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                GetOperatorAndBranch(dtmerger, "PO")
                If ReportType = 6 And drppartnerid.Text = smaccountid Then
                    GetSMOperator(dtmerger, "SO")
                Else
                    'getoperatormobilebillspay(dtmerger, "SO")
                    getoperatorExpress(dtmerger, "SO")
                End If
                If drppartnerid.Text = smaccountid And ReportType = 6 And partnername <> Nothing Then
                    smflag = "TO RECEIVE : "
                    loadreport("SOPO")
                Else
                    loadreport("Sendout")
                End If
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " sendout")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                kplog.Info("Timeout Expired")
                sendout()
            Else
                'GetMessage(ex.ToString() + "  " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    '2 CLAIMED
    Private Sub claimed()
        dtmerger = GetDatatable()
        dtmerger.Clear()
        dtable = GetDatatable()
        dtable.Clear()
        Dim domesticdb As String = Nothing
        Dim daily As String = Convert.ToDateTime(txtDate.Text).ToString("yyyy")
        Dim monthly As String = drpYear.Text.ToString()
        Dim rangef As String = Convert.ToDateTime(txtdateFrom.Text).ToString("yyyy")
        Dim ranget As String = Convert.ToDateTime(txtdateTo.Text).ToString("yyyy")
        Dim flag As String = ""
        Dim walletdate As String = Convert.ToDateTime(txtDate.Text).ToString("yyyy-MM-dd")

        Try

            If drpPartnerAccountlist.SelectedItem.Text = "UNITELLER" Then
                If drpglobe.SelectedItem.Text = "MLREMIT" Then
                    flag = "10"
                Else
                    flag = "0"
                End If
            End If
            If drpPeriod.Text = 1 Or _monthnoofdays = 1 Then 'DAILY
                If ReportType = "1" Then
                    If (partnerID = newyorkbayid) And usertype = "NOTIAD" Then
                        strquery = String.Format("call kppartners.HOgetdailypayoutPerPartner('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}');", _day, partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole)
                    ElseIf partnerID = westernunionid Then 'western
                        strquery = String.Format("call kppartners.HOgetdailypayout_Partners('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','WU');", _day, partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode, flag)
                    ElseIf partnerID = skybridge Then 'skybridge
                        strquery = String.Format("call kppartners.HOgetdailypayout_Partners('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','SKY');", _day, partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode, flag)
                    Else
                        strquery = String.Format("call kppartners.HOgetdailypayout('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}');", _day, partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode, flag)
                    End If
                    If partnerID = "MLCIP130005" Then 'AUB
                        strquery1 = String.Format("call kppartners.HOgetdailypayout_Partners('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','AUB');", _day, partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode, flag)
                    End If

                    If Session("roles") = "KP-CAD" Or Session("roles") = "CAD" Then
                        committedquery = String.Format("call kppartners.HOgetdailypayouthalfcommitted('{0}','{1}','{2}','{3}');", _day, partnerID, _year, flag)
                    End If

                ElseIf ReportType = 5 Then
                    If _monthnoofdays = 1 Then
                        expressdb = String.Format("Reports{0}{1}", Convert.ToDateTime(txtdateFrom.Text).ToString("MM"), _year)
                    Else
                        expressdb = String.Format("Reports{0}{1}", Convert.ToDateTime(txtDate.Text).ToString("MM"), _year)
                    End If
                    strquery1 = String.Format("call kpforms.HOGetExpressDomesticPO('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}');", _day, _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                    strquery = String.Format("call kpOFW.HOGetExpressPO('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", expressdb, expressday, _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                    pstrquery = String.Format("call kppartners.HOgetdailypayoutAPIExpress('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}');", _day, _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                    'walquery = String.Format("call KPWalletReportsSP.getWalletPayoutExpress('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}');", walletdate, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                    walquery = String.Format("call getWalletPayoutExpress('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}');", _day, _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                    wscquery = String.Format("call kppartners.HOgetdailypayoutWSCExpress('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}');", _day, _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                    fstrquery = String.Format("call kppartners.HOgetdailypayoutFUExpress('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}');", _day, _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                    kptquery = String.Format("call kptogoadmin.HOgetdailypayoutKPTOGOExpress('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}');", _day, _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                    gstrquery = String.Format("call kpformsglobal.HOGetExpressGlobalPO('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}');", _day, _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                    strqueryaub = String.Format("call kppartners.HOgetdailypayoutExpress_Partners('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','AUB');", _day, _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                    domesticdb = String.Format("kpdomestic{0}.payout{1}", _year, _day) 'kp8 xpress
                    'kp8strquery = String.Format("call kp8reportsdb.Kp8MLExpress_Claimed('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}');", domesticdb, _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                    strquerysky = String.Format("call kppartners.HOgetdailypayoutExpress_Partners('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','SKY');", _day, _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)

                ElseIf sotxnreftype = "SpecialPartner" Then
                    Dim _db As String = String.Empty
                    Dim _db1 As String = String.Empty
                    If _monthnoofdays = 1 Then
                        _db1 = "sendout" + Convert.ToDateTime(txtdateFrom.Text).ToString("MMddyyyy")
                        _db = "payout" + Convert.ToDateTime(txtdateFrom.Text).ToString("MMddyyyy")
                    Else
                        _db1 = "sendout" + Convert.ToDateTime(txtDate.Text).ToString("MMddyyyy")
                        _db = "payout" + Convert.ToDateTime(txtDate.Text).ToString("MMddyyyy")
                    End If

                    strquery = String.Format("call reportsdb.HOgetdailypayout('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}');", partnerID, _year, _day, username, userrole, _db, _db1, zCode, rCode, aCode, bCode, usertype, oldzCode)
                    strquery1 = String.Format("call kpdomestic.HOgetdailypayoutDomestic('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}');", partnerID, _year, _day, username, userrole, _db, _db1, zCode, rCode, aCode, bCode, usertype, oldzCode)
                    'kp8strquery = String.Format("call kp8reportsdb.HOgetdailypayoutKP8('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}');", partnerID, _year, _day, username, userrole, _db, _db1, zCode, rCode, aCode, bCode, usertype, oldzCode)
                    gstrquery = String.Format("call kpglobal.HOgetdailypayoutGlobal('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}');", partnerID, _year, _day, username, userrole, _db, _db1, zCode, rCode, aCode, bCode, usertype, oldzCode)

                Else
                    If drppartnerid.Text = smaccountid And ReportType = 6 And partnername <> Nothing Then
                        strquery = String.Format("call kppartners.`HOgetdailySMPO`('{0}','{1}','{2}','{3}','{4}','{5}','{6}');", _day, partnerID, _year, username, userrole, Session("subterminalid"), Session("superviselocationid"))
                    ElseIf (partnerID = kabayanid) And usertype = "NOTIAD" Then
                        strquery = String.Format("call kppartners.HOgetdailypayoutPerPartner('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}');", _day, partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole)
                    Else
                        strquery = String.Format("call kppartners.HOgetdailypayout('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}');", _day, partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode)
                    End If

                End If
                _loop = 2
                GoTo dataloop
            ElseIf drpPeriod.Text = 2 Or drpPeriod.Text = 3 Or _monthnoofdays > 1 Then 'MONTHLY/RANGE
                If drpPeriod.Text = 2 Then
                    If _day < 10 Then
                        _day = String.Concat("0", _day)
                    End If
afterdataloop:
                    If _loop <= _monthnoofdays Then
                        For i As Integer = _loop To _monthnoofdays
                            walletdate = monthly + "-" + _day + "-" + i.ToString.PadLeft(2, CType("0", Char))
                            If ReportType = "1" Then
                                If (partnerID = newyorkbayid) And usertype = "NOTIAD" Then
                                    strquery = String.Format("call kppartners.HOgetdailypayoutPerPartner('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole)
                                ElseIf partnerID = westernunionid Then 'western
                                    strquery = String.Format("call kppartners.HOgetdailypayout_Partners('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}','WU');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode, flag)
                                ElseIf partnerID = skybridge Then 'skybridge
                                    strquery = String.Format("call kppartners.HOgetdailypayout_Partners('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}','SKY');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode, flag)
                                Else
                                    strquery = String.Format("call kppartners.HOgetdailypayout('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode, flag)
                                End If
                                If partnerID = "MLCIP130005" Then 'AUB
                                    strquery1 = String.Format("call kppartners.HOgetdailypayout_Partners('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}','AUB');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode, flag)
                                End If
                                If Session("roles") = "KP-CAD" Or Session("roles") = "CAD" Then
                                    committedquery = String.Format("call kppartners.HOgetdailypayouthalfcommitted('{0}{1}','{2}','{3}','{4}');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, _year, flag)
                                End If

                            ElseIf ReportType = 5 Then
                                expressdb = String.Format("Reports{0}{1}", _day, _year)
                                strquery1 = String.Format("call kpforms.HOGetExpressDomesticPO('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", _day, i.ToString.PadLeft(2, CType("0", Char)), _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                strquery = String.Format("call kpOFW.HOGetExpressPO('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", expressdb, i.ToString.PadLeft(2, CType("0", Char)), _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                pstrquery = String.Format("call kppartners.HOgetdailypayoutAPIExpress('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", _day, i.ToString.PadLeft(2, CType("0", Char)), _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                'walquery = String.Format("call KPWalletReportsSP.getWalletPayoutExpress('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}');", walletdate, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                walquery = String.Format("call getWalletPayoutExpress('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}');", _day, _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                wscquery = String.Format("call kppartners.HOgetdailypayoutWSCExpress('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", _day, i.ToString.PadLeft(2, CType("0", Char)), _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                fstrquery = String.Format("call kppartners.HOgetdailypayoutFUExpress('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", _day, i.ToString.PadLeft(2, CType("0", Char)), _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                kptquery = String.Format("call kptogoadmin.HOgetdailypayoutKPTOGOExpress('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", _day, i.ToString.PadLeft(2, CType("0", Char)), _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                gstrquery = String.Format("call kpformsglobal.HOGetExpressGlobalPO('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", _day, i.ToString.PadLeft(2, CType("0", Char)), _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                strqueryaub = String.Format("call kppartners.HOgetdailypayoutExpress_Partners('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','AUB');", _day, i.ToString.PadLeft(2, CType("0", Char)), _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                domesticdb = String.Format("kpdomestic{0}.payout{1}{2}", _year, _day, i.ToString.PadLeft(2, CType("0", Char))) 'kp8 xpress
                                'kp8strquery = String.Format("call kp8reportsdb.Kp8MLExpress_Claimed('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}');", domesticdb, _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                strquerysky = String.Format("call kppartners.HOgetdailypayoutExpress_Partners('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','SKY');", _day, i.ToString.PadLeft(2, CType("0", Char)), _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)

                            ElseIf sotxnreftype = "SpecialPartner" Then
                                Dim _db As String = "payout" + _day + i.ToString.PadLeft(2, CType("0", Char)) + _year
                                Dim _db1 As String = "sendout" + _day + i.ToString.PadLeft(2, CType("0", Char)) + _year
                                strquery = String.Format("call reportsdb.HOgetdailypayout('{0}','{1}','{2}{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}');", partnerID, _year, _day, i.ToString.PadLeft(2, CType("0", Char)), username, userrole, _db, _db1, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                strquery1 = String.Format("call kpdomestic.HOgetdailypayoutDomestic('{0}','{1}','{2}{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}');", partnerID, _year, _day, i.ToString.PadLeft(2, CType("0", Char)), username, userrole, _db, _db1, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                'kp8strquery = String.Format("call kp8reportsdb.HOgetdailypayoutKP8('{0}','{1}','{2}{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}');", partnerID, _year, _day, i.ToString.PadLeft(2, CType("0", Char)), username, userrole, _db, _db1, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                gstrquery = String.Format("call kpglobal.HOgetdailypayoutGlobal('{0}','{1}','{2}{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}');", partnerID, _year, _day, i.ToString.PadLeft(2, CType("0", Char)), username, userrole, _db, _db1, zCode, rCode, aCode, bCode, usertype, oldzCode)

                            Else
                                If (partnerID = kabayanid) And usertype = "NOTIAD" Then
                                    strquery = String.Format("call kppartners.HOgetdailypayoutPerPartner('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole)
                                Else
                                    strquery = String.Format("call kppartners.HOgetdailypayout('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode)
                                End If

                            End If
                            _loop = i + 1
                            GoTo dataloop
                        Next
                    Else
                        GoTo _finaldata
                    End If

                ElseIf drpPeriod.Text = 3 Then
                    Dim _datefrom As Date = txtdateFrom.Text
afterdataloop1:
                    If _loop <= _monthnoofdays Then
                        For i As Integer = _loop To _monthnoofdays
                            _day = Convert.ToDateTime(_datefrom).ToString("MM")
                            _year = Convert.ToDateTime(_datefrom).ToString("yyyy")
                            walletdate = Convert.ToDateTime(_datefrom).ToString("yyyy-MM-dd")
                            If ReportType = "1" Then
                                If (partnerID = newyorkbayid) And usertype = "NOTIAD" Then
                                    strquery = String.Format("call kppartners.HOgetdailypayoutPerPartner('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}');", _day, Convert.ToDateTime(_datefrom), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole)
                                ElseIf partnerID = westernunionid Then 'western
                                    strquery = String.Format("call kppartners.HOgetdailypayout_Partners('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}','WU');", _day, Convert.ToDateTime(_datefrom), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode, flag)
                                ElseIf partnerID = skybridge Then 'skybridge
                                    strquery = String.Format("call kppartners.HOgetdailypayout_Partners('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}','SKY');", _day, Convert.ToDateTime(_datefrom), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode, flag)
                                Else
                                    strquery = String.Format("call kppartners.HOgetdailypayout('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}');", _day, Convert.ToDateTime(_datefrom), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode, flag)
                                End If
                                If Session("roles") = "KP-CAD" Or Session("roles") = "CAD" Then
                                    committedquery = String.Format("call kppartners.HOgetdailypayouthalfcommitted('{0}{1:dd}','{2}','{3}','{4}');", _day, Convert.ToDateTime(_datefrom), partnerID, _year, flag)
                                End If
                                If partnerID = "MLCIP130005" Then 'AUB
                                    strquery1 = String.Format("call kppartners.HOgetdailypayout_Partners('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}','AUB');", _day, Convert.ToDateTime(_datefrom), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode, flag)
                                End If
                            ElseIf ReportType = 5 Then
                                strquery1 = String.Format("call kpforms.HOGetExpressDomesticPO('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", _day, Convert.ToDateTime(_datefrom), _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                expressdb = String.Format("Reports{0}{1}", _day, _year)
                                strquery = String.Format("call kpOFW.HOGetExpressPO('{0}','{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", expressdb, Convert.ToDateTime(_datefrom), _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                pstrquery = String.Format("call kppartners.HOgetdailypayoutAPIExpress('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", _day, Convert.ToDateTime(_datefrom), _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                'walquery = String.Format("call KPWalletReportsSP.getWalletPayoutExpress('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}');", walletdate, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                walquery = String.Format("call getWalletPayoutExpress('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}');", _day, _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                wscquery = String.Format("call kppartners.HOgetdailypayoutWSCExpress('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", _day, Convert.ToDateTime(_datefrom), _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                fstrquery = String.Format("call kppartners.HOgetdailypayoutFUExpress('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", _day, Convert.ToDateTime(_datefrom), _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                kptquery = String.Format("call kptogoadmin.HOgetdailypayoutKPTOGOExpress('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", _day, Convert.ToDateTime(_datefrom), _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                gstrquery = String.Format("call kpformsglobal.HOGetExpressGlobalPO('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", _day, Convert.ToDateTime(_datefrom), _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                strqueryaub = String.Format("call kppartners.HOgetdailypayoutExpress_Partners('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','AUB');", _day, Convert.ToDateTime(_datefrom), _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                domesticdb = String.Format("kpdomestic{0}.payout{1}", _year, _datefrom.ToString("MMdd")) 'kp8 xpress
                                'kp8strquery = String.Format("call kp8reportsdb.Kp8MLExpress_Claimed('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}');", domesticdb, _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                strquerysky = String.Format("call kppartners.HOgetdailypayoutExpress_Partners('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','SKY');", _day, Convert.ToDateTime(_datefrom), _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)

                            ElseIf sotxnreftype = "SpecialPartner" Then
                                Dim _db As String = "payout" + Convert.ToDateTime(_datefrom).ToString("MMddyyyy")
                                Dim _db1 As String = "sendout" + Convert.ToDateTime(_datefrom).ToString("MMddyyyy")
                                strquery = String.Format("call reportsdb.HOgetdailypayout('{0}','{1}','{2}{3:dd}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}');", partnerID, _year, _day, Convert.ToDateTime(_datefrom), username, userrole, _db, _db1, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                strquery1 = String.Format("call kpdomestic.HOgetdailypayoutDomestic('{0}','{1}','{2}{3:dd}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}');", partnerID, _year, _day, Convert.ToDateTime(_datefrom), username, userrole, _db, _db1, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                'kp8strquery = String.Format("call kp8reportsdb.HOgetdailypayoutKP8('{0}','{1}','{2}{3:dd}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}');", partnerID, _year, _day, Convert.ToDateTime(_datefrom), username, userrole, _db, _db1, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                gstrquery = String.Format("call kpglobal.HOgetdailypayoutGlobal('{0}','{1}','{2}{3:dd}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}');", partnerID, _year, _day, Convert.ToDateTime(_datefrom), username, userrole, _db, _db1, zCode, rCode, aCode, bCode, usertype, oldzCode)

                            Else
                                If (partnerID = kabayanid) And usertype = "NOTIAD" Then
                                    strquery = String.Format("call kppartners.HOgetdailypayoutPerPartner('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}');", _day, Convert.ToDateTime(_datefrom), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole)
                                Else
                                    strquery = String.Format("call kppartners.HOgetdailypayout('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}');", _day, Convert.ToDateTime(_datefrom), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode)
                                End If

                            End If
                            _datefrom = _datefrom.AddDays(1)
                            _loop = i + 1
                            rangef = _year
                            GoTo dataloop
                        Next
                    Else
                        GoTo _finaldata
                    End If
                End If
            End If
dataloop:
            If ReportType = 5 Then
                expresstrap = 0
                If expresstrap = 0 Then
                    Con.OpenCon("KPMLExpress")
                    GoTo _read
                End If

_domesticexpress:
                If expresstrap = 1 Then
                    Con.OpenCon("KPUsers")
                    strquery = strquery1
                    GoTo _read
                ElseIf expresstrap = 5 Then
                    Con.OpenCon("KPUsers")
                    strquery = kptquery
                    GoTo _read
                ElseIf expresstrap = 10 Then
                    Con.OpenCon("DomesticCloud")
                    strquery = strquery1
                    GoTo _read
                End If
                '_kp8express:    'ginama ko kp8
                '                If expresstrap = 12 Then
                '                    Con.OpenCon("KP8DomesticB")
                '                    strquery = kp8strquery
                '                    GoTo _read
                '                End If
_partnerexpress:
                If expresstrap = 2 Then
                    Con.OpenCon("KPAPI")
                    strquery = pstrquery
                    GoTo _read
                End If
_partnernewexpress:
                If expresstrap = 8 Then
                    Con.OpenCon("KPAPINEW")
                    strquery = pstrquery
                    GoTo _read
                ElseIf expresstrap = 13 Then
                    Con.OpenCon("KPAPINEW")
                    strquery = strquerysky
                    GoTo _read
                End If
_wscexpress:
                If expresstrap = 3 Then
                    Con.OpenCon("KPWSC")
                    strquery = wscquery
                    GoTo _read
                End If
_fexpress:
                If expresstrap = 4 Then
                    Con.OpenCon("KPFileUpload")
                    strquery = fstrquery
                    GoTo _read
                End If
_walletexpress:
                If expresstrap = 6 Then
                    Con.OpenCon("KPMLWallet")
                    strquery = walquery
                    GoTo _read
                End If
_aubxpress:
                If expresstrap = 11 Then
                    Con.OpenCon("KPAPI")
                    strquery = strqueryaub
                    GoTo _read
                End If
_wuxpress:
                If expresstrap = 12 Then
                    Con.OpenCon("WesternUnion")
                    strquery = strquerywu
                    GoTo _read
                End If
_globalexpress:
                If expresstrap = 7 Then
                    Con.OpenCon("KPGLOBAL")
                    strquery = gstrquery
                    GoTo _read
                ElseIf expresstrap = 9 Then
                    Con.OpenCon("KPGLOBALCloud")
                    strquery = gstrquery
                    GoTo _read
                End If


            Else
                If partnerID = westernunionid Then 'western
                    Con.OpenCon("WesternUnion")
                ElseIf partnerID = skybridge Then 'skybridge
                    Con.OpenCon("KPAPINEW")
                Else
                    getconnections()
                End If

                expresstrap = 0
_apinewconnect:
                If ReportType = 1 And expresstrap = 1 Then
                    Con.OpenCon("KPAPINEW")
                End If
            End If

            Dim partnerloop As Integer = 0
_aub:

            If partnerID = "MLCIP130005" And partnerloop = 1 Then 'AUB
                strquery = strquery1
                Con.OpenCon("AUB")
                GoTo _read
            End If
            Dim loopcommitted As Integer = 0
            Dim committedtrap As Integer = 0
_querycommitted:
            If ReportType = 1 And committedtrap = 1 And (Session("roles") = "KP-CAD" Or Session("roles") = "CAD") Then
                strquery = committedquery
                If loopcommitted = 1 Then
                    Con.OpenCon("KPAPI")
                ElseIf loopcommitted = 2 Then
                    committedtrap = 2
                    Con.OpenCon("KPAPINEW")
                End If
                GoTo _read
            End If

_read:
            dtable.Clear()
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader()
                If dr.HasRows Then
                    dtable.Load(dr)
                    'dtmerger.Merge(dtable)
                    dtmerger.Merge(dtable, True, MissingSchemaAction.Ignore)
                End If
                dr.Close()
                Con.CloseCon()
                cmd = Nothing
            End Using
_expresstrap:
            If ReportType = 5 Then
                If expresstrap = 0 Then
                    expresstrap = 1
                    GoTo _domesticexpress
                ElseIf expresstrap = 1 Then
                    expresstrap = 2
                    GoTo _partnerexpress
                ElseIf expresstrap = 2 Then
                    expresstrap = 3
                    GoTo _wscexpress
                ElseIf expresstrap = 3 Then
                    expresstrap = 4
                    GoTo _fexpress
                ElseIf expresstrap = 4 Then
                    expresstrap = 5
                    GoTo _domesticexpress
                ElseIf expresstrap = 5 Then
                    expresstrap = 6
                    GoTo _walletexpress
                ElseIf expresstrap = 6 Then
                    expresstrap = 7
                    GoTo _globalexpress
                ElseIf expresstrap = 7 Then
                    expresstrap = 8
                    GoTo _partnernewexpress
                ElseIf expresstrap = 8 Then
                    expresstrap = 9
                    GoTo _globalexpress
                ElseIf expresstrap = 9 Then
                    expresstrap = 10
                    GoTo _domesticexpress
                ElseIf expresstrap = 10 Then
                    expresstrap = 11
                    GoTo _aubxpress
                ElseIf expresstrap = 11 Then   'kp8 express
                        expresstrap = 12
                    '    If Convert.ToInt32(daily) < 2020 Or Convert.ToInt32(monthly) < 2020 Or Convert.ToInt32(rangef) < 2020 Then
                    '        GoTo _kp8express
                    '    End If
                    GoTo _expresstrap
                ElseIf expresstrap = 12 Then
                    expresstrap = 13
                    GoTo _partnernewexpress
                End If
            ElseIf ReportType = 1 Then

                If expresstrap = 0 Then
                    If Not partnerID = westernunionid And partnerID <> skybridge Then
                        expresstrap = 1
                        GoTo _apinewconnect
                    End If
                End If
                If partnerID = "MLCIP130005" And partnerloop = 0 Then 'AUB 
                    partnerloop = 1
                    GoTo _aub
                End If
            ElseIf ReportType = 9 Then
                If expresstrap = 0 Then
                    expresstrap = 1
                    GoTo _domesticexpress
                'ElseIf expresstrap = 1 Then
                    'expresstrap = 12
                    'If Convert.ToInt32(daily) < 2020 Or Convert.ToInt32(monthly) < 2020 Or Convert.ToInt32(rangef) < 2020 Then
                    '    GoTo _kp8express
                    'End If
                    'GoTo _expresstrap
                ElseIf expresstrap = 12 Then
                    expresstrap = 7
                    GoTo _globalexpress
                End If
            End If
            If (committedtrap = 0 Or committedtrap = 1) And (Session("roles") = "KP-CAD" Or Session("roles") = "CAD") And ReportType = 1 Then
                committedtrap = 1
                If loopcommitted = 0 Then
                    loopcommitted = 1
                ElseIf loopcommitted = 1 Then
                    loopcommitted = 2
                End If
                GoTo _querycommitted
            End If
            If _loop <= _monthnoofdays Then
                If drpPeriod.Text = 2 Then
                    GoTo afterdataloop
                ElseIf drpPeriod.Text = 3 Then
                    GoTo afterdataloop1
                End If
            End If
_finaldata:
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                GetOperatorAndBranch(dtmerger, "PO")
                'getoperatormobilebillspay(dtmerger, "claimedExpress")
                getoperatorExpress(dtmerger, "claimedExpress")
                If ReportType = 6 And drppartnerid.Text = smaccountid Then
                    GetSMOperator(dtmerger, "PO")
                End If
                If drppartnerid.Text = smaccountid And ReportType = 6 And partnername <> Nothing Then
                    smflag = "TO SEND : "
                    loadreport("SOPO")
                Else
                    loadreport("Claimed")
                End If
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " claimed")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                claimed()
            Else
                'GetMessage(ex.ToString() + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
                'GetMessage(Con.GetCon.ConnectionString())
            End If
        End Try
    End Sub
    '3 UNCLAIMED
    Private Sub unclaimed()
        dtable = GetDatatable()
        dtable.Clear()
        dtable1 = GetDatatable()
        dtable1.Clear()
        dtmerger = GetDatatable()
        dtmerger.Clear()

        Dim flg As Integer = 0
        Dim startdate As Date = Nothing
        Dim enddate As Date = "2015-01-01"
        Dim enddatespecialpartner As Date = "2018-01-01"
        Dim lastday As Integer = 0
        Dim loop1 As Date = Nothing
        Try
            If drpPeriod.Text = 1 Then 'DAILY
                _year = Convert.ToDateTime(txtDate.Text).ToString("yyyy-MM-dd")
                If ReportType = 5 Then
_next:
                    If flg = 1 Then
                        startdate = loop1
                    ElseIf flg = 0 Then
                        startdate = Convert.ToDateTime(txtDate.Text).ToString("yyyy-MM-dd")
                    End If
                    While startdate > enddate
                        Dim expdb As String = "Reports" & Convert.ToDateTime(startdate).ToString("MMyyyy")
                        expressday = Convert.ToDateTime(startdate).ToString("dd")
                        strquery = String.Format("call kpOFW.HOGetExpressUnclaimed('{0}','{1}','{2}')", expdb, expressday, partnerID)
                        If flg = 0 Then
                            lastday = Math.Abs(DateAdd("m", 0, DateSerial(Year(Today), Month(Today), 1)).Subtract(Convert.ToDateTime(txtDate.Text)).Days)
                            lastday = lastday + 1
                        Else
                            lastday = DateTime.DaysInMonth(Year(startdate), Month(startdate))
                        End If
                        startdate = startdate.AddDays(-lastday)
                        loop1 = startdate
                        flg = 2
                        GoTo _read
                    End While
                    GoTo _done
                ElseIf sotxnreftype = "SpecialPartner" Then
                    startdate = Convert.ToDateTime(txtDate.Text).ToString("yyyy-MM-dd")
_nextspecialpartner:
                    While startdate >= enddatespecialpartner
                        Dim _db As String = "payout" + Convert.ToDateTime(startdate).ToString("MMddyyyy")
                        Dim _db1 As String = "sendout" + Convert.ToDateTime(startdate).ToString("MMddyyyy")
                        Dim _month As String = Convert.ToDateTime(startdate).ToString("MM")
                        strquery = String.Format("call reportsdb.hogetunclaimedtransaction('{0}','{1}','{4}{5:dd}','{2}','{3}','{6}','{7}');", partnerID, startdate.Year, username, userrole, _month, Convert.ToDateTime(startdate), _db, _db1)
                        startdate = startdate.AddDays(-1)
                        flg = 2
                        GoTo _read
                    End While
                    GoTo _done
                ElseIf partnerID = westernunionid Then
                    strquery = String.Format("call kppartners.hogetunclaimedtransaction_Partners('{0}','{1}','{2}','{3}','{4}','{5}','WU');", _day, partnerID, _year, sotxnreftype, username, userrole)
                Else
                    strquery = String.Format("call kppartners.hogetunclaimedtransaction('{0}','{1}','{2}','{3}','{4}','{5}');", _day, partnerID, _year, sotxnreftype, username, userrole)
                End If
            End If
_read:
            If partnerID = westernunionid Then
                Con.OpenCon("WesternUnion")
            Else
                getconnections()
            End If
            expresstrap = 0
_apinewconnect:
            If ReportType = 1 And expresstrap = 1 Then
                Con.OpenCon("KPAPINEW")
            End If
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                If dr.HasRows Then
                    dtable.Load(dr)
                    dtmerger.Merge(dtable)
                End If
                dr.Close()
                cmd = Nothing
            End Using
            If ReportType = 1 And expresstrap = 0 Then
                expresstrap = 1
                GoTo _apinewconnect
            End If
            dtmerger.Merge(dtable1)
            If ReportType = 5 And flg = 2 Then
                flg = 1
                GoTo _next
            ElseIf sotxnreftype = "SpecialPartner" And flg = 2 Then
                flg = 1
                GoTo _nextspecialpartner
            End If
_done:
            If ReportType = 5 Then
                checkunclaimedexpress(dtmerger)
            ElseIf ReportType = 4 Then
                'GetOperatorAndBranch(dtmerger, "PO")
                Getpartnersoperator(dtmerger)
                checkunclaimedpartners(dtmerger)
            End If
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadreport("Unclaimed")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " unclaimed")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                unclaimed()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    '4 RETURN TO SENDER
    Public Sub returntosender()
        dtable = GetDatatable()
        dtable.Clear()
        dtable1 = GetDatatable()
        dtable1.Clear()
        dtmerger = GetDatatable()
        dtmerger.Clear()

        Dim flag As String = ""

        Try
            If drpPeriod.Text = 1 Or _monthnoofdays = 1 Then 'DAILY
                If (ReportType = "1") Then
                    If partnerID = "MLCIP130005" Then 'AUB
                        strquery1 = String.Format("call kppartners.HOgetReturnToSenderReport_Partners('{0}','{1}','{2}','{3}','{4}','{5}','AUB');", _day, partnerID, _year, sotxnreftype, username, userrole, flag)
                    End If
                End If

                If partnerID = westernunionid Then 'western
                    strquery = String.Format("call kppartners.HOgetReturnToSenderReport_Partners('{0}','{1}','{2}','{3}','{4}','{5}','WU');", _day, partnerID, _year, sotxnreftype, username, userrole, flag)
                ElseIf partnerID = skybridge Then 'skybridge
                    strquery = String.Format("call kppartners.HOgetReturnToSenderReport_Partners('{0}','{1}','{2}','{3}','{4}','{5}','SKY');", _day, partnerID, _year, sotxnreftype, username, userrole, flag)
                Else
                    strquery = String.Format("call kppartners.HOgetReturnToSenderReport('{0}','{1}','{2}','{3}','{4}','{5}');", _day, partnerID, _year, sotxnreftype, username, userrole)
                End If
                If ReportType = 5 Then
                    If _monthnoofdays = 1 Then
                        expressdb = String.Format("Reports{0}{1}", Convert.ToDateTime(txtdateFrom.Text).ToString("MM"), _year)
                    Else
                        expressdb = String.Format("Reports{0}{1}", Convert.ToDateTime(txtDate.Text).ToString("MM"), _year)
                    End If
                    strquery = String.Format("call kpOFW.HOGetExpressRTS('{0}','{1}','{2}','{3}')", expressdb, expressday, _year, partnerID)
                ElseIf sotxnreftype = "SpecialPartner" Then
                    Dim _db As String = String.Empty
                    If _monthnoofdays = 1 Then
                        _db = "sendout" + Convert.ToDateTime(txtdateFrom.Text).ToString("MMddyyyy")
                    Else
                        _db = "sendout" + Convert.ToDateTime(txtDate.Text).ToString("MMddyyyy")
                    End If
                    strquery = String.Format("call reportsdb.HOgetReturnToSenderReport('{0}','{1}','{2}','{3}','{4}','{5}');", partnerID, _year, _day, username, userrole, _db)
                End If

                _loop = 2
                GoTo dataloop
            ElseIf drpPeriod.Text = 2 Or drpPeriod.Text = 3 Or _monthnoofdays > 1 Then 'MONTHLY/RANGE
                If drpPeriod.Text = 2 Then
                    If _day < 10 Then
                        _day = String.Concat("0", _day)
                    End If
afterdataloop:
                    If _loop <= _monthnoofdays Then
                        For i As Integer = _loop To _monthnoofdays
                            If (ReportType = "1") Then
                                If partnerID = "MLCIP130005" Then 'AUB
                                    strquery1 = String.Format("call kppartners.HOgetReturnToSenderReport_Partners('{0}{1}','{2}','{3}','{4}','{5}','{6}','AUB');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, _year, sotxnreftype, username, userrole, flag)
                                End If
                            End If
                            If partnerID = westernunionid Then 'western
                                strquery = String.Format("call kppartners.HOgetReturnToSenderReport_Partners('{0}{1}','{2}','{3}','{4}','{5}','{6}','WU');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, _year, sotxnreftype, username, userrole, flag)
                            ElseIf partnerID = skybridge Then 'skybridge
                                strquery = String.Format("call kppartners.HOgetReturnToSenderReport_Partners('{0}{1}','{2}','{3}','{4}','{5}','{6}','SKY');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, _year, sotxnreftype, username, userrole, flag)
                            Else
                                strquery = String.Format("call kppartners.HOgetReturnToSenderReport('{0}{1}','{2}','{3}','{4}','{5}','{6}');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, _year, sotxnreftype, username, userrole)
                            End If
                            If ReportType = 5 Then
                                expressdb = String.Format("Reports{0}{1}", _day, _year)
                                strquery = String.Format("call kpOFW.HOGetExpressRTS('{0}','{1}','{2}','{3}')", expressdb, i.ToString.PadLeft(2, CType("0", Char)), _year, partnerID)
                            ElseIf sotxnreftype = "SpecialPartner" Then
                                Dim _db As String = "sendout" + _day + i.ToString.PadLeft(2, CType("0", Char)) + _year
                                strquery = String.Format("call reportsdb.HOgetReturnToSenderReport('{0}','{1}','{2}{3}','{4}','{5}','{6}');", partnerID, _year, _day, i.ToString.PadLeft(2, CType("0", Char)), username, userrole, _db)
                            End If
                            _loop = i + 1
                            GoTo dataloop
                        Next
                    Else
                        GoTo _finaldata
                    End If

                ElseIf drpPeriod.Text = 3 Then
                    Dim _datefrom As Date = txtdateFrom.Text
afterdataloop1:
                    If _loop <= _monthnoofdays Then
                        For i As Integer = _loop To _monthnoofdays
                            _day = Convert.ToDateTime(_datefrom).ToString("MM")
                            _year = Convert.ToDateTime(_datefrom).ToString("yyyy")
                            If (ReportType = "1") Then
                                If partnerID = "MLCIP130005" Then 'AUB
                                    strquery1 = String.Format("call kppartners.HOgetReturnToSenderReport_Partners('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','AUB');", _day, Convert.ToDateTime(_datefrom), partnerID, _year, sotxnreftype, username, userrole, flag)
                                End If
                            End If
                            If partnerID = westernunionid Then 'western
                                strquery = String.Format("call kppartners.HOgetReturnToSenderReport_Partners('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','WU');", _day, Convert.ToDateTime(_datefrom), partnerID, _year, sotxnreftype, username, userrole, flag)
                            ElseIf partnerID = skybridge Then 'skybridge
                                strquery = String.Format("call kppartners.HOgetReturnToSenderReport_Partners('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','SKY');", _day, Convert.ToDateTime(_datefrom), partnerID, _year, sotxnreftype, username, userrole, flag)
                            Else
                                strquery = String.Format("call kppartners.HOgetReturnToSenderReport('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}');", _day, Convert.ToDateTime(_datefrom), partnerID, _year, sotxnreftype, username, userrole)
                            End If
                            If ReportType = 5 Then
                                expressdb = String.Format("Reports{0}{1}", _day, _year)
                                strquery = String.Format("call kpOFW.HOGetExpressRTS('{0}','{1:dd}','{2}','{3}')", expressdb, Convert.ToDateTime(_datefrom), _year, partnerID)
                            ElseIf sotxnreftype = "SpecialPartner" Then
                                Dim _db As String = "sendout" + Convert.ToDateTime(_datefrom).ToString("MMddyyyy")
                                strquery = String.Format("call reportsdb.HOgetReturnToSenderReport('{0}','{1}','{2}{3:dd}','{4}','{5}','{6}');", partnerID, _year, _day, Convert.ToDateTime(_datefrom), username, userrole, _db)
                            End If
                            _datefrom = _datefrom.AddDays(1)
                            _loop = i + 1
                            GoTo dataloop
                        Next
                    Else
                        GoTo _finaldata
                    End If
                End If
            End If
dataloop:
            If partnerID = westernunionid Then 'western
                Con.OpenCon("WesternUnion")
            ElseIf partnerID = skybridge Then 'skybridge
                Con.OpenCon("KPAPINEW")
            Else
                getconnections()
            End If
                expresstrap = 0
_apinewconnect:
                If ReportType = 1 And expresstrap = 1 Then
                    Con.OpenCon("KPAPINEW")
                End If

                Dim partnerloop As Integer = 0
_aub:

                If partnerID = "MLCIP130005" And partnerloop = 1 Then 'AUB
                    strquery = strquery1
                    Con.OpenCon("AUB")

                End If
_read:
                Using Con.GetCon()
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    While dr.Read()
                        datarow = dtable.NewRow()
                        'clsreport.ID = clsreport.ID + 1
                        'datarow("ID") = clsreport.ID
                        datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
                        datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("KPTN")), Trim(dr.Item("KPTN")), "-"))
                        datarow("referenceno") = UCase(If(Not IsDBNull(dr.Item("referenceno")), Trim(dr.Item("referenceno")), "-"))
                        datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                        datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                        datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                        datarow("cancelleddate") = UCase(If(Not IsDBNull(dr.Item("cancelleddate")) And CType(dr.Item("cancelleddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("cancelleddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                        datarow("operator") = UCase(If(Not IsDBNull(dr.Item("Operator")), Trim(dr.Item("Operator")), Trim(dr.Item("InitiatedBy"))))
                        datarow("cancelreason") = UCase(If(Not IsDBNull(dr.Item("cancelreason")), Trim(dr.Item("cancelreason")), "-"))
                        datarow("currency") = UCase(If(Not IsDBNull(dr.Item("Currency")), Trim(dr.Item("Currency")), "-"))
                        datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                        datarow("Charge") = UCase(If(Not IsDBNull(dr.Item("Charge")), CType(Trim(dr.Item("Charge")), System.Decimal), 0))
                        datarow("InitiatedBy") = UCase(If(Not IsDBNull(dr.Item("InitiatedBy")), Trim(dr.Item("InitiatedBy")), Trim(dr.Item("Operator"))))
                        datarow("RequestNo") = UCase(If(Not IsDBNull(dr.Item("RequestNo")), Trim(dr.Item("RequestNo")), "-"))
                        datarow("DateRequest") = UCase(If(Not IsDBNull(dr.Item("DateRequest")) And CType(dr.Item("DateRequest"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("DateRequest"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                        datarow("RequestType") = UCase(If(Not IsDBNull(dr.Item("RequestType")), Trim(dr.Item("RequestType")), "-"))
                        dtable.Rows.Add(datarow)
                        dtable.AcceptChanges()
                        dtable1.Merge(dtable)
                    End While
                    dr.Close()
                    cmd = Nothing
                End Using
                If ReportType = 1 And expresstrap = 0 Then
                    expresstrap = 1
                    GoTo _apinewconnect
                End If
                If partnerID = "MLCIP130005" And partnerloop = 0 Then 'AUB 
                    partnerloop = 1
                    GoTo _aub
                End If
                If _loop <= _monthnoofdays Then
                    If drpPeriod.Text = 2 Then
                        GoTo afterdataloop
                    ElseIf drpPeriod.Text = 3 Then
                        GoTo afterdataloop1
                    End If
                End If
                dtmerger.Merge(dtable1)
_finaldata:
                If dtmerger.Rows.Count = 0 Then
                    GetMessage("No record for " & _dateofreport)
                Else
                    loadreport("Return-to-Sender")
                End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " returntosender")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                returntosender()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    '5 CANCEL SENDOUT
    Public Sub cancelsendout()
        dtable = GetDatatable()
        dtable.Clear()
        dtable1 = GetDatatable()
        dtable1.Clear()
        dtmerger = GetDatatable()
        dtmerger.Clear()
        Dim flag As String = ""

        Try
            If drpPeriod.Text = 1 Or _monthnoofdays = 1 Then 'DAILY
                If (ReportType = "1") Then
                    If partnerID = aubid Then 'AUB
                        strquery1 = String.Format("call kppartners.HOgetcancelledsendout_Partners('{0}','{1}','{2}','{3}','{4}','{5}','AUB');", _day, partnerID, _year, sotxnreftype, username, userrole)
                    End If
                End If
                If partnerID = westernunionid Then 'western
                    strquery = String.Format("call kppartners.HOgetcancelledsendout_Partners('{0}','{1}','{2}','{3}','{4}','{5}','WU');", _day, partnerID, _year, sotxnreftype, username, userrole)
                ElseIf partnerID = skybridge Then 'skybridge
                    strquery = String.Format("call kppartners.HOgetcancelledsendout_Partners('{0}','{1}','{2}','{3}','{4}','{5}','SKY');", _day, partnerID, _year, sotxnreftype, username, userrole)
                Else
                    strquery = String.Format("call kppartners.HOgetcancelledsendout('{0}','{1}','{2}','{3}','{4}','{5}');", _day, partnerID, _year, sotxnreftype, username, userrole)
                End If
                If ReportType = 5 Then
                    If _monthnoofdays = 1 Then
                        expressdb = String.Format("Reports{0}{1}", Convert.ToDateTime(txtdateFrom.Text).ToString("MM"), _year)
                    Else
                        expressdb = String.Format("Reports{0}{1}", Convert.ToDateTime(txtDate.Text).ToString("MM"), _year)
                    End If
                    strquery = String.Format("call kpOFW.HOGetExpressCS('{0}','{1}','{2}','{3}')", expressdb, expressday, _year, partnerID)
                    strquery1 = String.Format("Call kpbillspayment.HOgetdailyCSBP ('{0}','{1}','{2}');", _day, partnerID, _year)
                ElseIf sotxnreftype = "SpecialPartner" Then
                    Dim _db As String = String.Empty
                    If _monthnoofdays = 1 Then
                        _db = "sendout" + Convert.ToDateTime(txtdateFrom.Text).ToString("MMddyyyy")
                    Else
                        _db = "sendout" + Convert.ToDateTime(txtDate.Text).ToString("MMddyyyy")
                    End If
                    strquery = String.Format("call reportsdb.HOgetcancelledsendout('{0}','{1}','{2}','{3}','{4}','{5}');", partnerID, _year, _day, username, userrole, _db)
                End If

                _loop = 2
                GoTo dataloop
            ElseIf drpPeriod.Text = 2 Or drpPeriod.Text = 3 Or _monthnoofdays > 1 Then 'MONTHLY/RANGE

                If drpPeriod.Text = 2 Then
                    If _day < 10 Then
                        _day = String.Concat("0", _day)
                    End If

afterdataloop:
                    If _loop <= _monthnoofdays Then
                        For i As Integer = _loop To _monthnoofdays
                            If (ReportType = "1") Then
                                If partnerID = aubid Then 'AUB
                                    strquery1 = String.Format("call kppartners.HOgetcancelledsendout_Partners('{0}{1}','{2}','{3}','{4}','{5}','{6}','AUB');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, _year, sotxnreftype, username, userrole)
                                End If
                            End If
                            If partnerID = westernunionid Then 'western
                                strquery = String.Format("call kppartners.HOgetcancelledsendout_Partners('{0}{1}','{2}','{3}','{4}','{5}','{6}','WU');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, _year, sotxnreftype, username, userrole)
                            ElseIf partnerID = skybridge Then 'skybridge
                                strquery = String.Format("call kppartners.HOgetcancelledsendout_Partners('{0}{1}','{2}','{3}','{4}','{5}','{6}','SKY');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, _year, sotxnreftype, username, userrole)
                            Else
                                strquery = String.Format("call kppartners.HOgetcancelledsendout('{0}{1}','{2}','{3}','{4}','{5}','{6}');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, _year, sotxnreftype, username, userrole)
                            End If
                            If ReportType = 5 Then
                                expressdb = String.Format("Reports{0}{1}", _day, _year)
                                strquery = String.Format("call kpOFW.HOGetExpressCS('{0}','{1}','{2}','{3}')", expressdb, i.ToString.PadLeft(2, CType("0", Char)), _year, partnerID)
                                strquery1 = String.Format("Call kpbillspayment.HOgetdailyCSBP ('{0}{1}','{2}','{3}');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, _year)
                            ElseIf sotxnreftype = "SpecialPartner" Then
                                Dim _db As String = "sendout" + _day + i.ToString.PadLeft(2, CType("0", Char)) + _year
                                strquery = String.Format("call reportsdb.HOgetcancelledsendout('{0}','{1}','{2}{3}','{4}','{5}','{6}');", partnerID, _year, _day, i.ToString.PadLeft(2, CType("0", Char)), username, userrole, _db)
                            End If
                            _loop = i + 1
                            GoTo dataloop
                        Next
                    Else
                        GoTo _finaldata
                    End If

                ElseIf drpPeriod.Text = 3 Then
                    Dim _datefrom As Date = txtdateFrom.Text
afterdataloop1:
                    If _loop <= _monthnoofdays Then
                        For i As Integer = _loop To _monthnoofdays
                            _day = Convert.ToDateTime(_datefrom).ToString("MM")
                            _year = Convert.ToDateTime(_datefrom).ToString("yyyy")
                            If (ReportType = "1") Then
                                If partnerID = aubid Then 'AUB
                                    strquery1 = String.Format("call kppartners.HOgetcancelledsendout_Partners('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','AUB');", _day, Convert.ToDateTime(_datefrom), partnerID, _year, sotxnreftype, username, userrole)
                                End If
                            End If
                            If partnerID = westernunionid Then 'western
                                strquery = String.Format("call kppartners.HOgetcancelledsendout_Partners('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','WU');", _day, Convert.ToDateTime(_datefrom), partnerID, _year, sotxnreftype, username, userrole)
                            ElseIf partnerID = skybridge Then 'skybridge
                                strquery = String.Format("call kppartners.HOgetcancelledsendout_Partners('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','SKY');", _day, Convert.ToDateTime(_datefrom), partnerID, _year, sotxnreftype, username, userrole)
                            Else
                                strquery = String.Format("call kppartners.HOgetcancelledsendout('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}');", _day, Convert.ToDateTime(_datefrom), partnerID, _year, sotxnreftype, username, userrole)
                            End If
                            If ReportType = 5 Then
                                expressdb = String.Format("Reports{0}{1}", _day, _year)
                                strquery = String.Format("call kpOFW.HOGetExpressCS('{0}','{1:dd}','{2}','{3}')", expressdb, Convert.ToDateTime(_datefrom), _year, partnerID)
                                strquery1 = String.Format("Call kpbillspayment.HOgetdailyCSBP ('{0}{1:dd}','{2}','{3}');", _day, Convert.ToDateTime(_datefrom), partnerID, _year)
                            ElseIf sotxnreftype = "SpecialPartner" Then
                                Dim _db As String = "sendout" + Convert.ToDateTime(_datefrom).ToString("MMddyyyy")
                                strquery = String.Format("call reportsdb.HOgetcancelledsendout('{0}','{1}','{2}{3:dd}','{4}','{5}','{6}');", partnerID, _year, _day, Convert.ToDateTime(_datefrom), username, userrole, _db)
                            End If
                            _datefrom = _datefrom.AddDays(1)
                            _loop = i + 1
                            GoTo dataloop
                        Next
                    Else
                        GoTo _finaldata
                    End If
                End If
            End If
dataloop:
                If ReportType = 5 Then
                    expresstrap = 0
                    If expresstrap = 0 Then
                        Con.OpenCon("KPMLExpress")
                        GoTo _read
                    End If
_billspayExpress:
                If expresstrap = 1 Then
                    Con.OpenCon("KPBillsPayment")
                    strquery = strquery1
                    GoTo _read

                End If
            Else
                If partnerID = westernunionid Then 'western
                    Con.OpenCon("WesternUnion")
                ElseIf partnerID = skybridge Then 'skybridge
                    Con.OpenCon("KPAPINEW")
                Else
                    getconnections()
                End If
                expresstrap = 0
_apinewconnect:
                If ReportType = 1 And expresstrap = 1 Then
                    Con.OpenCon("KPAPINEW")
                End If
                End If


                Dim partnerloop As Integer = 0
_aub:

                If partnerID = aubid And partnerloop = 1 Then 'AUB
                    Con.OpenCon("AUB")
                    strquery = strquery1

                End If
_read:
                Using Con.GetCon()
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    While dr.Read()
                        datarow = dtable.NewRow()
                        'clsreport.ID = clsreport.ID + 1
                        'datarow("ID") = clsreport.ID
                        datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
                        datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("KPTN")), Trim(dr.Item("KPTN")), "-"))
                        datarow("referenceno") = UCase(If(Not IsDBNull(dr.Item("referenceno")), Trim(dr.Item("referenceno")), "-"))
                        datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                        datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                        datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                        datarow("cancelleddate") = UCase(If(Not IsDBNull(dr.Item("cancelleddate")) And CType(dr.Item("cancelleddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("cancelleddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                        datarow("operator") = UCase(If(Not IsDBNull(dr.Item("Operator")), Trim(dr.Item("Operator")), "-"))
                        datarow("cancelreason") = UCase(If(Not IsDBNull(dr.Item("cancelreason")), Trim(dr.Item("cancelreason")), "-"))
                        datarow("currency") = UCase(If(Not IsDBNull(dr.Item("Currency")), Trim(dr.Item("Currency")), "-"))
                        datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                        datarow("Charge") = UCase(If(Not IsDBNull(dr.Item("Charge")), CType(Trim(dr.Item("Charge")), System.Decimal), 0))
                        dtable.Rows.Add(datarow)
                        dtable.AcceptChanges()
                        dtable1.Merge(dtable)
                    End While
                    dr.Close()
                    cmd = Nothing
                End Using
                If ReportType = 5 And expresstrap = 0 Then
                    expresstrap = 1
                    GoTo _billspayExpress
                ElseIf ReportType = 1 And expresstrap = 0 Then
                    expresstrap = 1
                    GoTo _apinewconnect
                End If
                If partnerID = aubid And partnerloop = 0 Then 'AUB 
                    partnerloop = 1
                    GoTo _aub
                End If
                If _loop <= _monthnoofdays Then
                    If drpPeriod.Text = 2 Then
                        GoTo afterdataloop
                    ElseIf drpPeriod.Text = 3 Then
                        GoTo afterdataloop1
                    End If
                End If
                dtmerger.Merge(dtable1)
_finaldata:
                If dtmerger.Rows.Count = 0 Then
                    GetMessage("No record for " & _dateofreport)
                Else
                    loadreport("Cancelled-Sendout")
                End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " cancelsendout")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                cancelsendout()
            Else
                'GetMessage(ex.ToString() + Con.ToString())
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    '6 AMENDMENTS/CHANGE DETAILS
    Public Sub amendments()
        dtable = GetDatatable()
        dtable.Clear()
        dtable1 = GetDatatable()
        dtable1.Clear()
        dtmerger = GetDatatable()
        dtmerger.Clear()
        Dim flag As String = ""
        Try
            If drpPeriod.Text = 1 Or _monthnoofdays = 1 Then 'DAILY
                If (ReportType = "1") Then
                    If partnerID = "MLCIP130005" Then 'AUB
                        strquery1 = String.Format("call kppartners.HOgetRfcTransaction_Partners('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','AUB');", _day, partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode)
                    End If
                End If
                If partnerID = westernunionid Then 'western
                    strquery = String.Format("call kppartners.HOgetRfcTransaction_Partners('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','WU');", _day, partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode)
                ElseIf partnerID = skybridge Then 'skybridge
                    strquery = String.Format("call kppartners.HOgetRfcTransaction_Partners('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','SKY');", _day, partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode)
                Else
                    strquery = String.Format("call kppartners.HOgetRfcTransaction('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}');", _day, partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode)
                End If
                If ReportType = 3 Then
                    strquery = String.Format("call kppartners.HOgetRfcPaymentSolution('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}');", _day, partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode)
                ElseIf ReportType = 5 Then
                    If _monthnoofdays = 1 Then
                        expressdb = String.Format("Reports{0}{1}", Convert.ToDateTime(txtdateFrom.Text).ToString("MM"), _year)
                    Else
                        expressdb = String.Format("Reports{0}{1}", Convert.ToDateTime(txtDate.Text).ToString("MM"), _year)
                    End If
                    strquery = String.Format("call kpOFW.HOGetExpressRFC('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", expressdb, expressday, _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                    strquery1 = String.Format("Call kpbillspayment.HOgetdailyRFCBP ('{0}','{1}','{2}');", _day, partnerID, _year)
                ElseIf sotxnreftype = "SpecialPartner" Then
                    Dim _db As String = String.Empty
                    If _monthnoofdays = 1 Then
                        _db = "sendout" + Convert.ToDateTime(txtdateFrom.Text).ToString("MMddyyyy")
                    Else
                        _db = "sendout" + Convert.ToDateTime(txtDate.Text).ToString("MMddyyyy")
                    End If
                    strquery = String.Format("call reportsdb.HOgetRfcTransaction('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}');", partnerID, _year, _day, username, userrole, _db, zCode, rCode, aCode, bCode, usertype, oldzCode)
                End If

                _loop = 2
                GoTo dataloop
            ElseIf drpPeriod.Text = 2 Or drpPeriod.Text = 3 Or _monthnoofdays > 1 Then 'MONTHLY/RANGE
                If drpPeriod.Text = 2 Then
                    If _day < 10 Then
                        _day = String.Concat("0", _day)
                    End If
afterdataloop:
                    If _loop <= _monthnoofdays Then
                        For i As Integer = _loop To _monthnoofdays
                            If (ReportType = "1") Then
                                If partnerID = "MLCIP130005" Then 'AUB
                                    strquery1 = String.Format("call kppartners.HOgetRfcTransaction_Partners('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','AUB');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode)
                                End If
                            End If
                            If partnerID = westernunionid Then 'western
                                strquery = String.Format("call kppartners.HOgetRfcTransaction_Partners('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','WU');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode)
                            ElseIf partnerID = skybridge Then 'skybridge
                                strquery = String.Format("call kppartners.HOgetRfcTransaction_Partners('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','SKY');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode)
                            Else
                                strquery = String.Format("call kppartners.HOgetRfcTransaction('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode)
                            End If
                            If ReportType = 3 Then
                                strquery = String.Format("call kppartners.HOgetRfcPaymentSolution('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode)
                            ElseIf ReportType = 5 Then
                                expressdb = String.Format("Reports{0}{1}", _day, _year)
                                strquery = String.Format("call kpOFW.HOGetExpressRFC('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", expressdb, i.ToString.PadLeft(2, CType("0", Char)), _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                strquery1 = String.Format("Call kpbillspayment.HOgetdailyRFCBP ('{0}{1}','{2}','{3}');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, _year)
                            ElseIf sotxnreftype = "SpecialPartner" Then
                                Dim _db As String = "sendout" + _day + i.ToString.PadLeft(2, CType("0", Char)) + _year
                                strquery = String.Format("call reportsdb.HOgetRfcTransaction('{0}','{1}','{2}{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}');", partnerID, _year, _day, i.ToString.PadLeft(2, CType("0", Char)), username, userrole, _db, zCode, rCode, aCode, bCode, usertype, oldzCode)
                            End If
                            _loop = i + 1
                            GoTo dataloop
                        Next
                    Else
                        GoTo _finaldata
                    End If

                ElseIf drpPeriod.Text = 3 Then
                    Dim _datefrom As Date = txtdateFrom.Text
afterdataloop1:
                    If _loop <= _monthnoofdays Then
                        For i As Integer = _loop To _monthnoofdays
                            _day = Convert.ToDateTime(_datefrom).ToString("MM")
                            _year = Convert.ToDateTime(_datefrom).ToString("yyyy")
                            If (ReportType = "1") Then
                                If partnerID = "MLCIP130005" Then 'AUB
                                    strquery1 = String.Format("call kppartners.HOgetRfcTransaction_Partners('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','AUB');", _day, Convert.ToDateTime(_datefrom), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode)
                                End If
                            End If
                            If partnerID = westernunionid Then 'western
                                strquery = String.Format("call kppartners.HOgetRfcTransaction_Partners('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','WU');", _day, Convert.ToDateTime(_datefrom), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode)
                            ElseIf partnerID = skybridge Then 'skybridge
                                strquery = String.Format("call kppartners.HOgetRfcTransaction_Partners('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','SKY');", _day, Convert.ToDateTime(_datefrom), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode)
                            Else
                                strquery = String.Format("call kppartners.HOgetRfcTransaction('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}');", _day, Convert.ToDateTime(_datefrom), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode)
                            End If
                            If ReportType = 3 Then
                                strquery = String.Format("call kppartners.HOgetRfcPaymentSolution('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}');", _day, Convert.ToDateTime(_datefrom), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode)
                            ElseIf ReportType = 5 Then
                                expressdb = String.Format("Reports{0}{1}", _day, _year)
                                strquery = String.Format("call kpOFW.HOGetExpressRFC('{0}','{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", expressdb, Convert.ToDateTime(_datefrom), _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                strquery1 = String.Format("Call kpbillspayment.HOgetdailyRFCBP ('{0}{1:dd}','{2}','{3}');", _day, Convert.ToDateTime(_datefrom), partnerID, _year)
                            ElseIf sotxnreftype = "SpecialPartner" Then
                                Dim _db As String = "sendout" + Convert.ToDateTime(_datefrom).ToString("MMddyyyy")
                                strquery = String.Format("call reportsdb.HOgetRfcTransaction('{0}','{1}','{2}{3:dd}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}');", partnerID, _year, _day, Convert.ToDateTime(_datefrom), username, userrole, _db, zCode, rCode, aCode, bCode, usertype, oldzCode)
                            End If
                            _datefrom = _datefrom.AddDays(1)
                            _loop = i + 1
                            GoTo dataloop
                        Next
                    Else
                        GoTo _finaldata
                    End If
                End If
            End If
dataloop:
                If ReportType = 5 Then
                    expresstrap = 0
                    If expresstrap = 0 Then
                        Con.OpenCon("KPMLExpress")
                        GoTo _read
                    End If
_billspayExpress:
                If expresstrap = 1 Then
                    Con.OpenCon("KPBillsPayment")
                    strquery = strquery1
                    GoTo _read

                End If
            Else
                If partnerID = westernunionid Then 'western
                    Con.OpenCon("WesternUnion")
                ElseIf partnerID = skybridge Then 'skybridge
                    Con.OpenCon("KPAPINEW")
                Else
                    getconnections()
                End If
                expresstrap = 0
_apinewconnect:
                If ReportType = 1 And expresstrap = 1 Then
                    Con.OpenCon("KPAPINEW")
                End If
                End If

                Dim partnerloop As Integer = 0
_aub:

                If partnerID = "MLCIP130005" And partnerloop = 1 Then 'AUB
                    strquery = strquery1
                    Con.OpenCon("AUB")

                End If
_read:
                Using Con.GetCon()
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    While dr.Read()
                        datarow = dtable.NewRow()
                        'clsreport.ID = clsreport.ID + 1
                        'datarow("ID") = clsreport.ID
                        datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
                        datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("KPTN")), Trim(dr.Item("KPTN")), "-"))
                        datarow("referenceno") = UCase(If(Not IsDBNull(dr.Item("referenceno")), Trim(dr.Item("referenceno")), "-"))
                        datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                        datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                        datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                        datarow("cancelleddate") = UCase(If(Not IsDBNull(dr.Item("cancelleddate")) And CType(dr.Item("cancelleddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("cancelleddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                        datarow("operator") = UCase(If(Not IsDBNull(dr.Item("Operator")), Trim(dr.Item("Operator")), Trim(dr.Item("InitiatedBy"))))
                        datarow("cancelreason") = UCase(If(Not IsDBNull(dr.Item("cancelreason")), Trim(dr.Item("cancelreason")), "-"))
                        datarow("currency") = UCase(If(Not IsDBNull(dr.Item("Currency")), Trim(dr.Item("Currency")), "-"))
                        datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                        datarow("Charge") = UCase(If(Not IsDBNull(dr.Item("Charge")), CType(Trim(dr.Item("Charge")), System.Decimal), 0))
                        datarow("InitiatedBy") = UCase(If(Not IsDBNull(dr.Item("InitiatedBy")), Trim(dr.Item("InitiatedBy")), Trim(dr.Item("Operator"))))
                        datarow("RequestNo") = UCase(If(Not IsDBNull(dr.Item("RequestNo")), Trim(dr.Item("RequestNo")), "-"))
                        datarow("DateRequest") = UCase(If(Not IsDBNull(dr.Item("DateRequest")) And CType(dr.Item("DateRequest"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("DateRequest"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                        datarow("RequestType") = UCase(If(Not IsDBNull(dr.Item("RequestType")), Trim(dr.Item("RequestType")), "-"))
                        dtable.Rows.Add(datarow)
                        dtable.AcceptChanges()
                        dtable1.Merge(dtable)
                    End While
                    dr.Close()
                    cmd = Nothing
                End Using
                If ReportType = 1 And expresstrap = 0 Then
                    expresstrap = 1
                    GoTo _apinewconnect
                ElseIf ReportType = 5 And expresstrap = 0 Then
                    expresstrap = 1
                    GoTo _billspayExpress
                End If
                If partnerID = "MLCIP130005" And partnerloop = 0 Then 'AUB 
                    partnerloop = 1
                    GoTo _aub
                End If
                If _loop <= _monthnoofdays Then
                    If drpPeriod.Text = 2 Then
                        GoTo afterdataloop
                    ElseIf drpPeriod.Text = 3 Then
                        GoTo afterdataloop1
                    End If
                End If
                dtmerger.Merge(dtable1)
_finaldata:
                If dtmerger.Rows.Count = 0 Then
                    GetMessage("No record for " & _dateofreport)
                Else
                    loadreport("Amendments")
                End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " amendments")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                amendments()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    '8 CANCELLED PAYOUT
    Public Sub cancelledpayout()
        dtable = GetDatatable()
        dtable.Clear()
        dtable1 = GetDatatable()
        dtable1.Clear()
        dtmerger = GetDatatable()
        dtmerger.Clear()
        Dim flag As String = ""
        Try
            If drpPeriod.Text = 1 Or _monthnoofdays = 1 Then 'DAILY
                If (ReportType = "1") Then
                    If partnerID = "MLCIP130005" Then 'AUB
                        strquery1 = String.Format("call kppartners.HOgetcancelledpayout_Partners('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','AUB');", _day, partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode, flag)
                    End If
                End If
                If partnerID = westernunionid Then 'western
                    strquery = String.Format("call kppartners.HOgetcancelledpayout_Partners('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','WU');", _day, partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode, flag)
                ElseIf partnerID = skybridge Then 'skybridge
                    strquery = String.Format("call kppartners.HOgetcancelledpayout_Partners('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','SKY');", _day, partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode, flag)
                Else
                    strquery = String.Format("call kppartners.HOgetcancelledpayout('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}');", _day, partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode)
                End If
                If ReportType = 5 Then
                    If _monthnoofdays = 1 Then
                        expressdb = String.Format("Reports{0}{1}", Convert.ToDateTime(txtdateFrom.Text).ToString("MM"), _year)
                    Else
                        expressdb = String.Format("Reports{0}{1}", Convert.ToDateTime(txtDate.Text).ToString("MM"), _year)
                    End If
                    strquery = String.Format("call kpOFW.HOGetExpressCP('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", expressdb, expressday, _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                    strquery1 = String.Format("call kpdomestic.HOGetDomesticExpressCPO('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}');", _day, zCode, rCode, aCode, bCode, _year, usertype, partnerID, oldzCode)
                    'walquery = String.Format("call KPWalletReportsSP.HOWalletGetExpressCP('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}');", _day, zCode, rCode, aCode, bCode, _year, usertype, partnerID, oldzCode)
                    walquery = String.Format("call HOWalletGetExpressCP('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}');", _day, zCode, rCode, aCode, bCode, _year, usertype, partnerID, oldzCode)
                    kptquery = String.Format("call kptogoadmin.HOGetKPTogoExpressCPO('{0}','{1}','{2}');", _day, _year, partnerID)
                    gstrquery = String.Format("call kpglobal.HOGetGlobalExpressCPO('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}');", _day, zCode, rCode, aCode, bCode, _year, usertype, partnerID, oldzCode)
                    'kp8strquery = String.Format("call kp8reportsdb.Kp8MLExpress_Cancelled('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}');", _day, zCode, rCode, aCode, bCode, _year, usertype, partnerID, oldzCode)
                ElseIf sotxnreftype = "SpecialPartner" Then
                    Dim _db As String = String.Empty
                    If _monthnoofdays = 1 Then
                        _db = "payout" + Convert.ToDateTime(txtdateFrom.Text).ToString("MMddyyyy")
                    Else
                        _db = "payout" + Convert.ToDateTime(txtDate.Text).ToString("MMddyyyy")
                    End If
                    strquery = String.Format("call reportsdb.HOgetcancelledpayout('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}');", partnerID, _year, _day, username, userrole, _db, zCode, rCode, aCode, bCode, usertype, oldzCode)
                End If

                    _loop = 2
                    GoTo dataloop
                ElseIf drpPeriod.Text = 2 Or drpPeriod.Text = 3 Or _monthnoofdays > 1 Then 'MONTHLY/RANGE
                    If drpPeriod.Text = 2 Then
                        If _day < 10 Then
                            _day = String.Concat("0", _day)
                        End If
afterdataloop:
                        If _loop <= _monthnoofdays Then
                            For i As Integer = _loop To _monthnoofdays
                                If (ReportType = "1") Then
                                    If partnerID = "MLCIP130005" Then 'AUB
                                        strquery1 = String.Format("call kppartners.HOgetcancelledpayout_Partners('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','AUB');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode, flag)
                                    End If
                                End If
                            If partnerID = westernunionid Then 'western
                                strquery = String.Format("call kppartners.HOgetcancelledpayout_Partners('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','WU');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode, flag)
                            ElseIf partnerID = skybridge Then 'skybridge
                                strquery = String.Format("call kppartners.HOgetcancelledpayout_Partners('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','SKY');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode, flag)
                            Else
                                strquery = String.Format("call kppartners.HOgetcancelledpayout('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode)
                            End If
                            If ReportType = 5 Then
                                expressdb = String.Format("Reports{0}{1}", _day, _year)
                                strquery = String.Format("call kpOFW.HOGetExpressCP('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", expressdb, i.ToString.PadLeft(2, CType("0", Char)), _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                strquery1 = String.Format("call kpdomestic.HOGetDomesticExpressCPO('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", _day, i.ToString.PadLeft(2, CType("0", Char)), zCode, rCode, aCode, bCode, _year, usertype, partnerID, oldzCode)
                                'walquery = String.Format("call KPWalletReportsSP.HOWalletGetExpressCP('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", _day, i.ToString.PadLeft(2, CType("0", Char)), zCode, rCode, aCode, bCode, _year, usertype, partnerID, oldzCode)
                                walquery = String.Format("call HOWalletGetExpressCP('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", _day, i.ToString.PadLeft(2, CType("0", Char)), zCode, rCode, aCode, bCode, _year, usertype, partnerID, oldzCode)
                                kptquery = String.Format("call kptogoadmin.HOGetKPTogoExpressCPO('{0}{1}','{2}','{3}');", _day, i.ToString.PadLeft(2, CType("0", Char)), _year, partnerID)
                                gstrquery = String.Format("call kpglobal.HOGetGlobalExpressCPO('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", _day, i.ToString.PadLeft(2, CType("0", Char)), zCode, rCode, aCode, bCode, _year, usertype, partnerID, oldzCode)
                                'kp8strquery = String.Format("call kp8reportsdb.Kp8MLExpress_Cancelled('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", _day, i.ToString.PadLeft(2, CType("0", Char)), zCode, rCode, aCode, bCode, _year, usertype, partnerID, oldzCode)
                            ElseIf sotxnreftype = "SpecialPartner" Then
                                Dim _db As String = "payout" + _day + i.ToString.PadLeft(2, CType("0", Char)) + _year
                                strquery = String.Format("call reportsdb.HOgetcancelledpayout('{0}','{1}','{2}{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}');", partnerID, _year, _day, i.ToString.PadLeft(2, CType("0", Char)), username, userrole, _db, zCode, rCode, aCode, bCode, usertype, oldzCode)
                            End If
                            _loop = i + 1
                            GoTo dataloop
                            Next
                        Else
                            GoTo _finaldata
                        End If

                    ElseIf drpPeriod.Text = 3 Then
                        Dim _datefrom As Date = txtdateFrom.Text
afterdataloop1:
                        If _loop <= _monthnoofdays Then
                            For i As Integer = _loop To _monthnoofdays
                                _day = Convert.ToDateTime(_datefrom).ToString("MM")
                                _year = Convert.ToDateTime(_datefrom).ToString("yyyy")
                                If (ReportType = "1") Then
                                    If partnerID = "MLCIP130005" Then 'AUB
                                        strquery1 = String.Format("call kppartners.HOgetcancelledpayout_Partners('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','AUB');", _day, Convert.ToDateTime(_datefrom), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode, flag)
                                    End If
                                End If
                            If partnerID = westernunionid Then 'western
                                strquery = String.Format("call kppartners.HOgetcancelledpayout_Partners('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','WU');", _day, Convert.ToDateTime(_datefrom), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode, flag)
                            ElseIf partnerID = skybridge Then 'skybridge
                                strquery = String.Format("call kppartners.HOgetcancelledpayout_Partners('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','SKY');", _day, Convert.ToDateTime(_datefrom), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode, flag)
                            Else
                                strquery = String.Format("call kppartners.HOgetcancelledpayout('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}');", _day, Convert.ToDateTime(_datefrom), partnerID, zCode, rCode, aCode, bCode, _year, sotxnreftype, usertype, username, userrole, oldzCode)
                            End If
                            If ReportType = 5 Then
                                expressdb = String.Format("Reports{0}{1}", _day, _year)
                                strquery = String.Format("call kpOFW.HOGetExpressCP('{0}','{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", expressdb, Convert.ToDateTime(_datefrom), _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                                strquery1 = String.Format("call kpdomestic.HOGetDomesticExpressCPO('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", _day, Convert.ToDateTime(_datefrom), zCode, rCode, aCode, bCode, _year, usertype, partnerID, oldzCode)
                                'walquery = String.Format("call KPWalletReportsSP.HOWalletGetExpressCP('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", _day, Convert.ToDateTime(_datefrom), zCode, rCode, aCode, bCode, _year, usertype, partnerID, oldzCode)
                                walquery = String.Format("call HOWalletGetExpressCP('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", _day, Convert.ToDateTime(_datefrom), zCode, rCode, aCode, bCode, _year, usertype, partnerID, oldzCode)
                                kptquery = String.Format("call kptogoadmin.HOGetKPTogoExpressCPO('{0}{1:dd}','{2}','{3}');", _day, Convert.ToDateTime(_datefrom), _year, partnerID)
                                gstrquery = String.Format("call kpglobal.HOGetGlobalExpressCPO('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", _day, Convert.ToDateTime(_datefrom), zCode, rCode, aCode, bCode, _year, usertype, partnerID, oldzCode)
                                'kp8strquery = String.Format("call kp8reportsdb.Kp8MLExpress_Cancelled('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", _day, Convert.ToDateTime(_datefrom), zCode, rCode, aCode, bCode, _year, usertype, partnerID, oldzCode)
                            ElseIf sotxnreftype = "SpecialPartner" Then
                                Dim _db As String = "payout" + Convert.ToDateTime(_datefrom).ToString("MMddyyyy")
                                strquery = String.Format("call reportsdb.HOgetcancelledpayout('{0}','{1}','{2}{3:dd}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}');", partnerID, _year, _day, Convert.ToDateTime(_datefrom), username, userrole, _db, zCode, rCode, aCode, bCode, usertype, oldzCode)
                            End If
                            _datefrom = _datefrom.AddDays(1)
                            _loop = i + 1
                            GoTo dataloop
                            Next
                        Else
                            GoTo _finaldata
                        End If
                    End If
                End If
dataloop:
                If ReportType = 5 Then
                    expresstrap = 0
                    If expresstrap = 0 Then
                        Con.OpenCon("KPMLExpress")
                        GoTo _read
                    End If
_expressconnect:
                    If expresstrap = 1 Then
                        Con.OpenCon("KPUsers")
                        strquery = strquery1
                        GoTo _read
                    ElseIf expresstrap = 2 Then
                        Con.OpenCon("KPUsers")
                        strquery = kptquery
                        GoTo _read
                    ElseIf expresstrap = 3 Then
                        Con.OpenCon("KPMLWallet")
                        strquery = walquery
                        GoTo _read
                    ElseIf expresstrap = 4 Then
                        Con.OpenCon("KPGLOBAL")
                        strquery = gstrquery
                        GoTo _read
                    ElseIf expresstrap = 5 Then
                        Con.OpenCon("DomesticCloud")
                        strquery = strquery1
                        GoTo _read
                ElseIf expresstrap = 6 Then
                    Con.OpenCon("KPGLOBALCloud")
                    strquery = gstrquery
                    GoTo _read
                ElseIf expresstrap = 7 Then
                    Con.OpenCon("KP8DomesticB")
                    strquery = kp8strquery
                    GoTo _read
                    End If
                Else
                If partnerID = westernunionid Then 'western
                    Con.OpenCon("WesternUnion")
                ElseIf partnerID = skybridge Then 'skybridge
                    Con.OpenCon("KPAPINEW")
                Else
                    getconnections()
                End If
                    expresstrap = 0
_apinewconnect:
                    If ReportType = 1 And expresstrap = 1 Then
                        Con.OpenCon("KPAPINEW")
                    End If
                End If
                Dim partnerloop As Integer = 0
_aub:

                If partnerID = "MLCIP130005" And partnerloop = 1 Then 'AUB
                    Con.OpenCon("AUB")
                    strquery = strquery1

                End If


_read:
                Using Con.GetCon()
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    While dr.Read()
                        datarow = dtable.NewRow()
                        'clsreport.ID = clsreport.ID + 1
                        'datarow("ID") = clsreport.ID
                        datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
                        datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("KPTN")), Trim(dr.Item("KPTN")), "-"))
                        datarow("referenceno") = UCase(If(Not IsDBNull(dr.Item("referenceno")), Trim(dr.Item("referenceno")), "-"))
                        datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                        datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                        datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                        datarow("cancelleddate") = UCase(If(Not IsDBNull(dr.Item("cancelleddate")) And CType(dr.Item("cancelleddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("cancelleddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                        datarow("operator") = UCase(If(Not IsDBNull(dr.Item("Operator")), Trim(dr.Item("Operator")), "-"))
                        datarow("cancelreason") = UCase(If(Not IsDBNull(dr.Item("cancelreason")), Trim(dr.Item("cancelreason")), "-"))
                        datarow("currency") = UCase(If(Not IsDBNull(dr.Item("Currency")), Trim(dr.Item("Currency")), "-"))
                        datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                        datarow("Charge") = UCase(If(Not IsDBNull(dr.Item("Charge")), CType(Trim(dr.Item("Charge")), System.Decimal), 0))
                        datarow("socancelcharge") = UCase(If(Not IsDBNull(dr.Item("socancelcharge")), CType(Trim(dr.Item("socancelcharge")), System.Decimal), 0))
                        If drpPartnerAccountlist.Text = "-Select-" Then
                            datarow("partnername") = UCase(If(Not IsDBNull(dr.Item("partnername")), Trim(dr.Item("partnername")), "-"))
                        End If
                        dtable.Rows.Add(datarow)
                        dtable.AcceptChanges()
                        dtable1.Merge(dtable)
                    End While
                    dr.Close()
                    cmd = Nothing
                End Using
                If ReportType = 5 Then
                    If expresstrap = 0 Then
                        expresstrap = 1
                        GoTo _expressconnect
                    ElseIf expresstrap = 1 Then
                        expresstrap = 2
                        GoTo _expressconnect
                    ElseIf expresstrap = 2 Then
                        expresstrap = 3
                        GoTo _expressconnect
                    ElseIf expresstrap = 3 Then
                        expresstrap = 4
                        GoTo _expressconnect
                    ElseIf expresstrap = 4 Then
                        expresstrap = 5
                        GoTo _expressconnect
                    ElseIf expresstrap = 5 Then
                        expresstrap = 6
                        GoTo _expressconnect
                    'ElseIf expresstrap = 6 Then
                    '    expresstrap = 7
                    '    GoTo _expressconnect
                    End If
            ElseIf ReportType = 1 And expresstrap = 0 And partnerID <> skybridge Then
                expresstrap = 1
                GoTo _apinewconnect
                End If

                If partnerID = "MLCIP130005" And partnerloop = 0 Then 'AUB 
                    partnerloop = 1
                    GoTo _aub
                End If


                If _loop <= _monthnoofdays Then
                    If drpPeriod.Text = 2 Then
                        GoTo afterdataloop
                    ElseIf drpPeriod.Text = 3 Then
                        GoTo afterdataloop1
                    End If
                End If
                dtmerger.Merge(dtable1)
_finaldata:
                If dtmerger.Rows.Count = 0 Then
                    GetMessage("No record for " & _dateofreport)
                Else
                    If ReportType = 5 Then
                    'getoperatormobilebillspay(dtmerger, "cancelpoExpress")
                        GetOperatorAndBranch(dtmerger, "cancelpoExpress")
                    End If
                    loadreport("Cancelled-Payout")
                End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " cancelledpayout")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                cancelledpayout()
            Else
                GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                'GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    '10 ML Express Payout
    Public Sub mlexpresspayout()
        dtable = GetDatatable()
        dtable.Clear()
        dtable1 = GetDatatable()
        dtable1.Clear()
        dtmerger = GetDatatable()
        dtmerger.Clear()

        Try
            If drpPeriod.Text = 1 Or _monthnoofdays = 1 Then 'DAILY
                If _monthnoofdays = 1 Then
                    expressdb = String.Format("Reports{0}{1}", Convert.ToDateTime(txtdateFrom.Text).ToString("MM"), _year)
                Else
                    expressdb = String.Format("Reports{0}{1}", Convert.ToDateTime(txtDate.Text).ToString("MM"), _year)
                End If
                'strquery1 = String.Format("call kpforms.HOGetExpressDomesticAgentSOClaimed('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}');", _day, _year, partnerID, zCode, rCode, aCode, bCode, usertype)
                strquery = String.Format("call kpOFW.HOGetExpressAgentSOClaimed('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", expressdb, expressday, _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                _loop = 2
                GoTo dataloop
            ElseIf drpPeriod.Text = 2 Or drpPeriod.Text = 3 Or _monthnoofdays > 1 Then 'MONTHLY/RANGE
                If drpPeriod.Text = 2 Then
                    If _day < 10 Then
                        _day = String.Concat("0", _day)
                    End If
afterdataloop:
                    If _loop <= _monthnoofdays Then
                        For i As Integer = _loop To _monthnoofdays
                            expressdb = String.Format("Reports{0}{1}", _day, _year)
                            'strquery1 = String.Format("call kpforms.HOGetExpressDomesticAgentSOClaimed('{0}{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}');", _day, i.ToString.PadLeft(2, CType("0", Char)), _year, partnerID, zCode, rCode, aCode, bCode, usertype)
                            strquery = String.Format("call kpOFW.HOGetExpressAgentSOClaimed('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", expressdb, i.ToString.PadLeft(2, CType("0", Char)), _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                            _loop = i + 1
                            GoTo dataloop
                        Next
                    Else
                        GoTo _finaldata
                    End If

                ElseIf drpPeriod.Text = 3 Then
                    Dim _datefrom As Date = txtdateFrom.Text
afterdataloop1:
                    If _loop <= _monthnoofdays Then
                        For i As Integer = _loop To _monthnoofdays
                            _day = Convert.ToDateTime(_datefrom).ToString("MM")
                            _year = Convert.ToDateTime(_datefrom).ToString("yyyy")
                            'strquery1 = String.Format("call kpforms.HOGetExpressDomesticAgentSOClaimed('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}');", _day, Convert.ToDateTime(_datefrom), _year, partnerID, zCode, rCode, aCode, bCode, usertype)
                            expressdb = String.Format("Reports{0}{1}", _day, _year)
                            strquery = String.Format("call kpOFW.HOGetExpressAgentSOClaimed('{0}','{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}');", expressdb, Convert.ToDateTime(_datefrom), _year, partnerID, zCode, rCode, aCode, bCode, usertype, oldzCode)
                            _datefrom = _datefrom.AddDays(1)
                            _loop = i + 1
                            GoTo dataloop
                        Next
                    Else
                        GoTo _finaldata
                    End If
                End If
            End If
dataloop:
            If ReportType = 5 Then
                expresstrap = 0
                If expresstrap = 0 Then
                    Con.OpenCon("KPMLExpress")
                    GoTo _read
                End If
                '_domesticexpress:
                '                If expresstrap = 1 Then
                '                    Con.OpenCon("KPUsers")
                '                    strquery = strquery1
                '                    GoTo _read
                '                End If
            Else
                getconnections()
            End If
_read:
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader()
                While dr.Read()
                    Dim _canceldate As String = If(Not IsDBNull(dr.Item("cancelleddate")), Trim(dr.Item("cancelleddate")), "0000-00-00 00:00:00")
                    Dim _tdate As String = If(Not IsDBNull(dr.Item("transdate")), Trim(dr.Item("transdate")), "0000-00-00 00:00:00")
                    datarow = dtable.NewRow()
                    'clsreport.ID = clsreport.ID + 1
                    'datarow("ID") = clsreport.ID
                    datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
                    datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("KPTN")), Trim(dr.Item("KPTN")), "-"))
                    datarow("referenceno") = UCase(If(Not IsDBNull(dr.Item("referenceno")), Trim(dr.Item("referenceno")), "-"))
                    datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                    datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                    datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And _tdate <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("cancelleddate") = UCase(If(Not IsDBNull(dr.Item("cancelleddate")) And _canceldate <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("cancelleddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("time") = UCase(If(Not IsDBNull(dr.Item("time")), Trim(dr.Item("time")), "-"))
                    datarow("receivercontactno") = UCase(If(Not IsDBNull(dr.Item("Receiver_Phone")), Trim(dr.Item("Receiver_Phone")), "-"))
                    datarow("operator") = UCase(If(Not IsDBNull(dr.Item("Operator")), Trim(dr.Item("Operator")), "-"))
                    datarow("currency") = UCase(If(Not IsDBNull(dr.Item("Currency")), Trim(dr.Item("Currency")), "-"))
                    datarow("cancelreason") = UCase(If(Not IsDBNull(dr.Item("cancelreason")), Trim(dr.Item("cancelreason")), "-"))
                    datarow("branchcode") = UCase(If(Not IsDBNull(dr.Item("branchcode")), Trim(dr.Item("branchcode")), "-"))
                    datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                    datarow("Charge") = UCase(If(Not IsDBNull(dr.Item("Charge")), CType(Trim(dr.Item("Charge")), System.Decimal), 0))
                    datarow("adjprincipal") = UCase(If(Not IsDBNull(dr.Item("adjprincipal")), CType(Trim(dr.Item("adjprincipal")), System.Decimal), 0))
                    datarow("adjCharge") = UCase(If(Not IsDBNull(dr.Item("adjCharge")), CType(Trim(dr.Item("adjCharge")), System.Decimal), 0))
                    datarow("socancelprincipal") = UCase(If(Not IsDBNull(dr.Item("socancelprincipal")), CType(Trim(dr.Item("socancelprincipal")), System.Decimal), 0))
                    datarow("socancelcharge") = UCase(If(Not IsDBNull(dr.Item("socancelcharge")), CType(Trim(dr.Item("socancelcharge")), System.Decimal), 0))
                    datarow("flag") = UCase(If(Not IsDBNull(dr.Item("flag")), Trim(dr.Item("flag")), "-"))
                    datarow("branchname") = UCase(If(Not IsDBNull(dr.Item("branchname")), Trim(dr.Item("branchname")), "-"))
                    If drpPartnerAccountlist.Text = "-Select-" Then
                        datarow("partnername") = UCase(If(Not IsDBNull(dr.Item("partnername")), Trim(dr.Item("partnername")), "-"))
                    End If
                    If sotxnreftype = "WSC" Or ReportType = 5 Then
                        datarow("commission") = UCase(If(Not IsDBNull(dr.Item("commission")), CType(Trim(dr.Item("commission")), System.Decimal), 0))
                    End If
                    If ReportType = 5 Then
                        datarow("zonecode") = UCase(If(Not IsDBNull(dr.Item("zonecode")), Trim(dr.Item("zonecode")), ""))
                    End If
                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()
                    dtable1.Merge(dtable)
                End While
                dr.Close()
                cmd = Nothing
            End Using
            'If ReportType = 5 Then
            '    If expresstrap = 0 Then
            '        expresstrap = 1
            '        GoTo _domesticexpress
            '    End If
            'End If
            If _loop <= _monthnoofdays Then
                If drpPeriod.Text = 2 Then
                    GoTo afterdataloop
                ElseIf drpPeriod.Text = 3 Then
                    GoTo afterdataloop1
                End If
            End If
            dtmerger.Merge(dtable1)
_finaldata:
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                If ReportType = 5 Then
                    getbranchname(dtmerger)
                    GetOperatorAndBranch(dtmerger, "PO")
                End If
                loadreport("ExpressPayout")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " mlexpresspayout")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                mlexpresspayout()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    '11 Express loading
    Public Sub expressloading()
        dtable.Clear()
        dtable1 = GetExpressLoadingDTable()
        dtable1.Clear()
        dtmerger = GetExpressLoadingDTable()
        dtmerger.Clear()
        'Dim counter As Integer = 0
        'Dim min As Integer = 0
        'Dim max As Integer = 0
        'Dim wtable1 As Integer
        'Dim dbname As String = String.Empty
        'Dim intwallet As Integer
        'Dim walletstr As String = String.Empty
        'Dim tablename As String = String.Empty
        Try
            getconnections()
            cmd = New MySqlCommand("CALL `kpOFW`.`HOcorporate_MLExpress`();", Con.GetCon())
            cmd.CommandTimeout = 0
            dr = cmd.ExecuteReader
            If dr.HasRows() Then
                dtable.Load(dr)
            End If
            dr.Close()
            'Dim min As Decimal = 0
            'Dim smin As String = ""
            'Dim walletdb As String = ""

            Try
                'For Each row As DataRow In dtable.Rows
                'Dim walletno As Int64 = Convert.ToInt64(Trim(row("accountno")))
                'databasewallet = walletUserconf(walletno)
                'Dim conn As MySqlConnection = databasewallet.getConnection
                Con.OpenCon("KPMLWallet")
                Using Con.GetCon()
                    'walletstr = Trim(row.Item("accountno"))
                    'intwallet = Convert.ToInt32(walletstr.Substring(walletstr.Length - 7))
                    ''wtable = Math.Floor(intwallet / 100)
                    'wtable1 = intwallet Mod 100
                    'If wtable1 = 0 Then
                    '    min = intwallet - 99
                    '    max = intwallet
                    'Else
                    '    min = (intwallet - wtable1) + 1
                    '    max = min + 99
                    'End If
                    ''min = wtable1 + 1
                    ''max = wtable1 + 100
                    'dbname = "wallet" + min.ToString() + "_" + max.ToString() + ""
                    'tablename = "walletno" + intwallet.ToString() + ""

                    'strquery = String.Format("Call KPWalletReportsSP.getExpressWalletLoading('{0}','{1}','{2}','{3}','{4}','{5}')", Trim(row(0)), walletno, "", gendate, gendateto, drpPeriod.SelectedIndex)
                    'strquery = String.Format("Call KPWalletReportsSP.getExpressWalletLoading('{0}','{1}','{2}','{3}','{4}','{5}')", drpPartnerAccountlist.SelectedValue.ToString(), drpaccountno.SelectedValue.ToString(), "", gendate, gendateto, drpPeriod.SelectedIndex)
                    strquery = String.Format("Call getExpressWalletLoading('{0}','{1}','{2}','{3}','{4}','{5}')", drpPartnerAccountlist.SelectedValue.ToString(), drpaccountno.SelectedValue.ToString(), "", gendate, gendateto, drpPeriod.SelectedIndex)
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader()
                    While dr.Read()
                        datarow = dtable1.NewRow()
                        clsreport.ID = clsreport.ID + 1
                        datarow("ID") = clsreport.ID
                        datarow("AgentName") = UCase(If(Not IsDBNull(dr.Item("AgentName")), Trim(dr.Item("AgentName")), "-"))
                        datarow("AccountNo") = UCase(If(Not IsDBNull(dr.Item("AccountNo")), Trim(dr.Item("AccountNo")), "-"))
                        datarow("Transdate") = UCase(If(Not IsDBNull(dr.Item("Transdate").ToString()), Trim(dr.Item("Transdate").ToString()), "-"))
                        'datarow("Transdate") = Trim(dr.Item("Transdate").ToString())
                        datarow("KPTN") = UCase(If(Not IsDBNull(dr.Item("KPTN")), Trim(dr.Item("KPTN")), "-"))
                        datarow("LoadAmount") = UCase(If(Not IsDBNull(dr.Item("LoadAmount")), CType(Trim(dr.Item("LoadAmount")), System.Decimal), 0))
                        datarow("Operator") = UCase(If(Not IsDBNull(dr.Item("Operator")) And dr.Item("Operator") <> "", Trim(dr.Item("Operator")), Trim(dr.Item("operatorid"))))
                        datarow("Branch") = UCase(If(Not IsDBNull(dr.Item("Branch")) And dr.Item("Branch") <> "", Trim(dr.Item("Branch")), Trim(dr.Item("operatorid"))))
                        datarow("zcode") = UCase(If(Not IsDBNull(dr.Item("zcode")) And dr.Item("zcode") <> "", Trim(dr.Item("zcode")), Trim(dr.Item("zcode"))))
                        dtable1.Rows.Add(datarow)
                        dtable1.AcceptChanges()
                        dtable2.Merge(dtable1)
                    End While
                    dr.Close()
                End Using
                Con.GetCon.Close()

                'If drpPartnerAccountlist.Text = UCase(Trim(row(0).ToString)) + " / " + UCase(Trim(row(1).ToString)) Then
                'Dim walletno As Int64 = Convert.ToInt64((Trim(row("accountno")).Substring(4, 10)))


                'Dim length As Integer = walletno.ToString().Length
                'min = CDec(Math.Truncate((walletno / 100)))
                'smin = min * 100
                'smin = (min * 100) + 1
                'If walletno < smin Then
                '    min = min - 1
                '    smin = min * 100
                '    smin = (min * 100) + 1
                'End If
                'walletdb = String.Format("wallet{0}_{1}.walletno{2}", smin, Convert.ToString((min + 1) * 100), walletno)

                'cmd = New MySqlCommand(String.Format("Call kpmobile.getExpressWalletLoading('{0}','{1}','{2}','{3}','{4}')", Trim(row(0)), walletno, gendate, gendateto, drpPeriod.SelectedIndex), Con.GetCon())
                'cmd.CommandTimeout = 0
                'dr = cmd.ExecuteReader()
                'While dr.Read()
                '    datarow = dtable1.NewRow()
                '    clsreport.ID = clsreport.ID + 1
                '    datarow("ID") = clsreport.ID
                '    datarow("AgentName") = UCase(If(Not IsDBNull(dr.Item("AgentName")), Trim(dr.Item("AgentName")), "-"))
                '    datarow("AccountNo") = UCase(If(Not IsDBNull(dr.Item("AccountNo")), Trim(dr.Item("AccountNo")), "-"))
                '    datarow("Transdate") = UCase(If(Not IsDBNull(dr.Item("Transdate")), Trim(dr.Item("Transdate")), "-"))
                '    datarow("KPTN") = UCase(If(Not IsDBNull(dr.Item("KPTN")), Trim(dr.Item("KPTN")), "-"))
                '    datarow("LoadAmount") = UCase(If(Not IsDBNull(dr.Item("LoadAmount")), CType(Trim(dr.Item("LoadAmount")), System.Decimal), 0))
                '    datarow("Operator") = UCase(If(Not IsDBNull(dr.Item("Operator")) And dr.Item("Operator") <> "", Trim(dr.Item("Operator")), Trim(dr.Item("operatorid"))))
                '    datarow("Branch") = UCase(If(Not IsDBNull(dr.Item("Branch")) And dr.Item("Branch") <> "", Trim(dr.Item("Branch")), Trim(dr.Item("operatorid"))))
                '    datarow("zcode") = UCase(If(Not IsDBNull(dr.Item("zcode")) And dr.Item("zcode") <> "", Trim(dr.Item("zcode")), Trim(dr.Item("zcode"))))
                '    dtable1.Rows.Add(datarow)
                '    dtable1.AcceptChanges()
                '    dtable2.Merge(dtable1)
                'End While
                'dr.Close()
                ''GoTo done
                ''End If

                'Next
            Catch ex As Exception
                kplog.Error(ex.ToString())
            End Try

            dtmerger.Merge(dtable2)
            GetLoadExpressOperatorAndBranch(dtmerger)
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadreport("ExpressWalletLoading")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " expressloading")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                expressloading()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    '12 Transaction History
    Public Sub transactionhistory()
        Try
            Dim service As OFW = New OFW()
            Dim balinq As New ML.OFW.Contracts.Models.BalanceInqRptModel
            Dim monthlybal As New ML.OFW.Contracts.Models.MnthlyBalInqRptModel
            Dim balres As New ML.OFW.Contracts.Responses.BalanceInqRptResponse
            Dim walletid As String = ""

            Dim counter As Integer = 0
            Dim min As Integer = 0
            Dim max As Integer = 0
            Dim dbname As String = String.Empty
            Dim walletstr As String = String.Empty
            Dim tablename As String = String.Empty


            Try
                Dim _datefrom As DateTime
                Dim _dateto As DateTime
                Dim period As Integer = drpPeriod.Text
                Select Case period
                    Case 1 'DAILY
                        _datefrom = Convert.ToDateTime(txtDate.Text)
                        _dateto = Convert.ToDateTime(txtDate.Text)
                    Case 2 'MONTHLY
                        Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                        Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                        _datefrom = Convert.ToDateTime(firstday)
                        _dateto = Convert.ToDateTime(lastday)
                    Case 3 'RANGE
                        _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                        _dateto = Convert.ToDateTime(txtdateTo.Text)
                End Select

                Con.OpenCon("KPMLWallet")
                Using Con.GetCon()
                    'strquery1 = String.Format("CALL KPWalletReportsSP.getWalletNo('{0}');", partnerID)
                    strquery1 = String.Format("CALL getWalletNo('{0}');", partnerID)
                    cmd1 = New MySqlCommand(strquery1, Con.GetCon())
                    cmd1.CommandTimeout = 0
                    dr1 = cmd1.ExecuteReader
                    While dr1.Read()
                        walletid = dr1.Item("walletid")
                        cmd1 = Nothing
                    End While
                    dr1.Close()
                End Using
                Con.CloseCon()

                Con.OpenCon("KPMLWallet")
                Using Con.GetCon()
                    'strquery = String.Format("CALL `KPWalletReportsSP`.`HOgetWalletBeginBalTH2`('{0}','{1}','{2}')", walletid, tablename, _datefrom.ToString("yyyy-MM-dd"))
                    strquery = String.Format("CALL HOgetWalletBeginBalTH3('{0}','{1}','{2}')", walletid, tablename, _datefrom.ToString("yyyy-MM-dd"))
                    kplog.Info(strquery.ToString())
                    cmd = New MySqlCommand(strquery, Con.GetCon)
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    While dr.Read()
                        Session("begbalance") = dr.Item("beginningbalance")
                        Dim test As String = Session("begbalance")
                    End While
                    dr.Close()
                    cmd = Nothing
                End Using
                Con.CloseCon()

            Catch ex As Exception
                kplog.Error(ex.ToString())
            End Try

            '+=======================================================================================+
            Con.OpenCon("KPMLExpress")
            Using Con.GetCon()
                cmd = New MySqlCommand("CALL `kpOFW`.`HOcorporate_MLExpress`();", Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                If dr.HasRows() Then
                    dtable.Load(dr)
                End If
                dr.Close()
            End Using
            Con.CloseCon()
            'dtable = GetDatatable()
            'dtable.Clear()
            dtable1 = GetDatatable()
            dtable1.Clear()
            dtmerger = GetDatatable()
            dtmerger.Clear()

            For Each row As DataRow In dtable.Rows
                If drpPartnerAccountlist.Text = UCase(Trim(row(0).ToString)) + " / " + UCase(Trim(row(1).ToString)) Then
                    monthlybal.AccountNo = Trim(row(2).ToString())
                    balinq.AccountNo = Trim(row(2).ToString())
kplog.Info("11111")
                    GoTo _next
                End If
            Next
_next:
            If drpPeriod.Text = 1 Then 'DAILY
                monthlybal.dateFrom = Convert.ToDateTime(txtDate.Text).ToString("yyyy-MM-dd")
                monthlybal.dateTo = Convert.ToDateTime(txtDate.Text).ToString("yyyy-MM-dd")
            ElseIf drpPeriod.Text = 2 Then 'MONTHLY/RANGE
                Dim firstday As String = String.Format("{0}-{1}-01", _year, _day.PadLeft(2, "0"))
                Dim lastday As String = String.Format("{0}-{1}-{2}", _year, _day.PadLeft(2, "0"), _monthnoofdays)
                monthlybal.dateFrom = Convert.ToDateTime(firstday).ToString("yyyy-MM-dd")
                monthlybal.dateTo = Convert.ToDateTime(lastday).ToString("yyyy-MM-dd")
            ElseIf drpPeriod.Text = 3 Then
                monthlybal.dateFrom = Convert.ToDateTime(txtdateFrom.Text).ToString("yyyy-MM-dd")
                monthlybal.dateTo = Convert.ToDateTime(txtdateTo.Text).ToString("yyyy-MM-dd")
            End If
            monthlybal.UserName = partnerID
kplog.Info("2")
            balres = service.MnthlyBalInqRpt(monthlybal)
kplog.Info("3")
            Dim xdetails = balres.BalInqDetails
kplog.Info(xdetails)
            If Not IsNothing(xdetails) Then
kplog.Info("nothing")
                dtmerger = ListToDataTable(xdetails)
                loadreport("ExpressHistory")
            Else
                GetMessage("No record for " & _dateofreport)
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " transactionhistory")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                transactionhistory()
            Else
                GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                'GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub

    '=========================================
    'SM v7.23
    '=========================================
    Public Sub smdetailedreportsend()
        dtable.Clear()
        dtable1.Clear()
        dtable2.Clear()
        dtmerger.Clear()
        Try
            getconnections()
            Using Con.GetCon()
                If drpglobe.Text <> "-Select-" Then
                    strquery = String.Format("call kppartners.HOgetdailySMDTRSO('{0}','{1}','{2}')", _day, partnerID, _year)
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dtable.Load(dr)
                    cmd = Nothing
                    dtable1.Merge(dtable)
                Else
                    strquery1 = String.Format("select subaccountid from kpadminpartners.wssubagents where mainaccountid='{0}' group by  subaccountid", drppartnerid.Text)
                    cmd = New MySqlCommand(strquery1, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dtable2.Load(dr)
                    cmd = Nothing
                    For Each row As DataRow In dtable2.Rows
                        Dim pid = row("subaccountid").ToString()
                        strquery = String.Format("call kppartners.HOgetdailySMDTRSO('{0}','{1}','{2}')", _day, pid, _year)
                        cmd = New MySqlCommand(strquery, Con.GetCon())
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        dtable.Clear()
                        dtable.Load(dr)
                        cmd = Nothing
                        dtable1.Merge(dtable)
                    Next
                End If
            End Using
            dtmerger.Merge(dtable1)
_finaldata:
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadsmreport(20)
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " " + strquery1.ToString() + " smdetailedreportsend")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                smdetailedreportsend()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub smmldetailedreportreceive()
        dtable.Clear()
        dtable1.Clear()
        dtable2.Clear()
        dtmerger.Clear()
        Try
            getconnections()
            Using Con.GetCon()
                If drpsubpartnerid.Text <> "-Select-" Then
                    strquery = String.Format("call kppartners.HOgetdailySMMLDTRPO('{0}','{1}','{2}')", _day, partnerID, _year)
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dtable.Load(dr)
                    cmd = Nothing
                    dtable1.Merge(dtable)
                Else
                    strquery1 = String.Format("select subaccountid from kpadminpartners.wssubagents where mainaccountid='{0}' group by  subaccountid", drppartnerid.Text)
                    cmd = New MySqlCommand(strquery1, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dtable2.Load(dr)
                    cmd = Nothing
                    For Each row As DataRow In dtable2.Rows
                        Dim pid = row("subaccountid").ToString()
                        strquery = String.Format("call kppartners.HOgetdailySMMLDTRPO('{0}','{1}','{2}')", _day, pid, _year)
                        cmd = New MySqlCommand(strquery, Con.GetCon())
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        dtable.Clear()
                        dtable.Load(dr)
                        cmd = Nothing
                        dtable1.Merge(dtable)
                    Next
                End If
            End Using
            dtmerger.Merge(dtable1)
_finaldata:
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadsmreport(21)
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " " + strquery1.ToString() + "smmldetailedreportreceive")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                smmldetailedreportreceive()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub smsummaryreportsend()
        dtable.Clear()
        dtable1.Clear()
        dtable2.Clear()
        dtmerger.Clear()
        Try
            getconnections()
            Using Con.GetCon()
                strquery1 = String.Format("select subaccountid from kpadminpartners.wssubagents where mainaccountid='{0}' group by  subaccountid", drppartnerid.Text)
                cmd = New MySqlCommand(strquery1, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                dtable2.Load(dr)
                cmd = Nothing
                For Each row As DataRow In dtable2.Rows
                    Dim pid = row("subaccountid").ToString()
                    strquery = String.Format("call kppartners.HOgetdailySMSTRSO('{0}','{1}','{2}')", _day, pid, _year)
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dtable.Clear()
                    dtable.Load(dr)
                    cmd = Nothing
                    dtable1.Merge(dtable)
                Next
            End Using
            dtmerger.Merge(dtable1)
_finaldata:
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadsmreport(22)
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " " + strquery1.ToString() + "smsummaryreportsend")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                smsummaryreportsend()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub smmlsummaryreportreceive()
        dtable.Clear()
        dtable1.Clear()
        dtable2.Clear()
        dtmerger.Clear()
        Try
            getconnections()
            Using Con.GetCon()
                strquery1 = String.Format("select subaccountid from kpadminpartners.wssubagents where mainaccountid='{0}' group by  subaccountid", drppartnerid.Text)
                cmd = New MySqlCommand(strquery1, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                dtable2.Load(dr)
                cmd = Nothing
                For Each row As DataRow In dtable2.Rows
                    Dim pid = row("subaccountid").ToString()
                    strquery = String.Format("call kppartners.HOgetdailySMMLSTRPO('{0}','{1}','{2}')", _day, pid, _year)
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dtable.Clear()
                    dtable.Load(dr)
                    cmd = Nothing
                    dtable1.Merge(dtable)
                Next
            End Using
            dtmerger.Merge(dtable1)
_finaldata:
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadsmreport(23)
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " " + strquery1.ToString() + " smmlsummaryreportreceive")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                smmlsummaryreportreceive()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub smmlprofitsharesend()
        dtable.Clear()
        dtable1.Clear()
        dtable2.Clear()
        dtmerger.Clear()
        Try
            getconnections()
            Using Con.GetCon()
                strquery1 = String.Format("select subaccountid from kpadminpartners.wssubagents where mainaccountid='{0}' group by  subaccountid", drppartnerid.Text)
                cmd = New MySqlCommand(strquery1, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                dtable2.Load(dr)
                cmd = Nothing

                Dim currentdate = DateTime.Now.Date
                Dim firstday As DateTime = New DateTime(drpYear.Text, drpMonth.Text, 1)
                Dim lastday As DateTime = Nothing
                If (drpYear.Text = currentdate.Year() And drpMonth.Text = currentdate.Month()) Then
                    lastday = currentdate
                Else
                    lastday = New DateTime(drpYear.Text, drpMonth.Text, 1).AddMonths(1).AddDays(-1)
                End If

                For Each row As DataRow In dtable2.Rows
                    Dim pid = row("subaccountid").ToString()
                    Dim dtable3 As DataTable = New DataTable
                    strquery1 = String.Format("select sublocationid from `kpadminpartners`.`ws_Sublocation` where subaccountid='{0}' and isactive=1 group by  sublocationid", pid)
                    cmd = New MySqlCommand(strquery1, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dtable3.Load(dr)
                    cmd = Nothing
                    For Each row1 As DataRow In dtable3.Rows
                        Dim sublocid = row1.Item("sublocationid")
                        strquery = String.Format("call kppartners.HOgetmonthlySMMLProfitShareSO('{0}','{1}','{2}','{3}')", firstday.ToString("yyyy-MM-dd"), lastday.ToString("yyyy-MM-dd"), pid, sublocid)
                        cmd = New MySqlCommand(strquery, Con.GetCon())
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        dtable.Clear()
                        dtable.Load(dr)
                        cmd = Nothing
                        dtable1.Merge(dtable)
                    Next
                Next
            End Using
            dtmerger.Merge(dtable1)
_finaldata:
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadsmreport(24)
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " " + strquery1.ToString() + " smmlprofitsharesend")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                smmlprofitsharesend()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub smmlprofitsharereceive()
        dtable.Clear()
        dtable1.Clear()
        dtable2.Clear()
        dtmerger.Clear()
        Try
            getconnections()
            Using Con.GetCon()
                strquery1 = String.Format("select subaccountid from kpadminpartners.wssubagents where mainaccountid='{0}' group by  subaccountid", drppartnerid.Text)
                cmd = New MySqlCommand(strquery1, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                dtable2.Load(dr)
                cmd = Nothing

                Dim currentdate = DateTime.Now.Date
                Dim firstday As DateTime = New DateTime(drpYear.Text, drpMonth.Text, 1)
                Dim lastday As DateTime = Nothing
                If (drpYear.Text = currentdate.Year() And drpMonth.Text = currentdate.Month()) Then
                    lastday = currentdate
                Else
                    lastday = New DateTime(drpYear.Text, drpMonth.Text, 1).AddMonths(1).AddDays(-1)
                End If

                For Each row As DataRow In dtable2.Rows
                    Dim pid = row("subaccountid").ToString()
                    Dim dtable3 As DataTable = New DataTable
                    strquery1 = String.Format("select sublocationid from `kpadminpartners`.`ws_Sublocation` where subaccountid='{0}' and isactive=1 group by  sublocationid", pid)
                    cmd = New MySqlCommand(strquery1, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dtable3.Load(dr)
                    cmd = Nothing
                    For Each row1 As DataRow In dtable3.Rows
                        Dim sublocid = row1.Item("sublocationid")
                        strquery = String.Format("call kppartners.HOgetmonthlySMMLProfitSharePO('{0}','{1}','{2}','{3}')", firstday.ToString("yyyy-MM-dd"), lastday.ToString("yyyy-MM-dd"), pid, sublocid)
                        cmd = New MySqlCommand(strquery, Con.GetCon())
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        dtable.Clear()
                        dtable.Load(dr)
                        cmd = Nothing
                        dtable1.Merge(dtable)
                    Next
                Next
            End Using
            dtmerger.Merge(dtable1)
_finaldata:
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadsmreport(25)
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " " + strquery1.ToString() + " smmlprofitsharereceive")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                smmlprofitsharereceive()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub mlsmsend()
        dtable.Clear()
        dtable1.Clear()
        dtable2.Clear()
        dtmerger.Clear()
        Try
            getconnections()
            Using Con.GetCon()
                strquery1 = String.Format("select subaccountid from kpadminpartners.wssubagents where mainaccountid='{0}' group by  subaccountid", drppartnerid.Text)
                cmd = New MySqlCommand(strquery1, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                dtable2.Load(dr)
                cmd = Nothing

                Dim firstday As DateTime = Nothing
                Dim lastday As DateTime = Nothing
                If (drpPeriod.SelectedIndex = 1) Then
                    firstday = Convert.ToDateTime(txtDate.Text)
                    lastday = Convert.ToDateTime(txtDate.Text)
                Else
                    firstday = Convert.ToDateTime(txtdateFrom.Text)
                    lastday = Convert.ToDateTime(txtdateTo.Text)
                End If

                For Each row As DataRow In dtable2.Rows
                    Dim pid = row("subaccountid").ToString()
                    Dim dtable3 As DataTable = New DataTable
                    strquery1 = String.Format("select sublocationid from `kpadminpartners`.`ws_Sublocation` where subaccountid='{0}' and isactive=1 group by  sublocationid", pid)
                    cmd = New MySqlCommand(strquery1, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dtable3.Load(dr)
                    cmd = Nothing
                    For Each row1 As DataRow In dtable3.Rows
                        Dim sublocid = row1.Item("sublocationid")
                        strquery = String.Format("call kppartners.HOgetmonthlyMLSMSend('{0}','{1}','{2}','{3}')", firstday.ToString("yyyy-MM-dd"), lastday.ToString("yyyy-MM-dd"), pid, sublocid)
                        cmd = New MySqlCommand(strquery, Con.GetCon())
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        dtable.Clear()
                        dtable.Load(dr)
                        cmd = Nothing
                        dtable1.Merge(dtable)
                    Next
                Next
            End Using
            dtmerger.Merge(dtable1)
_finaldata:
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadsmreport(26)
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery1.ToString() + " mlsmsend")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                mlsmsend()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub mlsmpayout()
        dtable.Clear()
        dtable1.Clear()
        dtable2.Clear()
        dtmerger.Clear()
        Try
            getconnections()
            Using Con.GetCon()
                strquery1 = String.Format("select subaccountid from kpadminpartners.wssubagents where mainaccountid='{0}' group by  subaccountid", drppartnerid.Text)
                cmd = New MySqlCommand(strquery1, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                dtable2.Load(dr)
                cmd = Nothing

                Dim firstday As DateTime = Nothing
                Dim lastday As DateTime = Nothing
                If (drpPeriod.SelectedIndex = 1) Then
                    firstday = Convert.ToDateTime(txtDate.Text)
                    lastday = Convert.ToDateTime(txtDate.Text)
                Else
                    firstday = Convert.ToDateTime(txtdateFrom.Text)
                    lastday = Convert.ToDateTime(txtdateTo.Text)
                End If

                For Each row As DataRow In dtable2.Rows
                    Dim pid = row("subaccountid").ToString()
                    Dim dtable3 As DataTable = New DataTable
                    strquery1 = String.Format("select sublocationid from `kpadminpartners`.`ws_Sublocation` where subaccountid='{0}' and isactive=1 group by  sublocationid", pid)
                    cmd = New MySqlCommand(strquery1, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dtable3.Load(dr)
                    cmd = Nothing
                    For Each row1 As DataRow In dtable3.Rows
                        Dim sublocid = row1.Item("sublocationid")
                        strquery = String.Format("call kppartners.HOgetmonthlyMLSMPayout('{0}','{1}','{2}','{3}')", firstday.ToString("yyyy-MM-dd"), lastday.ToString("yyyy-MM-dd"), pid, sublocid)
                        cmd = New MySqlCommand(strquery, Con.GetCon())
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        dtable.Clear()
                        dtable.Load(dr)
                        cmd = Nothing
                        dtable1.Merge(dtable)
                    Next
                Next
            End Using
            dtmerger.Merge(dtable1)
_finaldata:
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadsmreport(27)
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " " + strquery1.ToString() + " mlsmpayout")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                mlsmpayout()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub posreport()
        Try
            If drpPeriod.Text = 1 Or _monthnoofdays = 1 Then 'DAILY
                strquery = String.Format("SELECT s.transdate,od.datecreated,od.transtin,s.sendername,s.senderaddress,s.referenceno,s.principal,s.charge,od.transvat,(s.charge-od.transvat) AS netsales " +
                                        "FROM kppartners.sendout{0} s " +
                                        "INNER JOIN `kpORNO`.`orDetails` od ON od.refno=s.referenceno " +
                                        "WHERE s.accountcode='{1}' AND YEAR(s.transdate)='{2}';", _day, partnerID, _year)
                GoTo dataloop
            End If
dataloop:
            getconnections()
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                dtable.Load(dr)
                dtable1.Merge(dtable)
                cmd = Nothing
            End Using
            dtmerger.Merge(dtable1)
_finaldata:
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadsmreport(28)
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " " + strquery1.ToString() + " posreport")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                posreport()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub smsummaryreport()
        Try
            strquery = String.Format("call kppartners.HOgetSMSummary('{0}','{1}','{2}','{3}','{4}','{5}','{6}');", Convert.ToDateTime(txtDate.Text).ToString("MMdd"), partnerID, Convert.ToDateTime(txtDate.Text).ToString("yyyy"), username, userrole, Session("subterminalid"), Session("superviselocationid"))
            getconnections()
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                dtable1.Load(dr)
                cmd = Nothing
            End Using
            dtmerger.Merge(dtable1)
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadsmreport(30)
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " smsummaryreport")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                smsummaryreport()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    '16 sales journal
    Public Sub salesjournal()
        Try
            If drpPeriod.Text = 1 Or _monthnoofdays = 1 Then 'DAILY
                'strquery = String.Format("call kppartners.HOgetSalesJournal('{0}','{1}','{2}')", _day, partnerID, _year)
                strquery = String.Format("SELECT s.transdate,od.datecreated,od.transtin,s.sendername,s.senderaddress,s.referenceno,s.principal,s.charge,od.transvat,(s.charge-od.transvat) AS netsales " +
                                        "FROM kppartners.sendout{0} s " +
                                        "INNER JOIN `kpORNO`.`orDetails` od ON od.refno=s.referenceno " +
                                        "WHERE s.accountcode='{1}' AND YEAR(s.transdate)='{2}';", _day, partnerID, _year)
                _loop = 2
                GoTo dataloop
            ElseIf drpPeriod.Text = 2 Or drpPeriod.Text = 3 Or _monthnoofdays > 1 Then 'MONTHLY/RANGE
                If drpPeriod.Text = 2 Then
                    If _day < 10 Then
                        _day = String.Concat("0", _day)
                    End If
afterdataloop:
                    If _loop <= _monthnoofdays Then
                        For i As Integer = _loop To _monthnoofdays
                            'strquery = String.Format("call kppartners.HOgetSalesJournal('{0}{1}','{2}','{3}')", _day, i.ToString.PadLeft(2, CType("0", Char)), _year, partnerID)
                            strquery = String.Format("SELECT s.transdate,od.datecreated,od.transtin,s.sendername,s.senderaddress,s.referenceno,s.principal,s.charge,od.transvat,(s.charge-od.transvat) AS netsales " +
                                        "FROM kppartners.sendout{0}{1} s " +
                                        "INNER JOIN `kpORNO`.`orDetails` od ON od.refno=s.referenceno " +
                                        "WHERE s.accountcode='{2}' AND YEAR(s.transdate)='{3}';", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, _year)
                            _loop = i + 1
                            GoTo dataloop
                        Next
                    Else
                        GoTo _finaldata
                    End If
                End If
            End If
dataloop:
            getconnections()
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                dtable.Load(dr)
                dtable1.Merge(dtable)
                cmd = Nothing
            End Using
            If _loop <= _monthnoofdays Then
                If drpPeriod.Text = 2 Then
                    GoTo afterdataloop
                End If
            End If
            dtmerger.Merge(dtable1)
_finaldata:
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadreport("SalesJournal")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " salesjournal")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                salesjournal()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub

    '29 Ml Express Post Audit
    Public Sub expresspostaudit()
        Try
            dtable1 = GetDatatable()
            dtable1.Clear()
            dtable2 = GetDatatable()
            dtable2.Clear()
            dtmerger = GetDatatable()
            dtmerger.Clear()

            Dim service As OFW = New OFW()
            Dim auditreport As New ML.OFW.Contracts.Models.auditRpt
            Dim respaudit As ML.OFW.Contracts.Responses.auditReportResponse
            Dim _datefrom As DateTime
            Dim _dateto As DateTime

            If drpPeriod.Text = 1 Then 'DAILY
                _datefrom = Convert.ToDateTime(txtDate.Text)
                _dateto = Convert.ToDateTime(txtDate.Text)
            ElseIf drpPeriod.Text = 2 Then 'MONTHLY/RANGE
                Dim firstday As String = String.Format("{0}-{1}-01", _year, _day.PadLeft(2, "0"))
                Dim lastday As String = String.Format("{0}-{1}-{2}", _year, _day.PadLeft(2, "0"), _monthnoofdays)
                _datefrom = Convert.ToDateTime(firstday)
                _dateto = Convert.ToDateTime(lastday)
            ElseIf drpPeriod.Text = 3 Then
                _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                _dateto = Convert.ToDateTime(txtdateTo.Text)
            End If

            getconnections()
            cmd = New MySqlCommand("CALL `kpOFW`.`HOcorporate_MLExpress`();", Con.GetCon())
            cmd.CommandTimeout = 0
            dr = cmd.ExecuteReader
            If dr.HasRows() Then
                dtable.Load(dr)
            End If
            dr.Close()
            Con.OpenCon("KPMLWallet")
            Dim min As Decimal = 0
            Dim smin As String = ""
            Dim walletdb As String = ""
            Using Con.GetCon()
                For Each row As DataRow In dtable.Rows
                    If drpPartnerAccountlist.Text = UCase(Trim(row(0).ToString)) + " / " + UCase(Trim(row(1).ToString)) Then
                        Dim walletno As String = Trim(row("accountno")).ToString()
                        While _datefrom <= _dateto
                            auditreport.username = partnerID
                            auditreport.accountno = walletno
                            respaudit = service.auditReport(auditreport)
                            If Not IsNothing(respaudit.list) Then
                                Dim result = From v In respaudit.list Where v.date.ToString("MM-dd-yyyy") = _datefrom.ToString("MM-dd-yyyy")
                                For Each item In result
                                    datarow = dtable1.NewRow()
                                    'clsreport.ID = clsreport.ID + 1
                                    'datarow("ID") = clsreport.ID
                                    datarow("date") = item.date.ToString()
                                    datarow("transtype") = item.transType.ToString()
                                    datarow("loadamount") = CType(item.loadAmount, System.Decimal)
                                    datarow("principal") = CType(item.principal, System.Decimal)
                                    datarow("charge") = CType(item.charge, System.Decimal)
                                    datarow("total") = CType(item.principal, System.Decimal) + CType(item.charge, System.Decimal)
                                    datarow("commission") = CType(item.commission, System.Decimal)
                                    datarow("runningbalance") = CType(item.runningBalance, System.Decimal)
                                    dtable1.Rows.Add(datarow)
                                    dtable1.AcceptChanges()
                                    dtable2.Merge(dtable1)
                                Next
                            End If
                            _datefrom = _datefrom.AddDays(1)
                        End While
                    End If
                Next
            End Using
            Con.CloseCon()

            dtmerger.Merge(dtable2)
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadreport("PostAudit")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " smsummaryreportsend")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                expresspostaudit()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub

    '16 for BIR sales journal
    Public Sub possalesbook()
        Try
            dtable = GetDatatable()
            dtable = GetDatatable()
            dtable1 = GetDatatable()
            dtable1.Clear()
            dtmerger = GetDatatable()
            dtmerger.Clear()

            Con.OpenCon("KPWSC")
            Using Con.GetCon()
                strquery = String.Format("call kpORNO.HOgetPOSSalesBook('{0}','{1}','{2}')", partnerID, _day, _year)
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader

                Dim prevreading As Double = 0

                While dr.Read()
                    datarow = dtable.NewRow()
                    'clsreport.ID = clsreport.ID + 1
                    'datarow("ID") = clsreport.ID
                    datarow("accountid") = UCase(If(Not IsDBNull(dr.Item("accountid")), Trim(dr.Item("accountid")), "-"))
                    datarow("vatable") = UCase(If(Not IsDBNull(dr.Item("vatable")), CType(Trim(dr.Item("vatable")), System.Decimal), 0))
                    datarow("tin") = UCase(If(Not IsDBNull(dr.Item("tin")), Trim(dr.Item("tin")), "-"))
                    datarow("orno") = UCase(If(Not IsDBNull(dr.Item("orno")), Trim(dr.Item("orno")), "-"))
                    If prevreading = 0 Then
                        datarow("grandtotalold") = UCase(If(Not IsDBNull(dr.Item("grandtotalold")), CType(Trim(dr.Item("grandtotalold")), System.Decimal), 0))
                    Else
                        datarow("grandtotalold") = prevreading
                    End If
                    If dr.Item("orno") <> "" Then
                        prevreading = If(Not IsDBNull(dr.Item("sales")), CType(Trim(dr.Item("sales")), System.Decimal), 0) + Convert.ToDecimal(datarow("grandtotalold"))
                    Else
                        prevreading = datarow("grandtotalold")
                    End If
                    datarow("sales") = prevreading
                    datarow("date") = UCase(If(Not IsDBNull(dr.Item("date")) And CType(dr.Item("date"), String) <> "0000-00-00", Convert.ToDateTime(Trim(dr.Item("date"))).ToString("yyyy-MM-dd"), "-"))
                    datarow("firsttxndate") = UCase(If(Not IsDBNull(dr.Item("firsttxndate")) And CType(dr.Item("firsttxndate"), String) <> "0000-00-00", Convert.ToDateTime(Trim(dr.Item("firsttxndate"))).ToString("yyyy-MM-dd"), "-"))
                    datarow("seqno") = UCase(If(Not IsDBNull(dr.Item("seqno")), Trim(dr.Item("seqno")), "-"))
                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()
                    dtable1.Merge(dtable)
                End While
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()

            dtmerger.Merge(dtable1)

            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadsmreport(31)
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " possalesbook")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                possalesbook()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    '32
    Public Sub xzreading()
        Try
            dtable = GetDatatable()
            dtable = GetDatatable()
            dtable1 = GetDatatable()
            dtable1.Clear()
            dtmerger = GetDatatable()
            dtmerger.Clear()

            Con.OpenCon("KPWSC")
            Using Con.GetCon()
                strquery = String.Format("call kpORNO.HOgetZReading('{0}','{1}')", partnerID, gendate)
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader

                While dr.Read()
                    datarow = dtable.NewRow()
                    'clsreport.ID = clsreport.ID + 1
                    'datarow("ID") = clsreport.ID
                    datarow("accountid") = UCase(If(Not IsDBNull(dr.Item("accountid")), Trim(dr.Item("accountid")), "-"))
                    datarow("tin") = UCase(If(Not IsDBNull(dr.Item("tin")), Trim(dr.Item("tin")), "-"))
                    datarow("accreditationno") = UCase(If(Not IsDBNull(dr.Item("accreditationno")), Trim(dr.Item("accreditationno")), "-"))
                    datarow("permitno") = UCase(If(Not IsDBNull(dr.Item("permitno")), Trim(dr.Item("permitno")), "-"))
                    datarow("min") = UCase(If(Not IsDBNull(dr.Item("min")), Trim(dr.Item("min")), "-"))
                    datarow("serverno") = UCase(If(Not IsDBNull(dr.Item("serverno")), Trim(dr.Item("serverno")), "-"))
                    datarow("seqno") = UCase(If(Not IsDBNull(dr.Item("seqno")), Trim(dr.Item("seqno")), "-"))
                    datarow("sales") = UCase(If(Not IsDBNull(dr.Item("sales")), CType(Trim(dr.Item("sales")), System.Decimal), 0))
                    datarow("grandtotalold") = UCase(If(Not IsDBNull(dr.Item("grandtotalold")), CType(Trim(dr.Item("grandtotalold")), System.Decimal), 0))
                    datarow("vatable") = UCase(If(Not IsDBNull(dr.Item("vatable")), CType(Trim(dr.Item("vatable")), System.Decimal), 0))
                    datarow("lastor") = UCase(If(Not IsDBNull(dr.Item("lastor")), Trim(dr.Item("lastor")), "-"))
                    datarow("date") = UCase(If(Not IsDBNull(dr.Item("date")) And CType(dr.Item("date"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("date"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("serialno") = UCase(If(Not IsDBNull(dr.Item("serialno")), Trim(dr.Item("serialno")), "-"))
                    datarow("firsttxndate") = UCase(If(Not IsDBNull(dr.Item("firsttxndate")) And CType(dr.Item("firsttxndate"), String) <> "0000-00-00", Convert.ToDateTime(Trim(dr.Item("firsttxndate"))).ToString("yyyy-MM-dd"), "-"))
                    datarow("xseqno") = UCase(If(Not IsDBNull(dr.Item("xseqno")), Trim(dr.Item("xseqno")), "-"))
                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()
                    dtable1.Merge(dtable)
                End While
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()

            dtmerger.Merge(dtable1)

            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadsmreport(drpTransactionTypelist.SelectedIndex)
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " " + strquery1.ToString() + " xzreading")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                xzreading()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    '33 OR Register Report
    Public Sub or_ar_registerreport()
        Try
            dtable = GetDatatable()
            dtable = GetDatatable()
            dtable1 = GetDatatable()
            dtable1.Clear()
            dtmerger = GetDatatable()
            dtmerger.Clear()

            Dim _datefrom As DateTime = Convert.ToDateTime(txtdateFrom.Text)
            Dim _dateto As DateTime = Convert.ToDateTime(txtdateTo.Text)

            Dim rtype As String = Nothing
            If drpTransactionTypelist.SelectedIndex = 54 Then
                rtype = "ARCancelled"
            End If

            Con.OpenCon("KPWSC")
            Using Con.GetCon()
                strquery = String.Format("call kpORNO.HOgetORRegistered('{0}','{1}','{2}','{3}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), rtype)
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader

                While dr.Read()
                    datarow = dtable.NewRow()
                    'clsreport.ID = clsreport.ID + 1
                    'datarow("ID") = clsreport.ID
                    datarow("dateissued") = UCase(If(Not IsDBNull(dr.Item("dateissued")) And CType(dr.Item("dateissued"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("dateissued"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("orno") = UCase(If(Not IsDBNull(dr.Item("orno")), Trim(dr.Item("orno")), "-"))
                    datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                    If drpTransactionTypelist.SelectedIndex = 33 Then
                        datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), (CType(Trim(dr.Item("principal")), System.Decimal) + CType(Trim(dr.Item("cancelledprincipal")), System.Decimal)), 0))
                    Else
                        datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                    End If
                    datarow("cancelledprincipal") = UCase(If(Not IsDBNull(dr.Item("cancelledprincipal")), CType(Trim(dr.Item("cancelledprincipal")), System.Decimal), 0))
                    datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                    datarow("vatamount") = UCase(If(Not IsDBNull(dr.Item("vatamount")), CType(Trim(dr.Item("vatamount")), System.Decimal), 0))
                    datarow("remarks") = UCase(If(Not IsDBNull(dr.Item("remarks")), Trim(dr.Item("remarks")), "-"))
                    datarow("location") = UCase(If(Not IsDBNull(dr.Item("location")), Trim(dr.Item("location")), "-"))
                    datarow("tin") = UCase(If(Not IsDBNull(dr.Item("tin")), Trim(dr.Item("tin")), "-"))
                    datarow("status") = UCase(If(Not IsDBNull(dr.Item("status")), Trim(dr.Item("status")), "-"))
                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()
                    dtable1.Merge(dtable)
                End While
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()

            dtmerger.Merge(dtable1)
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadsmreport(drpTransactionTypelist.SelectedIndex)
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " or_ar_registerreport")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                or_ar_registerreport()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    '40 ML Online
    Public Sub Sales()
        Try
            dtable = GetMLOnlineDT()
            dtable1 = GetMLOnlineDT()
            dtmerger = GetMLOnlineDT()
            dtable.Clear()
            dtable1.Clear()
            dtmerger.Clear()

            If drpPeriod.Text = 1 Then 'DAILY

                strquery = String.Format("call ecommercemerchants.GEtMLOnline('{0}{1}','{1}','{2}','{3}');", expressmonth, expressday, _year, drpPartnerAccountlist.Text)

                _loop = 2
                GoTo dataloop
                'MONTHLY/RANGE
            ElseIf drpPeriod.Text = 2 Then
                If _day < 10 Then
                    _day = String.Concat("0", _day)
                End If
afterdataloop:
                If _loop <= _monthnoofdays Then
                    For i As Integer = _loop To _monthnoofdays

                        strquery = String.Format("call ecommercetransactions.GEtMLOnline('{0}{1}','{1}','{2}','{3}');", _day, i.ToString.PadLeft(2, CType("0", Char)), _year, drpPartnerAccountlist.Text)

                        _loop = i + 1
                        GoTo dataloop
                    Next
                Else
                    GoTo _finaldata
                End If


            End If
dataloop:

            Con.OpenCon("MLOnline")
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader()
                While dr.Read()
                    datarow = dtable.NewRow()
                    clsreport.ID = clsreport.ID + 1


                    datarow("ID") = clsreport.ID

                    datarow("Order_Number") = UCase(If(Not IsDBNull(dr.Item("order_number")), Trim(dr.Item("order_number")), "-"))
                    datarow("Description") = UCase(If(Not IsDBNull(dr.Item("description")), Trim(dr.Item("description")), "-"))
                    datarow("Amount") = UCase(If(Not IsDBNull(dr.Item("amount")), CType(Trim(dr.Item("amount")), System.Decimal), 0))

                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()
                    dtable1.Merge(dtable)
                End While
                dr.Close()
                cmd = Nothing
            End Using

            If _loop <= _monthnoofdays Then
                If drpPeriod.Text = 2 Then
                    GoTo afterdataloop
                End If
            End If
            dtmerger.Merge(dtable1)

_finaldata:
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadreport("salesMLO")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " " + strquery1.ToString() + " Sales")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                Sales()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    '34 Transactionlogs
    Public Sub transactionlogs()
        Try
            dtable = GetDatatable()
            dtable = GetDatatable()
            dtable1 = GetDatatable()
            dtable1.Clear()
            dtmerger = GetDatatable()
            dtmerger.Clear()

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            'Dim period As Integer = drpPeriod.Text
            'Select Case period
            'Case 1 'DAILY
            '    _datefrom = Convert.ToDateTime(txtDate.Text)
            '    _dateto = Convert.ToDateTime(txtDate.Text)
            'Case 2 'MONTHLY
            '    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
            '    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
            '    _datefrom = Convert.ToDateTime(firstday)
            '    _dateto = Convert.ToDateTime(lastday)
            '    Case 3 'RANGE
            '        _datefrom = Convert.ToDateTime(txtdateFrom.Text)
            '        _dateto = Convert.ToDateTime(txtdateTo.Text)
            'End Select
            _datefrom = Convert.ToDateTime(txtdateFrom.Text)
            _dateto = Convert.ToDateTime(txtdateTo.Text)


            Con.OpenCon("KPWSC")
            Using Con.GetCon()
                strquery = String.Format("call kpORNO.HOgetTransLogs('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                While dr.Read()
                    datarow = dtable.NewRow()
                    'clsreport.ID = clsreport.ID + 1
                    'datarow("ID") = clsreport.ID
                    datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("operator") = UCase(If(Not IsDBNull(dr.Item("operator")), Trim(dr.Item("operator")), "-"))
                    datarow("referenceno") = UCase(If(Not IsDBNull(dr.Item("referenceno")), Trim(dr.Item("referenceno")), "-"))
                    datarow("transtype") = UCase(If(Not IsDBNull(dr.Item("transtype")), Trim(dr.Item("transtype")), "-"))
                    datarow("amount") = UCase(If(Not IsDBNull(dr.Item("amount")), CType(Trim(dr.Item("amount")), System.Decimal), 0))
                    datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                    datarow("terminalid") = UCase(If(Not IsDBNull(dr.Item("terminalid")), Trim(dr.Item("terminalid")), "-"))
                    datarow("tin") = UCase(If(Not IsDBNull(dr.Item("tin")), Trim(dr.Item("tin")), "-"))
                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()
                    dtable1.Merge(dtable)
                End While
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()

            dtmerger.Merge(dtable1)
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadsmreport(34)
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " transactionlogs")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                transactionlogs()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    '31 electronic Journal
    Public Sub electronicjournal()
        Dim ReportName As String = String.Empty
        Dim ReportLocation As String = String.Empty
        Dim _reportname As String = String.Empty
        Dim rptname As String = String.Empty

        Dim pdf As PDFMerge = New PDFMerge()

        Try
            dtable = GetDatatable()
            dtable = GetDatatable()
            dtable1 = GetDatatable()
            dtable1.Clear()
            dtmerger = GetDatatable()
            dtmerger.Clear()

            Dim _datefrom As DateTime = Convert.ToDateTime(txtdateFrom.Text)
            Dim _dateto As DateTime = Convert.ToDateTime(txtdateTo.Text)
            Dim period As Integer = drpPeriod.Text

            Dim dir As String = AppDomain.CurrentDomain.BaseDirectory & "export\"
            Dim myDirInfo As System.IO.DirectoryInfo = New DirectoryInfo(dir)
            For Each file As FileInfo In myDirInfo.GetFiles()
                If file.Exists Then
                    file.Refresh()
                    file.Delete()
                End If
            Next

            Dim pdffile As New List(Of String)()
            Dim hasrows = 0
            Con.OpenCon("KPWSC")
            Using Con.GetCon()
                strquery = String.Format("call kpORNO.HOgetElectronicJournal('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader

                While dr.Read()
                    Try
                        hasrows = 1
                        Rpt = New ReportDocument
                        ReportLocation = String.Format("{0}Reports\ElectronicJournalReport.rpt", AppDomain.CurrentDomain.BaseDirectory) 'For WSC Payout commission Report
                        Rpt.Load(ReportLocation)
                        Rpt.Refresh()
                        'Rpt.SetDataSource(CType(dtmerger, DataTable))
                        Rpt.SetParameterValue("@mlcompany", UCase(If(Not IsDBNull(dr.Item("mlcompany")), Trim(dr.Item("mlcompany")), "-")))
                        Rpt.SetParameterValue("@mladdress", UCase(If(Not IsDBNull(dr.Item("mladdress")), Trim(dr.Item("mladdress")), "-")))
                        Rpt.SetParameterValue("@corname", UCase(If(Not IsDBNull(dr.Item("accountname")), Trim(dr.Item("accountname")), "-")))
                        Rpt.SetParameterValue("@coraddress", UCase(If(Not IsDBNull(dr.Item("address")), Trim(dr.Item("address")), "-")))
                        Rpt.SetParameterValue("@cortin", UCase(If(Not IsDBNull(dr.Item("tin")), Trim(dr.Item("tin")), "-")))
                        Rpt.SetParameterValue("@corACR", UCase(If(Not IsDBNull(dr.Item("ACR")), Trim(dr.Item("ACR")), "-")))
                        Rpt.SetParameterValue("@corSN", UCase(If(Not IsDBNull(dr.Item("SN")), Trim(dr.Item("SN")), "-")))
                        Rpt.SetParameterValue("@corPN", UCase(If(Not IsDBNull(dr.Item("PN")), Trim(dr.Item("PN")), "-")))
                        Rpt.SetParameterValue("@corMN", UCase(If(Not IsDBNull(dr.Item("MN")), Trim(dr.Item("MN")), "-")))
                        Rpt.SetParameterValue("@sendername", UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-")))
                        Rpt.SetParameterValue("@senderTIN", UCase(If(Not IsDBNull(dr.Item("transTin")), Trim(dr.Item("transTin")), "-")))
                        Rpt.SetParameterValue("@senderaddress", UCase(If(Not IsDBNull(dr.Item("senderaddress")), Trim(dr.Item("senderaddress")), "-")))
                        Rpt.SetParameterValue("@senderBizType", UCase(If(Not IsDBNull(dr.Item("businessStyle")), Trim(dr.Item("businessStyle")), "-")))
                        Rpt.SetParameterValue("@vatServiceFee", UCase(If(Not IsDBNull(dr.Item("transvat")), CType(Trim(dr.Item("transvat")), System.Decimal), 0)))
                        Rpt.SetParameterValue("@vatAmount", UCase(If(Not IsDBNull(dr.Item("vatableamount")), CType(Trim(dr.Item("vatableamount")), System.Decimal), 0)))
                        Rpt.SetParameterValue("@receiptNumber", UCase(If(Not IsDBNull(dr.Item("orno")), Trim(dr.Item("orno")), "-")))
                        Rpt.SetParameterValue("@mainop", UCase(If(Not IsDBNull(dr.Item("operator")), Trim(dr.Item("operator")), "-")))
                        Rpt.SetParameterValue("@transactionNumber", UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-")))
                        Rpt.SetParameterValue("@date", UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-")))
                        Rpt.SetParameterValue("@mltin", UCase(If(Not IsDBNull(dr.Item("tin")), Trim(dr.Item("tin")), "-")))
                        Rpt.SetParameterValue("@mlaccreditationNumber", UCase(If(Not IsDBNull(dr.Item("mlaccno")), Trim(dr.Item("mlaccno")), "-")))
                        Rpt.SetParameterValue("@ptu", UCase(If(Not IsDBNull(dr.Item("permittouse")), Trim(dr.Item("permittouse")), "-")))
                        Rpt.SetParameterValue("@accountid", drpsubpartnerid.Text)

                        Dim objDiskOpt As New DiskFileDestinationOptions
                        Dim objExOpt As ExportOptions

                        If Not IO.Directory.Exists(dir) Then
                            IO.Directory.CreateDirectory(dir)
                        End If
                        Dim ls_filename As String = AppDomain.CurrentDomain.BaseDirectory & "\export\" & Now.Ticks & ".pdf"
                        pdffile.Add(ls_filename)
                        pdf.pdffile = pdffile
                        objDiskOpt.DiskFileName = ls_filename
                        objExOpt = Rpt.ExportOptions
                        objExOpt.ExportDestinationType = ExportDestinationType.DiskFile
                        objExOpt.ExportFormatType = ExportFormatType.PortableDocFormat
                        objExOpt.DestinationOptions = objDiskOpt

                        Rpt.Export()
                        Rpt.Close()
                        Rpt.Dispose()

                        Dim filename As String = dir & "Electronic_Journal_Report_" + DateTime.Now.ToString("MM-dd-yyyy") + ".pdf"
                        pdf.MergePDF(filename)
                        'If IO.File.Exists(ls_filename) Then
                        '    IO.File.Delete(ls_filename)
                        '    pdf.pdffile = Nothing
                        'End If
                    Catch ex As Exception
                        kplog.Error(ex.ToString())
                        'GetMessage(ex.ToString())
                        GetMessage("Please Contact Admin Support")

                    End Try
                End While
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()
            Dim reportnme = "Electronic_Journal_Report_" + DateTime.Now.ToString("MM-dd-yyyy") + ".pdf"
            If hasrows = 1 Then
                Page.ClientScript.RegisterStartupScript(Me.GetType(), "alert", "Jigsawalert('" + reportnme + "');", True)
            Else
                GetMessage("No record for " & _dateofreport)
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " " + strquery1.ToString() + " electronicjournal")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                transactionlogs()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub unclaimedFU()

        Try

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select

            Con.OpenCon("KPFileUpload")
            Using Con.GetCon()
                strquery = String.Format("call kppartners.hogetunclaimedFU('{0}','{1}','{2}','{3}','{4}','{5}');", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), partnerID, sotxnreftype, username, userrole)
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                If dr.HasRows Then
                    dtable.Load(dr)
                    dtmerger.Merge(dtable)
                End If
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()

            Getpartnersoperator(dtmerger)
            checkunclaimedpartners(dtmerger)

            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadreport("Unclaimed")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " unclaimed")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                unclaimedFU()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub

    Private Sub paypal(ByVal flag As String)
        dtable = GetDatatablePaypal()
        dtable.Clear()
        dtable1 = GetDatatablePaypal()
        dtable1.Clear()
        dtmerger = GetDatatablePaypal()
        dtmerger.Clear()

        Try
            If drpPeriod.Text = 1 Or _monthnoofdays = 1 Then 'DAILY
                If flag = "Claimed" Then
                    strquery = String.Format("call kppartners.HOgetdailypayoutPaypal('{0}','{1}','{2}');", _day, partnerID, _year)
                Else
                    strquery = String.Format("call kppartners.HOgetcancelledpayoutPaypal('{0}','{1}','{2}');", _day, partnerID, _year)
                End If
                _loop = 2
                GoTo dataloop
            ElseIf drpPeriod.Text = 2 Then
                If _day < 10 Then
                    _day = String.Concat("0", _day)
                End If
afterdataloop:
                If _loop <= _monthnoofdays Then
                    For i As Integer = _loop To _monthnoofdays
                        If flag = "Claimed" Then
                            strquery = String.Format("call kppartners.HOgetdailypayoutPaypal('{0}{1}','{2}','{3}');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, _year)
                        Else
                            strquery = String.Format("call kppartners.HOgetcancelledpayoutPaypal('{0}{1}','{2}','{3}');", _day, i.ToString.PadLeft(2, CType("0", Char)), partnerID, _year)
                        End If
                        _loop = i + 1
                        GoTo dataloop
                    Next
                Else
                    GoTo _finaldata
                End If
            ElseIf drpPeriod.Text = 3 Then
                Dim _datefrom As Date = txtdateFrom.Text
afterdataloop1:
                If _loop <= _monthnoofdays Then
                    For i As Integer = _loop To _monthnoofdays
                        _day = Convert.ToDateTime(_datefrom).ToString("MM")
                        _year = Convert.ToDateTime(_datefrom).ToString("yyyy")
                        If flag = "Claimed" Then
                            strquery = String.Format("call kppartners.HOgetdailypayoutPaypal('{0}{1:dd}','{2}','{3}');", _day, Convert.ToDateTime(_datefrom), partnerID, _year)
                        Else
                            strquery = String.Format("call kppartners.HOgetcancelledpayoutPaypal('{0}{1:dd}','{2}','{3}');", _day, Convert.ToDateTime(_datefrom), partnerID, _year)
                        End If
                        _datefrom = _datefrom.AddDays(1)
                        _loop = i + 1
                        GoTo dataloop
                    Next
                Else
                    GoTo _finaldata
                End If
            End If
dataloop:
            getconnections()
            expresstrap = 0
_apinewconnect:
            If ReportType = 1 And expresstrap = 1 Then
                Con.OpenCon("KPAPINEW")
            End If
_read:
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader()
                While dr.Read()
                    datarow = dtable.NewRow()
                    clsreport.ID = clsreport.ID + 1

                    Dim _claimeddate As String = If(Not IsDBNull(dr.Item("claimeddate")), Trim(dr.Item("claimeddate")), "0000-00-00 00:00:00")
                    Dim _tdate As String = If(Not IsDBNull(dr.Item("transdate")), Trim(dr.Item("transdate")), "0000-00-00 00:00:00")
                    datarow("ID") = clsreport.ID
                    datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("KPTN")), Trim(dr.Item("KPTN")), "-"))
                    datarow("referenceno") = UCase(If(Not IsDBNull(dr.Item("referenceno")), Trim(dr.Item("referenceno")), "-"))
                    datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And _tdate <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("sendercountry") = UCase(If(Not IsDBNull(dr.Item("sendercountry")), Trim(dr.Item("sendercountry")), "-"))
                    datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                    datarow("senderaddress") = UCase(If(Not IsDBNull(dr.Item("senderaddress")), Trim(dr.Item("senderaddress")), "-"))
                    datarow("claimeddate") = UCase(If(Not IsDBNull(dr.Item("claimeddate")) And _claimeddate <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("claimeddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                    datarow("receiveraddress") = UCase(If(Not IsDBNull(dr.Item("receiveraddress")), Trim(dr.Item("receiveraddress")), "-"))
                    datarow("receivercontactno") = UCase(If(Not IsDBNull(dr.Item("receivercontactno")), Trim(dr.Item("receivercontactno")), "-"))
                    datarow("idtype") = UCase(If(Not IsDBNull(dr.Item("idtype")), Trim(dr.Item("idtype")), "-"))
                    datarow("idno") = UCase(If(Not IsDBNull(dr.Item("idno")), Trim(dr.Item("idno")), "-"))
                    datarow("currency") = UCase(If(Not IsDBNull(dr.Item("Currency")), Trim(dr.Item("Currency")), "-"))
                    datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                    datarow("branchcode") = UCase(If(Not IsDBNull(dr.Item("branchcode")), Trim(dr.Item("branchcode")), "-"))
                    datarow("zonecode") = UCase(If(Not IsDBNull(dr.Item("zonecode")), Trim(dr.Item("zonecode")), ""))
                    datarow("branchname") = UCase(If(Not IsDBNull(dr.Item("branchname")), Trim(dr.Item("branchname")), "-"))
                    datarow("branchaddress") = UCase(If(Not IsDBNull(dr.Item("branchaddress")), Trim(dr.Item("branchaddress")), "-"))
                    datarow("operator") = UCase(If(Not IsDBNull(dr.Item("Operator")), Trim(dr.Item("Operator")), If(ReportType = 6 Or ReportType = 1 Or ReportType = 5, Trim(dr.Item("Operatorid")), "-")))
                    datarow("cancelreason") = UCase(If(Not IsDBNull(dr.Item("cancelreason")), Trim(dr.Item("cancelreason")), "-"))
                    datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
                    datarow("servicecharge") = UCase(If(Not IsDBNull(dr.Item("servicecharge")), CType(Trim(dr.Item("servicecharge")), System.Decimal), 0))
                    datarow("Charge") = UCase(If(Not IsDBNull(dr.Item("Charge")), CType(Trim(dr.Item("Charge")), System.Decimal), 0))
                    datarow("operatorid") = UCase(If(Not IsDBNull(dr.Item("operatorid")), Trim(dr.Item("operatorid")), "-"))
                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()
                    dtable1.Merge(dtable)
                End While
                dr.Close()
                cmd = Nothing
            End Using
            If ReportType = 1 And expresstrap = 0 Then
                expresstrap = 1
                GoTo _apinewconnect
            End If
            If _loop <= _monthnoofdays Then
                If drpPeriod.Text = 2 Then
                    GoTo afterdataloop
                ElseIf drpPeriod.Text = 3 Then
                    GoTo afterdataloop1
                End If
            End If
            dtmerger.Merge(dtable1)

_finaldata:
            If dtmerger.Rows.Count <> 0 Then
                loadreport("Paypal")
            Else
                GetMessage("No record for " & _dateofreport)
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " paypal")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                paypal(flag)
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub

    Public Sub profitsharereceivepobranchtosm()
        dtable.Clear()
        dtable1 = GetDatatable()
        dtable1.Clear()
        dtable2 = GetDatatable()
        dtable2.Clear()
        dtmerger = GetDatatable()
        dtmerger.Clear()
        smflag = "To Receive Payout (From Branch to SM)"
        Try
            Con1.OpenCon("KPWSC")
            Using Con1.GetCon()
                strquery = String.Format("SELECT wss.mainaccountid,al.accountid,al.accountname FROM `kpadminpartners`.`wssubagents` wss INNER JOIN `kpadminpartners`.`accountlist` al ON al.accountid=wss.subaccountid WHERE wss.mainaccountid='{0}' AND isactive=1;", smaccountid)
                cmd = New MySqlCommand(strquery, Con1.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                If dr.HasRows() Then
                    dtable.Load(dr)
                End If
                dr.Close()
                cmd = Nothing

                Dim currentdate = DateTime.Now.Date
                Dim firstday As DateTime = New DateTime(drpYear.Text, drpMonth.Text, 1)
                Dim lastday As DateTime = Nothing
                If (drpYear.Text = currentdate.Year() And drpMonth.Text = currentdate.Month()) Then
                    lastday = currentdate
                Else
                    lastday = New DateTime(drpYear.Text, drpMonth.Text, 1).AddMonths(1).AddDays(-1)
                End If
                smperiod = MonthName(drpMonth.Text) & " " & firstday.Day & "-" & lastday.Day & ", " & drpYear.Text

                For Each row As DataRow In dtable.Rows
                    Dim bcode = row.Item("accountid")
                    Dim bname = row.Item("accountname")

                    Dim smbcode = Nothing
                    Dim strbcode = String.Format("select locationCode from kpadminpartners.accountlist where accountid ='{0}' and isactive=1 limit 1;", bcode)
                    cmd = New MySqlCommand(strbcode, Con1.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    If dr.HasRows() Then
                        If dr.Read() Then
                            smbcode = UCase(If(Not IsDBNull(dr.Item("locationCode")), CType(Trim(dr.Item("locationCode")), System.String), "-"))
                        End If
                    End If
                    dr.Close()

                    strquery = String.Format("call kppartners.`HOgetMonthlyBranchSM`('{0}','{1}','{2}');", firstday.ToString("yyyy-MM-dd"), lastday.ToString("yyyy-MM-dd"), bcode)
                    cmd = New MySqlCommand(strquery, Con1.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    If dr.HasRows() Then
                        If dr.Read() Then
                            datarow = dtable1.NewRow()
                            'clsreport.ID = clsreport.ID + 1
                            'datarow("ID") = clsreport.ID
                            datarow("bcode") = smbcode
                            datarow("smbranch") = bname
                            datarow("itemcount") = UCase(If(Not IsDBNull(dr.Item("itemcount")), CType(Trim(dr.Item("itemcount")), System.Int32), 0))
                            datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                            datarow("fee") = UCase(If(Not IsDBNull(dr.Item("Charge")), CType(Trim(dr.Item("Charge")), System.Decimal), 0))
                            datarow("total") = UCase(If(Not IsDBNull(dr.Item("total")), CType(Trim(dr.Item("total")), System.Decimal), 0))
                            datarow("feeshare") = UCase(If(Not IsDBNull(dr.Item("feeshare")), CType(Trim(dr.Item("feeshare")), System.Decimal), 0))
                        End If
                        dtable1.Rows.Add(datarow)
                        dtable1.AcceptChanges()
                        dtable2.Merge(dtable1)
                    End If
                    dr.Close()
                    dtmerger.Merge(dtable2)
                Next
            End Using
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadreport("ProfitShare")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " profitsharereceivepobranchtosm")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                profitsharereceivepobranchtosm()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub profitsharesendposmtobranch()
        dtable.Clear()
        dtable1 = GetDatatable()
        dtable1.Clear()
        dtable2 = GetDatatable()
        dtable2.Clear()
        dtmerger = GetDatatable()
        dtmerger.Clear()
        smflag = "To Send Payout (From SM to Branch)"
        Try
            Con1.OpenCon("KPWSC")
            Using Con1.GetCon()
                strquery = String.Format("SELECT wss.mainaccountid,al.accountid,al.accountname FROM `kpadminpartners`.`wssubagents` wss INNER JOIN `kpadminpartners`.`accountlist` al ON al.accountid=wss.subaccountid WHERE wss.mainaccountid='{0}' AND isactive=1;", smaccountid)
                cmd = New MySqlCommand(strquery, Con1.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                If dr.HasRows() Then
                    dtable.Load(dr)
                End If
                dr.Close()
                cmd = Nothing

                Dim currentdate = DateTime.Now.Date
                Dim firstday As DateTime = New DateTime(drpYear.Text, drpMonth.Text, 1)
                Dim lastday As DateTime = Nothing
                If (drpYear.Text = currentdate.Year() And drpMonth.Text = currentdate.Month()) Then
                    lastday = currentdate
                Else
                    lastday = New DateTime(drpYear.Text, drpMonth.Text, 1).AddMonths(1).AddDays(-1)
                End If
                smperiod = MonthName(drpMonth.Text) & " " & firstday.Day & "-" & lastday.Day & ", " & drpYear.Text

                For Each row As DataRow In dtable.Rows
                    Dim bcode = row.Item("accountid")
                    Dim bname = row.Item("accountname")

                    Dim smbcode = Nothing
                    Dim strbcode = String.Format("select locationCode from kpadminpartners.accountlist where accountid ='{0}' and isactive=1 limit 1;", bcode)
                    cmd = New MySqlCommand(strbcode, Con1.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    If dr.HasRows() Then
                        If dr.Read() Then
                            smbcode = UCase(If(Not IsDBNull(dr.Item("locationCode")), CType(Trim(dr.Item("locationCode")), System.String), "-"))
                        End If
                    End If
                    dr.Close()

                    strquery = String.Format("call kppartners.`HOgetMonthlySMBranch`('{0}','{1}','{2}');", firstday.ToString("yyyy-MM-dd"), lastday.ToString("yyyy-MM-dd"), bcode)
                    cmd = New MySqlCommand(strquery, Con1.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    If dr.HasRows() Then
                        If dr.Read() Then
                            datarow = dtable1.NewRow()
                            'clsreport.ID = clsreport.ID + 1
                            'datarow("ID") = clsreport.ID
                            datarow("bcode") = smbcode
                            datarow("smbranch") = bname
                            datarow("itemcount") = UCase(If(Not IsDBNull(dr.Item("itemcount")), CType(Trim(dr.Item("itemcount")), System.Int32), 0))
                            datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                            datarow("fee") = UCase(If(Not IsDBNull(dr.Item("Charge")), CType(Trim(dr.Item("Charge")), System.Decimal), 0))
                            datarow("total") = UCase(If(Not IsDBNull(dr.Item("total")), CType(Trim(dr.Item("total")), System.Decimal), 0))
                            datarow("feeshare") = UCase(If(Not IsDBNull(dr.Item("feeshare")), CType(Trim(dr.Item("feeshare")), System.Decimal), 0))
                        End If
                        dtable1.Rows.Add(datarow)
                        dtable1.AcceptChanges()
                        dtable2.Merge(dtable1)
                    End If
                    dr.Close()
                    dtmerger.Merge(dtable2)
                Next
            End Using
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadreport("ProfitShare")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " profitsharesendposmtobranch")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                profitsharesendposmtobranch()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub profitsharesendposmtosm()
        dtable.Clear()
        dtable1 = GetDatatable()
        dtable1.Clear()
        dtable2 = GetDatatable()
        dtable2.Clear()
        dtmerger = GetDatatable()
        dtmerger.Clear()
        smflag = "To Send Payout (From SM to SM)"
        Try
            Con1.OpenCon("KPWSC")
            Using Con1.GetCon()
                strquery = String.Format("SELECT wss.mainaccountid,al.accountid,al.accountname FROM `kpadminpartners`.`wssubagents` wss INNER JOIN `kpadminpartners`.`accountlist` al ON al.accountid=wss.subaccountid WHERE wss.mainaccountid='{0}' AND isactive=1;", smaccountid)
                cmd = New MySqlCommand(strquery, Con1.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                If dr.HasRows() Then
                    dtable.Load(dr)
                End If
                dr.Close()
                cmd = Nothing

                Dim currentdate = DateTime.Now.Date
                Dim firstday As DateTime = New DateTime(drpYear.Text, drpMonth.Text, 1)
                Dim lastday As DateTime = Nothing
                If (drpYear.Text = currentdate.Year() And drpMonth.Text = currentdate.Month()) Then
                    lastday = currentdate
                Else
                    lastday = New DateTime(drpYear.Text, drpMonth.Text, 1).AddMonths(1).AddDays(-1)
                End If
                smperiod = MonthName(drpMonth.Text) & " " & firstday.Day & "-" & lastday.Day & ", " & drpYear.Text

                For Each row As DataRow In dtable.Rows
                    Dim bcode = row.Item("accountid")
                    Dim bname = row.Item("accountname")

                    Dim smbcode = Nothing
                    Dim strbcode = String.Format("select locationCode from kpadminpartners.accountlist where accountid ='{0}' and isactive=1 limit 1;", bcode)
                    cmd = New MySqlCommand(strbcode, Con1.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    If dr.HasRows() Then
                        If dr.Read() Then
                            smbcode = UCase(If(Not IsDBNull(dr.Item("locationCode")), CType(Trim(dr.Item("locationCode")), System.String), "-"))
                        End If
                    End If
                    dr.Close()

                    strquery = String.Format("call kppartners.`HOgetMonthlySMSM`('{0}','{1}','{2}');", firstday.ToString("yyyy-MM-dd"), lastday.ToString("yyyy-MM-dd"), bcode)
                    cmd = New MySqlCommand(strquery, Con1.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    If dr.HasRows() Then
                        If dr.Read() Then
                            datarow = dtable1.NewRow()
                            'clsreport.ID = clsreport.ID + 1
                            'datarow("ID") = clsreport.ID
                            datarow("bcode") = smbcode
                            datarow("smbranch") = bname
                            datarow("itemcount") = UCase(If(Not IsDBNull(dr.Item("itemcount")), CType(Trim(dr.Item("itemcount")), System.Int32), 0))
                            datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                            datarow("fee") = UCase(If(Not IsDBNull(dr.Item("Charge")), CType(Trim(dr.Item("Charge")), System.Decimal), 0))
                            datarow("total") = UCase(If(Not IsDBNull(dr.Item("total")), CType(Trim(dr.Item("total")), System.Decimal), 0))
                            datarow("feeshare") = UCase(If(Not IsDBNull(dr.Item("feeshare")), CType(Trim(dr.Item("feeshare")), System.Decimal), 0))
                        End If
                        dtable1.Rows.Add(datarow)
                        dtable1.AcceptChanges()
                        dtable2.Merge(dtable1)
                    End If
                    dr.Close()
                    dtmerger.Merge(dtable2)
                Next
            End Using
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadreport("ProfitShare")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " profitsharesendposmtosm")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                profitsharesendposmtosm()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    '==================================================================================================
    Public Function ListToDataTable(Of T)(ByVal items As List(Of T)) As DataTable

        Dim dataTable As New DataTable(GetType(T).Name)
        Dim Properties As PropertyInfo() = GetType(T).GetProperties(BindingFlags.[Public] Or BindingFlags.Instance)

        For Each propInfo As PropertyInfo In Properties
            dataTable.Columns.Add(propInfo.Name)
        Next

        For Each item As T In items
            Dim values = New Object(Properties.Length - 1) {}

            For i As Integer = 0 To Properties.Length - 1
                values(i) = Properties(i).GetValue(item, Nothing)
            Next
            dataTable.Rows.Add(values)
        Next
        Return dataTable
    End Function

    Public Sub terminaltxnsummary()
        Try
            dtable1 = GetDatatable()
            dtable1.Clear()
            dtable2 = GetDatatable()
            dtable2.Clear()
            dtmerger = GetDatatable()
            dtmerger.Clear()

            strquery = String.Format("call kppartners.HOgetTerminalTXNSummary('{0}','{1}','{2}','{3}','{4}','{5}','{6}');", Convert.ToDateTime(txtdateFrom.Text).ToString("yyyy-MM-dd"), Convert.ToDateTime(txtdateTo.Text).ToString("yyyy-MM-dd"), partnerID, username, userrole, Session("subterminalid"), Session("superviselocationid"))
            getconnections()
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                Dim oldgrandtotal As Decimal = 0
                While dr.Read
                    datarow = dtable1.NewRow()
                    'clsreport.ID = clsreport.ID + 1
                    'datarow("ID") = clsreport.ID
                    datarow("branchtin") = UCase(If(Not IsDBNull(dr.Item("branchtin")), CType(Trim(dr.Item("branchtin")), System.String), "-"))
                    datarow("locationid") = UCase(If(Not IsDBNull(dr.Item("locationid")), CType(Trim(dr.Item("locationid")), System.String), "-"))
                    datarow("_date") = UCase(If(Not IsDBNull(dr.Item("_date")), CType(Trim(dr.Item("_date")), System.String), "-"))
                    datarow("terminalid") = UCase(If(Not IsDBNull(dr.Item("terminalid")), CType(Trim(dr.Item("terminalid")), System.String), "-"))
                    datarow("tin") = UCase(If(Not IsDBNull(dr.Item("tin")), CType(Trim(dr.Item("tin")), System.String), "-"))
                    datarow("permitno") = UCase(If(Not IsDBNull(dr.Item("permitno")), CType(Trim(dr.Item("permitno")), System.String), "-"))
                    datarow("receiptno") = UCase(If(Not IsDBNull(dr.Item("receiptno")), CType(Trim(dr.Item("receiptno")), System.String), "-"))
                    datarow("transcount") = UCase(If(Not IsDBNull(dr.Item("transcount")), CType(Trim(dr.Item("transcount")), System.Int16), 0))
                    datarow("grandtotal") = oldgrandtotal
                    oldgrandtotal = oldgrandtotal + UCase(If(Not IsDBNull(dr.Item("servicefee")), CType(Trim(dr.Item("servicefee")), System.Decimal), 0))
                    datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                    datarow("servicefee") = UCase(If(Not IsDBNull(dr.Item("servicefee")), CType(Trim(dr.Item("servicefee")), System.Decimal), 0))
                    datarow("totaltxnamount") = UCase(If(Not IsDBNull(dr.Item("totaltxnamount")), CType(Trim(dr.Item("totaltxnamount")), System.Decimal), 0))
                    datarow("newgrandtotal") = CType(datarow("grandtotal"), Decimal) + UCase(If(Not IsDBNull(dr.Item("servicefee")), CType(Trim(dr.Item("servicefee")), System.Decimal), 0))
                    datarow("voidtxn") = UCase(If(Not IsDBNull(dr.Item("voidtxn")), CType(Trim(dr.Item("voidtxn")), System.Int16), 0))
                    dtable1.Rows.Add(datarow)
                    dtable1.AcceptChanges()
                    dtable2.Merge(dtable1)
                End While
                dtmerger.Merge(dtable2)
                cmd = Nothing
            End Using
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadreport("TerminalTxnSummary")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " terminaltxnsummary")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                terminaltxnsummary()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub terminalreading()
        Try
            dtable1 = GetDatatable()
            dtable1.Clear()
            dtable2 = GetDatatable()
            dtable2.Clear()
            dtmerger = GetDatatable()
            dtmerger.Clear()

            strquery = String.Format("call kppartners.HOgetTerminalReading('{0}','{1}','{2}','{3}','{4}','{5}','{6}');", Convert.ToDateTime(txtdateFrom.Text).ToString("yyyy-MM-dd"), Convert.ToDateTime(txtdateTo.Text).ToString("yyyy-MM-dd"), partnerID, username, userrole, Session("subterminalid"), Session("superviselocationid"))
            getconnections()
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                Dim oldgrandtotal As Decimal = 0
                While dr.Read
                    datarow = dtable1.NewRow()
                    'clsreport.ID = clsreport.ID + 1
                    'datarow("ID") = clsreport.ID
                    datarow("terminalid") = UCase(If(Not IsDBNull(dr.Item("terminalid")), CType(Trim(dr.Item("terminalid")), System.String), "-"))
                    datarow("tin") = UCase(If(Not IsDBNull(dr.Item("tin")), CType(Trim(dr.Item("tin")), System.String), "-"))
                    datarow("permitno") = UCase(If(Not IsDBNull(dr.Item("permitno")), CType(Trim(dr.Item("permitno")), System.String), "-"))
                    datarow("receiptno") = UCase(If(Not IsDBNull(dr.Item("receiptno")), CType(Trim(dr.Item("receiptno")), System.String), "-"))
                    datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")), CType(Trim(dr.Item("transdate")), System.String), "-"))
                    datarow("transcount") = UCase(If(Not IsDBNull(dr.Item("transcount")), CType(Trim(dr.Item("transcount")), System.Int16), 0))
                    datarow("oldgrandtotal") = oldgrandtotal
                    oldgrandtotal = oldgrandtotal + UCase(If(Not IsDBNull(dr.Item("servicefee")), CType(Trim(dr.Item("servicefee")), System.Decimal), 0))
                    datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                    datarow("servicefee") = UCase(If(Not IsDBNull(dr.Item("servicefee")), CType(Trim(dr.Item("servicefee")), System.Decimal), 0))
                    datarow("totalamount") = UCase(If(Not IsDBNull(dr.Item("totalamount")), CType(Trim(dr.Item("totalamount")), System.Decimal), 0))
                    datarow("newgrandtotal") = CType(datarow("oldgrandtotal"), Decimal) + UCase(If(Not IsDBNull(dr.Item("servicefee")), CType(Trim(dr.Item("servicefee")), System.Decimal), 0))
                    datarow("voidtxn") = UCase(If(Not IsDBNull(dr.Item("voidtxn")), CType(Trim(dr.Item("voidtxn")), System.Int16), 0))
                    dtable1.Rows.Add(datarow)
                    dtable1.AcceptChanges()
                    dtable2.Merge(dtable1)
                End While
                dtmerger.Merge(dtable2)
                cmd = Nothing
            End Using
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadreport("TerminalReading")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " terminalreading")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                terminalreading()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub dailyservicefee()
        Try
            dtable1 = GetDatatable()
            dtable1.Clear()
            dtable2 = GetDatatable()
            dtable2.Clear()
            dtmerger = GetDatatable()
            dtmerger.Clear()

            strquery = String.Format("call kppartners.HOgetDailyServiceFee('{0}','{1}','{2}','{3}','{4}','{5}');", Convert.ToDateTime(txtDate.Text).ToString("yyyy-MM-dd"), partnerID, username, userrole, Session("subterminalid"), Session("superviselocationid"))
            getconnections()
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                Dim accservicefee As Decimal = 0
                While dr.Read
                    datarow = dtable1.NewRow()
                    'clsreport.ID = clsreport.ID + 1
                    'datarow("ID") = clsreport.ID
                    datarow("branchtin") = UCase(If(Not IsDBNull(dr.Item("branchtin")), CType(Trim(dr.Item("branchtin")), System.String), "-"))
                    datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")), CType(Trim(dr.Item("transdate")), System.String), "-"))
                    datarow("orno") = UCase(If(Not IsDBNull(dr.Item("orno")), CType(Trim(dr.Item("orno")), System.String), "-"))
                    datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), CType(Trim(dr.Item("sendername")), System.String), "-"))
                    datarow("transtin") = UCase(If(Not IsDBNull(dr.Item("transtin")), CType(Trim(dr.Item("transtin")), System.String), "-"))
                    datarow("vatservicefee") = UCase(If(Not IsDBNull(dr.Item("vatservicefee")), CType(Trim(dr.Item("vatservicefee")), System.Decimal), 0))
                    datarow("zeroservicefee") = UCase(If(Not IsDBNull(dr.Item("zeroservicefee")), CType(Trim(dr.Item("zeroservicefee")), System.Decimal), 0))
                    datarow("vatexcemptservicefee") = UCase(If(Not IsDBNull(dr.Item("vatexcemptservicefee")), CType(Trim(dr.Item("vatexcemptservicefee")), System.Decimal), 0))
                    datarow("vat") = UCase(If(Not IsDBNull(dr.Item("vat")), CType(Trim(dr.Item("vat")), System.Decimal), 0))
                    datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                    accservicefee = accservicefee + UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                    datarow("accservicefee") = accservicefee
                    datarow("reprintcount") = UCase(If(Not IsDBNull(dr.Item("reprintcount")), CType(Trim(dr.Item("reprintcount")), System.Int16), 0))
                    datarow("remarks") = UCase(If(Not IsDBNull(dr.Item("branchtin")), CType(Trim(dr.Item("branchtin")), System.String), "-"))
                    dtable1.Rows.Add(datarow)
                    dtable1.AcceptChanges()
                    dtable2.Merge(dtable1)
                End While
                dtmerger.Merge(dtable2)
                cmd = Nothing
            End Using
            dtmerger.Merge(dtable1)
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadreport("DailyServiceFee")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " dailyservicefee")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                dailyservicefee()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub

    'compare express unclaimed
    Public Sub checkunclaimedexpress(ByVal dtexpress As DataTable)
        Dim xloop As Integer = 0
        Try
            For Each row As DataRow In dtexpress.Rows
                Dim kptn = Trim(row.Item("kptn"))
                Dim enddate As Date = Convert.ToDateTime(Trim(row.Item("transdate"))).ToString("yyyy-MM-dd")
                Dim startdate As Date = Convert.ToDateTime(txtDate.Text).ToString("yyyy-MM-dd")
                While startdate >= enddate
                    getconnections()
                    Using Con.GetCon()
                        'Dim lastday = DateTime.DaysInMonth(Year(startdate), Month(startdate))
                        cmd = New MySqlCommand(String.Format("Select kptnno,cancelleddate from Reports{0}{1}.socancel where kptnno = '{2}'", Month(startdate).ToString().PadLeft(2, "0"), Year(startdate), kptn), Con.GetCon())
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        If dr.HasRows() Then
                            If dr.Read() Then
                                dtexpress(xloop)("cancelleddate") = Trim(dr.Item("cancelleddate"))
                            End If
                            startdate = (enddate.AddDays(-1))
                        Else
                            startdate = startdate.AddDays(-1)
                        End If
                        dr.Close()
                    End Using
                End While
                xloop = xloop + 1
            Next
            Con.CloseCon()
            xloop = 0
            For Each row As DataRow In dtexpress.Rows
                Dim kptn = Trim(row.Item("kptn"))
                Dim enddate As Date = Convert.ToDateTime(Trim(row.Item("transdate"))).ToString("yyyy-MM-dd")
                Dim startdate As Date = Convert.ToDateTime(txtDate.Text).ToString("yyyy-MM-dd")
                While startdate >= enddate
                    getconnections()
                    Using Con.GetCon()
                        'Dim lastday = DateTime.DaysInMonth(Year(startdate), Month(startdate))
                        cmd = New MySqlCommand(String.Format("Select kptnno,claimeddate from Reports{0}{1}.payout where kptnno = '{2}'", Month(startdate).ToString().PadLeft(2, "0"), Year(startdate), kptn), Con.GetCon())
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        If dr.HasRows() Then
                            If dr.Read() Then
                                dtexpress(xloop)("cancelleddate") = Trim(dr.Item("claimeddate"))
                                dtexpress(xloop)("cancelreason") = "isclaimed"
                            End If
                            startdate = (enddate.AddDays(-1))
                        Else
                            startdate = startdate.AddDays(-1)
                        End If
                        dr.Close()
                    End Using
                End While
                xloop = xloop + 1
            Next
            Con.CloseCon()
            xloop = 0
            For Each row As DataRow In dtexpress.Rows
                Dim kptn = Trim(row.Item("kptn"))
                Dim enddate As Date = Convert.ToDateTime(Trim(row.Item("transdate"))).ToString("yyyy-MM-dd")
                Dim startdate As Date = Convert.ToDateTime(txtDate.Text).ToString("yyyy-MM-dd")
                While startdate >= enddate
                    getconnections()
                    Using Con.GetCon()
                        'Dim lastday = DateTime.DaysInMonth(Year(startdate), Month(startdate))
                        cmd = New MySqlCommand(String.Format("Select kptnno,date(cancelleddate) as cancelleddate from Reports{0}{1}.pocancel where kptnno = '{2}' and cancelleddate<>'0000-00-00 00:00:00' ", Month(startdate).ToString().PadLeft(2, "0"), Year(startdate), kptn), Con.GetCon())
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        If dr.HasRows() Then
                            If dr.Read() Then
                                If Trim(dr.Item("cancelleddate")) > Convert.ToDateTime(Trim(row.Item("cancelleddate"))).ToString("yyyy-MM-dd") And Trim(row.Item("cancelleddate")) = "isclaimed" Then
                                    dtexpress(xloop)("cancelleddate") = ""
                                    dtexpress(xloop)("cancelreason") = ""
                                End If
                            End If
                            startdate = (enddate.AddDays(-1))
                        Else
                            startdate = startdate.AddDays(-1)
                        End If
                        dr.Close()
                    End Using
                End While
                xloop = xloop + 1
            Next
            Con.CloseCon()
            xloop = 0
            For Each row As DataRow In dtexpress.Rows
                If Not IsDBNull(row.Item("cancelleddate")) Then
                    dtexpress(xloop).Delete()
                End If
                xloop = xloop + 1
            Next
            dtexpress.AcceptChanges()
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + cmd.CommandText.ToString() + " checkunclaimedexpress")
            GetMessage("Please Contact Admin Support")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
        End Try
    End Sub
    Public Sub checkunclaimedpartners(ByVal dtexpress As DataTable)
        Dim xloop As Integer = 0
        Try
            For Each row As DataRow In dtexpress.Rows
                Dim kptn = Trim(row.Item("kptn"))
                getconnections()
                Using Con.GetCon()
                    'Dim lastday = DateTime.DaysInMonth(Year(startdate), Month(startdate))
                    cmd = New MySqlCommand(String.Format("SELECT action FROM (SELECT ACTION FROM `kpadminpartnerslog`.`transactionslogs` WHERE kptnno='{0}' and ACTION not IN ('PEEP','PO REPRINT','SO REPRINT','REJECTED') ORDER BY txndate DESC LIMIT 1)X WHERE ACTION IN ('SENDOUT','POCANCEL') limit 1;", kptn), Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    If dr.HasRows() = False Then
                        dtexpress(xloop).Delete()
                    End If
                    dr.Close()
                End Using
                xloop = xloop + 1
            Next
            Con.CloseCon()
            xloop = 0
            dtexpress.AcceptChanges()
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + cmd.CommandText.ToString() + " checkunclaimedpartners")
            GetMessage("Please Contact Admin Support")
            'GetMessage(ex.ToString() + " " + Con.GetCon.Conn
        End Try
    End Sub


   

    'DT wallet r account
    Private Function GetWalletAccountsum() As DataTable
        Dim dt As DataTable = New DataTable
        Dim id As New DataColumn("ID", GetType(System.Int32))
        dt.Columns.Add(id)
        If ReportType = 7 And drpTransactionTypelist.SelectedValue = "63" Then
            dt.Columns.Add(New DataColumn("ttlCount", GetType(System.String)))
            dt.Columns.Add(New DataColumn("type", GetType(System.String)))
            dt.Columns.Add(New DataColumn("_dateyear", GetType(System.String)))
            dt.Columns.Add(New DataColumn("_datemonth", GetType(System.String)))
        End If
        dt.PrimaryKey = New DataColumn() {id}
        Return dt
    End Function
    'DT wallet registration and account
    Private Function GetWalletRegistration() As DataTable
        Dim dt As DataTable = New DataTable
        Dim id As New DataColumn("ID", GetType(System.Int32))
        dt.Columns.Add(id)
        If ReportType = 7 And (drpTransactionTypelist.SelectedValue = "62" Or drpTransactionTypelist.SelectedValue = "63") Then
            dt.Columns.Add(New DataColumn("ttlCount", GetType(System.String)))
            dt.Columns.Add(New DataColumn("_dateyear", GetType(System.String)))
            dt.Columns.Add(New DataColumn("_datemonth", GetType(System.String)))
        End If
        dt.PrimaryKey = New DataColumn() {id}
        Return dt
    End Function
    'DATATABLE FOR PARTNERS
    Private Function GetWalletCustBalanceDataTable() As DataTable
        Dim dt As DataTable = New DataTable
        Dim id As New DataColumn("ID", GetType(System.Int32))
        id.AutoIncrement = True
        id.AutoIncrementSeed = 1
        id.AutoIncrementStep = 1
        dt.Columns.Add(id)
        dt.Columns.Add(New DataColumn("loadtxncount", GetType(System.String)))
        dt.Columns.Add(New DataColumn("loadprincipal", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walletsotxncount", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walletsoprincipal", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walletsocharge", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walletsokppotxncount", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walletsokppoprincipal", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walletsokppocharge", GetType(System.String)))
        dt.Columns.Add(New DataColumn("adjwalletsokppotxncount", GetType(System.String)))
        dt.Columns.Add(New DataColumn("adjwalletsokppoprincipal", GetType(System.String)))
        dt.Columns.Add(New DataColumn("adjwalletsokppocharge", GetType(System.String)))
        dt.Columns.Add(New DataColumn("cashouttxncount", GetType(System.String)))
        dt.Columns.Add(New DataColumn("cashoutprincipal", GetType(System.String)))
        dt.Columns.Add(New DataColumn("cashoutcharge", GetType(System.String)))
        dt.Columns.Add(New DataColumn("billspaytxncount", GetType(System.String)))
        dt.Columns.Add(New DataColumn("billspayprincipal", GetType(System.String)))
        dt.Columns.Add(New DataColumn("billspaycharge", GetType(System.String)))
        dt.Columns.Add(New DataColumn("adjwalletsotxncount", GetType(System.String)))
        dt.Columns.Add(New DataColumn("adjwalletsoprincipal", GetType(System.String)))
        dt.Columns.Add(New DataColumn("adjwalletsocharge", GetType(System.String)))
        dt.Columns.Add(New DataColumn("adjbillspaytxncount", GetType(System.String)))
        dt.Columns.Add(New DataColumn("adjbillspayprincipal", GetType(System.String)))
        dt.Columns.Add(New DataColumn("adjbillspaycharge", GetType(System.String)))
        dt.Columns.Add(New DataColumn("customername", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walletno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("username", GetType(System.String)))
        dt.Columns.Add(New DataColumn("custid", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walleteloadtxncount", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walleteloadprincipal", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walleteloadcharge", GetType(System.String)))
        dt.Columns.Add(New DataColumn("beginningbal", GetType(System.String)))
        dt.PrimaryKey = New DataColumn() {id}
        Return dt
    End Function
    ' express summary report
    Private Function GetExpressSummaryDataTable() As DataTable
        Dim dt As DataTable = New DataTable
        Dim id As New DataColumn("ID", GetType(System.Int32))
        dt.Columns.Add(id)
        dt.Columns.Add(New DataColumn("loadtxncount", GetType(System.String)))
        dt.Columns.Add(New DataColumn("loadprincipal", GetType(System.String)))

        dt.Columns.Add(New DataColumn("walletsotxncount", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walletsoprincipal", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walletsocharge", GetType(System.String)))

        dt.Columns.Add(New DataColumn("walletsokppotxncount", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walletsokppoprincipal", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walletsokppocharge", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walletsokppocomm", GetType(System.String)))

        dt.Columns.Add(New DataColumn("billspaytxncount", GetType(System.String)))
        dt.Columns.Add(New DataColumn("billspayprincipal", GetType(System.String)))
        dt.Columns.Add(New DataColumn("billspaycharge", GetType(System.String)))
        dt.Columns.Add(New DataColumn("billspaycomm", GetType(System.String)))

        dt.Columns.Add(New DataColumn("customername", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walletno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("username", GetType(System.String)))
        dt.Columns.Add(New DataColumn("custid", GetType(System.String)))

        dt.Columns.Add(New DataColumn("walleteloadtxncount", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walleteloadprincipal", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walleteloadcharge", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walleteloadcomm", GetType(System.String)))

        dt.Columns.Add(New DataColumn("walletcorptxncount", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walletcorpprincipal", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walletcorpcharge", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walletcorpcomm", GetType(System.String)))

        dt.Columns.Add(New DataColumn("walletdomtxncount", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walletdomprincipal", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walletdomcharge", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walletdomcomm", GetType(System.String)))

        dt.Columns.Add(New DataColumn("beginningbal", GetType(System.String)))
        dt.PrimaryKey = New DataColumn() {id}
        Return dt
    End Function
    Private Function GetMobileDatatable() As DataTable
        Dim dt As DataTable = New DataTable
        Dim id As New DataColumn("ID", GetType(System.Int32))
        id.AutoIncrement = True
        id.AutoIncrementSeed = 1
        id.AutoIncrementStep = 1
        dt.Columns.Add(id)
        dt.Columns.Add(New DataColumn("transdate", GetType(System.String)))
        dt.Columns.Add(New DataColumn("kptn", GetType(System.String)))
        dt.Columns.Add(New DataColumn("receivername", GetType(System.String)))
        dt.Columns.Add(New DataColumn("sendername", GetType(System.String)))
        dt.Columns.Add(New DataColumn("sobranch", GetType(System.String)))
        dt.Columns.Add(New DataColumn("pobranch", GetType(System.String)))
        dt.Columns.Add(New DataColumn("partnername", GetType(System.String)))
        dt.Columns.Add(New DataColumn("principal", GetType(System.String)))
        dt.Columns.Add(New DataColumn("charge", GetType(System.String)))
        dt.Columns.Add(New DataColumn("commission", GetType(System.String)))
        dt.Columns.Add(New DataColumn("accountid", GetType(System.String)))
        dt.Columns.Add(New DataColumn("username", GetType(System.String)))
        dt.Columns.Add(New DataColumn("fullname", GetType(System.String)))
        dt.Columns.Add(New DataColumn("operator", GetType(System.String)))
        dt.Columns.Add(New DataColumn("cancelreason", GetType(System.String)))
        dt.Columns.Add(New DataColumn("cancelleddate", GetType(System.String)))
        dt.Columns.Add(New DataColumn("oldkptn", GetType(System.String)))
        dt.Columns.Add(New DataColumn("cancelledbyoperator", GetType(System.String)))
        dt.Columns.Add(New DataColumn("custid", GetType(System.String)))
        dt.Columns.Add(New DataColumn("controlno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("branchcode", GetType(System.String)))
        dt.Columns.Add(New DataColumn("zonecode", GetType(System.String)))
        dt.Columns.Add(New DataColumn("flag", GetType(System.String)))
        dt.Columns.Add(New DataColumn("network", GetType(System.String)))
        dt.Columns.Add(New DataColumn("recvrwalletid", GetType(System.String)))


        dt.Columns.Add(New DataColumn("activitytype", GetType(System.String)))
        dt.Columns.Add(New DataColumn("currency", GetType(System.String)))
        dt.Columns.Add(New DataColumn("sobcode", GetType(System.String)))
        dt.Columns.Add(New DataColumn("sooperator", GetType(System.String)))
        dt.Columns.Add(New DataColumn("pobcode", GetType(System.String)))
        dt.Columns.Add(New DataColumn("pooperator", GetType(System.String)))
        dt.Columns.Add(New DataColumn("sendercontactno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("sendaddress", GetType(System.String)))
        dt.Columns.Add(New DataColumn("receivercontactno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("idtype", GetType(System.String)))
        dt.Columns.Add(New DataColumn("receiveridno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("receiveraddress", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walletno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("senderwalletno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("receiverwalletno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("operatorid", GetType(System.String)))
        dt.Columns.Add(New DataColumn("claimeddate", GetType(System.String)))
        dt.Columns.Add(New DataColumn("balance", GetType(System.String)))
        dt.Columns.Add(New DataColumn("branch", GetType(System.String)))
        dt.Columns.Add(New DataColumn("transtype", GetType(System.String)))
        dt.Columns.Add(New DataColumn("conveniencefee", GetType(System.String))) 'testing

        dt.PrimaryKey = New DataColumn() {id}
        Return dt
    End Function
    Private Function dtableWU() As DataTable
        Dim dt As DataTable = New DataTable
        Dim id As New DataColumn("ID", GetType(System.Int32))
        id.AutoIncrement = True
        id.AutoIncrementSeed = 1
        id.AutoIncrementStep = 1
        dt.Columns.Add(id)
        dt.Columns.Add(New DataColumn("sendoutdate", GetType(System.String)))
        dt.Columns.Add(New DataColumn("referenceno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("controlno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("accountno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("accountname", GetType(System.String)))
        dt.Columns.Add(New DataColumn("mtcn", GetType(System.String)))
        dt.Columns.Add(New DataColumn("merchantname", GetType(System.String)))
        dt.Columns.Add(New DataColumn("merchantamount", GetType(System.String)))
        dt.Columns.Add(New DataColumn("amount", GetType(System.String)))
        dt.Columns.Add(New DataColumn("resource", GetType(System.String)))
        dt.Columns.Add(New DataColumn("branchname", GetType(System.String)))
        dt.Columns.Add(New DataColumn("regionname", GetType(System.String)))
        dt.Columns.Add(New DataColumn("charge", GetType(System.String)))
        dt.PrimaryKey = New DataColumn() {id}
        Return dt
    End Function
    Private Function GetCustListDT() As DataTable
        Dim dt As DataTable = New DataTable
        Dim id As New DataColumn("ID", GetType(System.Int32))
        dt.Columns.Add(id)
        dt.Columns.Add(New DataColumn("customeridno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walletno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("lastname", GetType(System.String)))
        dt.Columns.Add(New DataColumn("firstname", GetType(System.String)))
        dt.Columns.Add(New DataColumn("middlename", GetType(System.String)))
        dt.Columns.Add(New DataColumn("gender", GetType(System.String)))
        dt.Columns.Add(New DataColumn("birthdate", GetType(System.String)))
        dt.Columns.Add(New DataColumn("age", GetType(System.String)))
        dt.Columns.Add(New DataColumn("barangay", GetType(System.String)))
        dt.Columns.Add(New DataColumn("citymun", GetType(System.String)))
        dt.Columns.Add(New DataColumn("province", GetType(System.String)))
        dt.Columns.Add(New DataColumn("country", GetType(System.String)))
        dt.Columns.Add(New DataColumn("zipcode", GetType(System.String)))
        dt.Columns.Add(New DataColumn("mobileno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("emailadd", GetType(System.String)))
        dt.Columns.Add(New DataColumn("natureofwork", GetType(System.String)))
        dt.Columns.Add(New DataColumn("nationality", GetType(System.String)))
        dt.Columns.Add(New DataColumn("idtype", GetType(System.String)))
        dt.Columns.Add(New DataColumn("idno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("expirydate", GetType(System.String)))
        dt.PrimaryKey = New DataColumn() {id}
        Return dt
    End Function
    Private Function getSmartPromo() As DataTable
        Dim dt As DataTable = New DataTable
        Dim id As New DataColumn("ID", GetType(System.Int32))
        dt.Columns.Add(id)
        dt.Columns.Add(New DataColumn("walletno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("kptn", GetType(System.String)))
        dt.Columns.Add(New DataColumn("transdate", GetType(System.String)))
        dt.Columns.Add(New DataColumn("sendereceiverno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("principal", GetType(System.String)))
        dt.PrimaryKey = New DataColumn() {id}
        Return dt
    End Function
    Private Function GetDatatable() As DataTable
        Dim dt As DataTable = New DataTable
        Dim id As New DataColumn("ID", GetType(System.Int32))
        id.AutoIncrement = True
        id.AutoIncrementSeed = 1
        id.AutoIncrementStep = 1
        dt.Columns.Add(id)
        If drppartnerid.Text = smaccountid And ReportType = 6 And partnername <> Nothing And (drpTransactionTypelist.SelectedValue = "1" Or drpTransactionTypelist.SelectedValue = "2") Then
            dt.Columns.Add(New DataColumn("txncode", GetType(System.String)))
            dt.Columns.Add(New DataColumn("sender", GetType(System.String)))
            dt.Columns.Add(New DataColumn("receiver", GetType(System.String)))
            dt.Columns.Add(New DataColumn("principal", GetType(System.String)))
            dt.Columns.Add(New DataColumn("fee", GetType(System.String)))
            dt.Columns.Add(New DataColumn("total", GetType(System.String)))
        ElseIf Session("roles") = "CAD-DIVMAN" Then
            If drpTransactionTypelist.SelectedValue = "33" Or drpTransactionTypelist.SelectedValue = "51" Or drpTransactionTypelist.SelectedValue = "54" Then
                dt.Columns.Add(New DataColumn("dateissued", GetType(System.String)))
                dt.Columns.Add(New DataColumn("orno", GetType(System.String)))
                dt.Columns.Add(New DataColumn("sendername", GetType(System.String)))
                dt.Columns.Add(New DataColumn("principal", GetType(System.String)))
                dt.Columns.Add(New DataColumn("cancelledprincipal", GetType(System.String)))
                dt.Columns.Add(New DataColumn("charge", GetType(System.String)))
                dt.Columns.Add(New DataColumn("vatamount", GetType(System.String)))
                dt.Columns.Add(New DataColumn("remarks", GetType(System.String)))
                dt.Columns.Add(New DataColumn("location", GetType(System.String)))
                dt.Columns.Add(New DataColumn("tin", GetType(System.String)))
                dt.Columns.Add(New DataColumn("status", GetType(System.String)))
            ElseIf drpTransactionTypelist.SelectedValue = "34" Then
                dt.Columns.Add(New DataColumn("transdate", GetType(System.String)))
                dt.Columns.Add(New DataColumn("operator", GetType(System.String)))
                dt.Columns.Add(New DataColumn("referenceno", GetType(System.String)))
                dt.Columns.Add(New DataColumn("transtype", GetType(System.String)))
                dt.Columns.Add(New DataColumn("amount", GetType(System.String)))
                dt.Columns.Add(New DataColumn("charge", GetType(System.String)))
                dt.Columns.Add(New DataColumn("terminalid", GetType(System.String)))
                dt.Columns.Add(New DataColumn("tin", GetType(System.String)))
            Else
                dt.Columns.Add(New DataColumn("accountid", GetType(System.String)))
                dt.Columns.Add(New DataColumn("tin", GetType(System.String)))
                dt.Columns.Add(New DataColumn("accreditationno", GetType(System.String)))
                dt.Columns.Add(New DataColumn("permitno", GetType(System.String)))
                dt.Columns.Add(New DataColumn("min", GetType(System.String)))
                dt.Columns.Add(New DataColumn("serverno", GetType(System.String)))
                dt.Columns.Add(New DataColumn("seqno", GetType(System.String)))
                dt.Columns.Add(New DataColumn("sales", GetType(System.String)))
                dt.Columns.Add(New DataColumn("grandtotalold", GetType(System.String)))
                dt.Columns.Add(New DataColumn("vatable", GetType(System.String)))
                dt.Columns.Add(New DataColumn("lastor", GetType(System.String)))
                dt.Columns.Add(New DataColumn("date", GetType(System.String)))
                dt.Columns.Add(New DataColumn("serialno", GetType(System.String)))
                dt.Columns.Add(New DataColumn("firsttxndate", GetType(System.String)))
                dt.Columns.Add(New DataColumn("orno", GetType(System.String)))
                dt.Columns.Add(New DataColumn("xseqno", GetType(System.String)))
            End If

        ElseIf drppartnerid.Text = smaccountid And ReportType = 6 And drpTransactionTypelist.SelectedValue = "19" Then
            dt.Columns.Add(New DataColumn("branchtin", GetType(System.String)))
            dt.Columns.Add(New DataColumn("transdate", GetType(System.String)))
            dt.Columns.Add(New DataColumn("orno", GetType(System.String)))
            dt.Columns.Add(New DataColumn("sendername", GetType(System.String)))
            dt.Columns.Add(New DataColumn("transtin", GetType(System.String)))
            dt.Columns.Add(New DataColumn("vatservicefee", GetType(System.String)))
            dt.Columns.Add(New DataColumn("zeroservicefee", GetType(System.String)))
            dt.Columns.Add(New DataColumn("vatexcemptservicefee", GetType(System.String)))
            dt.Columns.Add(New DataColumn("vat", GetType(System.String)))
            dt.Columns.Add(New DataColumn("charge", GetType(System.String)))
            dt.Columns.Add(New DataColumn("accservicefee", GetType(System.String)))
            dt.Columns.Add(New DataColumn("reprintcount", GetType(System.String)))
            dt.Columns.Add(New DataColumn("remarks", GetType(System.String)))
        ElseIf drppartnerid.Text = smaccountid And ReportType = 6 And (drpTransactionTypelist.SelectedValue = "18" Or drpTransactionTypelist.SelectedValue = "17") Then
            If drpTransactionTypelist.SelectedValue = "17" Then
                dt.Columns.Add(New DataColumn("branchtin", GetType(System.String)))
                dt.Columns.Add(New DataColumn("locationid", GetType(System.String)))
                dt.Columns.Add(New DataColumn("_date", GetType(System.String)))
                dt.Columns.Add(New DataColumn("grandtotal", GetType(System.String)))
                dt.Columns.Add(New DataColumn("totaltxnamount", GetType(System.String)))
            Else
                dt.Columns.Add(New DataColumn("oldgrandtotal", GetType(System.String)))
                dt.Columns.Add(New DataColumn("totalamount", GetType(System.String)))
                dt.Columns.Add(New DataColumn("transdate", GetType(System.String)))
            End If
            dt.Columns.Add(New DataColumn("terminalid", GetType(System.String)))
            dt.Columns.Add(New DataColumn("tin", GetType(System.String)))
            dt.Columns.Add(New DataColumn("permitno", GetType(System.String)))
            dt.Columns.Add(New DataColumn("receiptno", GetType(System.String)))
            dt.Columns.Add(New DataColumn("transcount", GetType(System.String)))
            dt.Columns.Add(New DataColumn("principal", GetType(System.String)))
            dt.Columns.Add(New DataColumn("servicefee", GetType(System.String)))
            dt.Columns.Add(New DataColumn("newgrandtotal", GetType(System.String)))
            dt.Columns.Add(New DataColumn("voidtxn", GetType(System.String)))
        ElseIf drppartnerid.Text = smaccountid And (drpTransactionTypelist.SelectedValue = "13" Or drpTransactionTypelist.SelectedValue = "14" Or drpTransactionTypelist.SelectedValue = "15") Then
            dt.Columns.Add(New DataColumn("bcode", GetType(System.String)))
            dt.Columns.Add(New DataColumn("smbranch", GetType(System.String)))
            dt.Columns.Add(New DataColumn("itemcount", GetType(System.String)))
            dt.Columns.Add(New DataColumn("principal", GetType(System.String)))
            dt.Columns.Add(New DataColumn("fee", GetType(System.String)))
            dt.Columns.Add(New DataColumn("total", GetType(System.String)))
            dt.Columns.Add(New DataColumn("feeshare", GetType(System.String)))
        ElseIf drpTransactionTypelist.SelectedValue = "29" Then
            dt.Columns.Add(New DataColumn("date", GetType(System.String)))
            dt.Columns.Add(New DataColumn("transtype", GetType(System.String)))
            dt.Columns.Add(New DataColumn("loadamount", GetType(System.String)))
            dt.Columns.Add(New DataColumn("principal", GetType(System.String)))
            dt.Columns.Add(New DataColumn("charge", GetType(System.String)))
            dt.Columns.Add(New DataColumn("total", GetType(System.String)))
            dt.Columns.Add(New DataColumn("commission", GetType(System.String)))
            dt.Columns.Add(New DataColumn("runningbalance", GetType(System.String)))
        Else
            dt.Columns.Add(New DataColumn("controlno", GetType(System.String)))
            dt.Columns.Add(New DataColumn("kptn", GetType(System.String)))
            dt.Columns.Add(New DataColumn("referenceno", GetType(System.String)))
            dt.Columns.Add(New DataColumn("sendername", GetType(System.String)))
            dt.Columns.Add(New DataColumn("receivername", GetType(System.String)))
            dt.Columns.Add(New DataColumn("transdate", GetType(System.String)))
            dt.Columns.Add(New DataColumn("cancelleddate", GetType(System.String)))
            dt.Columns.Add(New DataColumn("time", GetType(System.String)))
            dt.Columns.Add(New DataColumn("Receiver_Phone", GetType(System.String)))
            dt.Columns.Add(New DataColumn("receivercontactno", GetType(System.String)))
            dt.Columns.Add(New DataColumn("operator", GetType(System.String)))
            dt.Columns.Add(New DataColumn("currency", GetType(System.String)))
            dt.Columns.Add(New DataColumn("cancelreason", GetType(System.String)))
            dt.Columns.Add(New DataColumn("branchcode", GetType(System.String)))
            dt.Columns.Add(New DataColumn("principal", GetType(System.Decimal)))
            dt.Columns.Add(New DataColumn("charge", GetType(System.Decimal)))
            dt.Columns.Add(New DataColumn("adjprincipal", GetType(System.Decimal)))
            dt.Columns.Add(New DataColumn("adjcharge", GetType(System.Decimal)))
            dt.Columns.Add(New DataColumn("socancelprincipal", GetType(System.Decimal)))
            dt.Columns.Add(New DataColumn("socancelcharge", GetType(System.Decimal)))
            dt.Columns.Add(New DataColumn("flag", GetType(System.String)))
            dt.Columns.Add(New DataColumn("branchname", GetType(System.String)))
            dt.Columns.Add(New DataColumn("partnername", GetType(System.String)))
            dt.Columns.Add(New DataColumn("InitiatedBy", GetType(System.String)))
            dt.Columns.Add(New DataColumn("RequestNo", GetType(System.String)))
            dt.Columns.Add(New DataColumn("DateRequest", GetType(System.String)))
            dt.Columns.Add(New DataColumn("RequestType", GetType(System.String)))
            dt.Columns.Add(New DataColumn("zonecode", GetType(System.String)))
            dt.Columns.Add(New DataColumn("operatorid", GetType(System.String)))
            If sotxnreftype = "WSC" Or ReportType = 5 Then
                dt.Columns.Add(New DataColumn("commission", GetType(System.String))) 'wsc
            End If
            If Session("roles") = "KP-HKDTELLER" Or Session("roles") = "KP-HKDPARTNERTELLER" Then
                dt.Columns.Add(New DataColumn("HKDAmount", GetType(System.Decimal)))
                dt.Columns.Add(New DataColumn("HKDCharge", GetType(System.Decimal)))
            End If

            If drpTransactionTypelist.SelectedIndex = 60 Or drpTransactionTypelist.SelectedIndex = 61 Then 'wallet corp po
                dt.Columns.Add(New DataColumn("customername", GetType(System.String)))
                dt.Columns.Add(New DataColumn("walletno", GetType(System.String)))
                dt.Columns.Add(New DataColumn("username", GetType(System.String)))
                dt.Columns.Add(New DataColumn("custid", GetType(System.String)))
            End If

        End If
        dt.PrimaryKey = New DataColumn() {id}
        Return dt
    End Function

    Private Function GetDatatableAllPartner() As DataTable
        Dim dt As DataTable = New DataTable

        dt.Columns.Add("accountname", GetType(System.String))
        dt.Columns.Add("accountcode", GetType(System.String))
        dt.Columns.Add("PayPHP", GetType(System.Int32))
        dt.Columns.Add("PayUSD", GetType(System.Int32))
        dt.Columns.Add("payphptotalprincipal", GetType(System.Double))
        dt.Columns.Add("payusdtotalprincipal", GetType(System.Double))
        dt.Columns.Add("sendPHP", GetType(System.Int32))
        dt.Columns.Add("sendUSD", GetType(System.Int32))
        dt.Columns.Add("sendphptotalprincipal", GetType(System.Double))
        dt.Columns.Add("sendusdtotalprincipal", GetType(System.Double))

        Return dt

    End Function
    Private Function GetDatatableAllPartner2() As DataTable
        Dim dt As DataTable = New DataTable

        dt.Columns.Add("accountname", GetType(System.String))
        dt.Columns.Add("accountcode", GetType(System.String))
        dt.Columns.Add("povCPHP", GetType(System.Int32))
        dt.Columns.Add("povCUSD", GetType(System.Int32))
        dt.Columns.Add("povTotal", GetType(System.Int32))
        dt.Columns.Add("poPTotalPHP", GetType(System.Double))
        dt.Columns.Add("poPTotalUSD", GetType(System.Double))
        dt.Columns.Add("sovCPHP", GetType(System.Int32))
        dt.Columns.Add("sovCUSD", GetType(System.Int32))
        dt.Columns.Add("sovTotal", GetType(System.Int32))
        dt.Columns.Add("soPTotalPHP", GetType(System.Double))
        dt.Columns.Add("soPTotalUSD", GetType(System.Double))
        Return dt

    End Function
    Private Function GetDatatablePaypal() As DataTable
        Dim dt As DataTable = New DataTable
        Dim id As New DataColumn("ID", GetType(System.Int32))
        dt.Columns.Add(id)
        dt.Columns.Add(New DataColumn("kptn", GetType(System.String)))
        dt.Columns.Add(New DataColumn("referenceno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("transdate", GetType(System.String)))
        dt.Columns.Add(New DataColumn("sendercountry", GetType(System.String)))
        dt.Columns.Add(New DataColumn("sendername", GetType(System.String)))
        dt.Columns.Add(New DataColumn("senderaddress", GetType(System.String)))
        dt.Columns.Add(New DataColumn("claimeddate", GetType(System.String)))
        dt.Columns.Add(New DataColumn("receivername", GetType(System.String)))
        dt.Columns.Add(New DataColumn("receiveraddress", GetType(System.String)))
        dt.Columns.Add(New DataColumn("receivercontactno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("idtype", GetType(System.String)))
        dt.Columns.Add(New DataColumn("idno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("currency", GetType(System.String)))
        dt.Columns.Add(New DataColumn("principal", GetType(System.Decimal)))
        dt.Columns.Add(New DataColumn("branchcode", GetType(System.String)))
        dt.Columns.Add(New DataColumn("zonecode", GetType(System.String)))
        dt.Columns.Add(New DataColumn("branchname", GetType(System.String)))
        dt.Columns.Add(New DataColumn("branchaddress", GetType(System.String)))
        dt.Columns.Add(New DataColumn("operator", GetType(System.String)))
        dt.Columns.Add(New DataColumn("cancelreason", GetType(System.String)))
        dt.Columns.Add(New DataColumn("controlno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("servicecharge", GetType(System.Decimal)))
        dt.Columns.Add(New DataColumn("charge", GetType(System.Decimal)))
        dt.Columns.Add(New DataColumn("operatorid", GetType(System.String)))
        dt.PrimaryKey = New DataColumn() {id}
        Return dt
    End Function
    Private Function GetDataTableSeqno() As DataTable
        Dim dt As DataTable = New DataTable
        Dim id As New DataColumn("ID", GetType(System.Int32))
        dt.Columns.Add(id)
        dt.Columns.Add(New DataColumn("counter", GetType(System.Int32)))
        dt.Columns.Add(New DataColumn("datecreated", GetType(System.DateTime)))
        dt.PrimaryKey = New DataColumn() {id}
        Return dt
    End Function
    'DATATABLE FOR Express Loading
    Private Function GetExpressLoadingDTable() As DataTable
        Dim dt As DataTable = New DataTable
        Dim id As New DataColumn("ID", GetType(System.Int32))
        dt.Columns.Add(id)
        dt.Columns.Add(New DataColumn("AgentName", GetType(System.String)))
        dt.Columns.Add(New DataColumn("AccountNo", GetType(System.String)))
        dt.Columns.Add(New DataColumn("Transdate", GetType(System.String)))
        dt.Columns.Add(New DataColumn("KPTN", GetType(System.String)))
        dt.Columns.Add(New DataColumn("LoadAmount", GetType(System.Decimal)))
        dt.Columns.Add(New DataColumn("Operator", GetType(System.String)))
        dt.Columns.Add(New DataColumn("Branch", GetType(System.String)))
        dt.Columns.Add(New DataColumn("zcode", GetType(System.String)))
        dt.PrimaryKey = New DataColumn() {id}
        Return dt
    End Function
    'ml online datatable
    Private Function GetMLOnlineDT() As DataTable
        Dim dt As DataTable = New DataTable
        Dim id As New DataColumn("ID", GetType(System.Int32))
        dt.Columns.Add(id)
        ' dt.Columns.Add(New DataColumn("Number", GetType(System.String)))
        dt.Columns.Add(New DataColumn("Order_Number", GetType(System.String)))
        dt.Columns.Add(New DataColumn("Description", GetType(System.String)))
        dt.Columns.Add(New DataColumn("Amount", GetType(System.Decimal)))

        dt.PrimaryKey = New DataColumn() {id}
        Return dt
    End Function
    'ml wallet from Secuirty bank
    Private Function GetSecurityDT() As DataTable
        Dim dt As DataTable = New DataTable
        Dim id As New DataColumn("ID", GetType(System.Int32))
        dt.Columns.Add(id)

        dt.Columns.Add(New DataColumn("claimeddate", GetType(System.String)))
        dt.Columns.Add(New DataColumn("sendername", GetType(System.String)))
        dt.Columns.Add(New DataColumn("receivername", GetType(System.String)))
        dt.Columns.Add(New DataColumn("controlno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("referenceno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("kptnno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("accountname", GetType(System.String)))
        dt.Columns.Add(New DataColumn("principal", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walletno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("operatorid", GetType(System.String)))

        dt.PrimaryKey = New DataColumn() {id}
        Return dt
    End Function


    Private Function getBatchUpload() As DataTable
        Dim dt As DataTable = New DataTable
        Dim id As New DataColumn("ID", GetType(System.Int32))
        dt.Columns.Add(id)

        dt.Columns.Add(New DataColumn("transdate", GetType(System.String)))
        dt.Columns.Add(New DataColumn("kptn", GetType(System.String)))
        dt.Columns.Add(New DataColumn("receivername", GetType(System.String)))
        dt.Columns.Add(New DataColumn("batchnumber", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walletno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("principal", GetType(System.String)))
        dt.Columns.Add(New DataColumn("receiverwallet", GetType(System.String)))
        dt.Columns.Add(New DataColumn("status", GetType(System.String)))
        dt.Columns.Add(New DataColumn("sendername", GetType(System.String)))
        dt.Columns.Add(New DataColumn("charge", GetType(System.String)))
        dt.Columns.Add(New DataColumn("Grandtotal", GetType(System.String)))

        dt.PrimaryKey = New DataColumn() {id}
        Return dt
    End Function
    'GET OPERATOR AND BRANCH
    Private Sub GetOperatorAndBranch(ByVal dtExpress As DataTable, ByVal _type As String)
        Dim OperatorID As String = String.Empty
        Dim Bcode As String = String.Empty
        Dim Zcode As String = String.Empty
        Dim _dt1 As DataTable = New DataTable
        Dim _dt2 As DataTable = New DataTable
        Dim counter As Integer = 0

        Try
            For Each row As DataRow In dtExpress.Rows
                OperatorID = row.Item("operatorid")
                Bcode = row.Item("branchcode")
                If _type = "PO" Or _type = "pobranch" Then

                    Zcode = If(Not IsDBNull(row.Item("zonecode")), Trim(row.Item("zonecode")), String.Empty)
                End If
                If UCase(OperatorID) = UCase(If(Not IsDBNull(row.Item("operatorid")), row.Item("operatorid"), "-")) Then
                    Con.OpenCon("KPUsers")
                    Using Con.GetCon()
                        If _type = "PO" Then
                            If Zcode <> "" Then
                                strquery = String.Format("SELECT IF( (SELECT bu.fullname FROM kpusers.sysuseraccounts ss LEFT JOIN  kpusers.branchusers bu ON bu.resourceid=ss.resourceid WHERE ss.userlogin= '{0}'  LIMIT 1) IS NULL,(SELECT bu.fullname FROM kpusers.adminsysuseraccounts ss LEFT JOIN  kpusers.adminbranchusers bu ON bu.resourceid=ss.resourceid WHERE ss.userlogin='{0}'  LIMIT 1),(SELECT bu.fullname FROM kpusers.sysuseraccounts ss LEFT JOIN  kpusers.branchusers bu ON bu.resourceid=ss.resourceid WHERE ss.userlogin='{0}'  LIMIT 1))AS Operator,(SELECT branchname FROM branches WHERE branchcode='{1}' AND zonecode='{2}' LIMIT 1) AS branchname FROM sysuseraccounts sys WHERE sys.Branchcode= '{1}' AND sys.zonecode='{2}' LIMIT 1;", OperatorID, Bcode, Zcode)
                            Else
                                strquery = String.Format("SELECT IF( (SELECT bu.fullname FROM kpusers.sysuseraccounts ss LEFT JOIN  kpusers.branchusers bu ON bu.resourceid=ss.resourceid WHERE ss.userlogin= '{0}'  LIMIT 1) IS NULL,(SELECT bu.fullname FROM kpusers.adminsysuseraccounts ss LEFT JOIN  kpusers.adminbranchusers bu ON bu.resourceid=ss.resourceid WHERE ss.userlogin='{0}'  LIMIT 1),(SELECT bu.fullname FROM kpusers.sysuseraccounts ss LEFT JOIN  kpusers.branchusers bu ON bu.resourceid=ss.resourceid WHERE ss.userlogin='{0}'  LIMIT 1))AS Operator FROM sysuseraccounts sys  LIMIT 1;", OperatorID)
                            End If
                        ElseIf _type = "cancelpoExpress" Then
                            strquery = String.Format("SELECT IF( (SELECT bu.fullname FROM kpusers.sysuseraccounts ss LEFT JOIN  kpusers.branchusers bu ON bu.resourceid=ss.resourceid WHERE ss.userlogin= '{0}'  LIMIT 1) IS NULL,(SELECT bu.fullname FROM kpusers.adminsysuseraccounts ss LEFT JOIN  kpusers.adminbranchusers bu ON bu.resourceid=ss.resourceid WHERE ss.userlogin='{0}'  LIMIT 1),(SELECT bu.fullname FROM kpusers.sysuseraccounts ss LEFT JOIN  kpusers.branchusers bu ON bu.resourceid=ss.resourceid WHERE ss.userlogin='{0}'  LIMIT 1))AS Operator", OperatorID)
                        ElseIf _type = "pobranch" Then
                            strquery = String.Format("select branchname from kpusers.branches where branchcode='{0}' and zonecode='{1}'  LIMIT 1 ", Bcode, Zcode)
                        End If
                        cmd = New MySqlCommand(strquery, Con.GetCon())
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        If dr.Read() Then
                            dtExpress.Rows(counter).BeginEdit()
                            If _type = "pobranch" Then
                                dtExpress.Rows(counter)("pobranch") = UCase(If(Not IsDBNull(dr.Item("branchname")), Trim(dr.Item("branchname")), OperatorID))
                            Else
                                _dt1 = GetDatatable()
                                dtExpress.Rows(counter)("operator") = UCase(If(Not IsDBNull(dr.Item("operator")), Trim(dr.Item("operator")), OperatorID))
                                If _type = "PO" Then
                                    If Zcode <> "" Then
                                        dtExpress.Rows(counter)("branchname") = String.Format("{0}-{1}", Bcode, UCase(If(Not IsDBNull(dr.Item("branchname")), Trim(dr.Item("branchname")), "-")))

                                    End If

                                End If
                            End If
                            dtExpress.Rows(counter).EndEdit()
                            dtExpress.AcceptChanges()
                        End If
                        dr.Close()
                    End Using
                End If
                '_dt1.Merge(dtExpress)
                counter = counter + 1
            Next
            dtable1.Clear()
            dtable1.Merge(dtExpress)
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " GetOperatorAndBranch")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Contact Admin Support")
        End Try
    End Sub
    'GET PARTNERS OPERATOR
    Private Sub Getpartnersoperator(ByVal dtExpress As DataTable)
        Dim OperatorID As String = String.Empty
        Dim Bcode As String = String.Empty
        Dim Zcode As String = String.Empty
        Dim _dt1 As DataTable = New DataTable
        Dim _dt2 As DataTable = New DataTable
        Dim counter As Integer = 0

        Try
            For Each row As DataRow In dtExpress.Rows
                OperatorID = row.Item("operator")
                If UCase(OperatorID) = UCase(row.Item("operatorid")) Then
                    getconnections()
                    Using Con.GetCon()
                        strquery = String.Format("SELECT TRIM(CONCAT(pu.lastname,', ',pu.firstname,' ',pu.middlename)) AS operator FROM `kpadminpartners`.`partnersusers` pu WHERE pu.userid='{0}' LIMIT 1;", OperatorID)
                        cmd = New MySqlCommand(strquery, Con.GetCon())
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        If dr.Read() Then
                            dtExpress.Rows(counter).BeginEdit()
                            dtExpress.Rows(counter)("operator") = UCase(If(Not IsDBNull(dr.Item("operator")), Trim(dr.Item("operator")), OperatorID))
                            dtExpress.Rows(counter).EndEdit()
                            dtExpress.AcceptChanges()
                        End If
                        dr.Close()
                    End Using
                End If
                counter = counter + 1
            Next
            dtable1.Clear()
            dtable1.Merge(dtExpress)
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " Getpartnersoperator")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Contact Admin Support")
        End Try
    End Sub
    'GET SM OPERATOR
    Private Sub GetSMOperator(ByVal dtSM As DataTable, ByVal _type As String)
        Dim OperatorID As String = String.Empty
        Dim Bcode As String = String.Empty
        Dim Zcode As String = String.Empty
        Dim _dt1 As DataTable = New DataTable
        Dim _dt2 As DataTable = New DataTable
        Dim counter As Integer = 0

        _dt1 = GetDatatable()
        Try
            For Each row As DataRow In dtSM.Rows
                OperatorID = row.Item("operator")

                Con.OpenCon("KPWSC")
                Using Con.GetCon()
                    strquery = String.Format("SELECT CONCAT(firstname,' ', middlename,' ',lastname) AS operator FROM kpadminpartners.`wssubpartnersusers` WHERE userid='{0}' limit 1;", OperatorID.Trim())
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    If dr.Read() Then
                        dtSM.Rows(counter).BeginEdit()
                        dtSM.Rows(counter)(10) = UCase(If(Not IsDBNull(dr.Item("operator")), Trim(dr.Item("operator")), OperatorID))
                        dtSM.Rows(counter).EndEdit()
                        dtSM.AcceptChanges()
                    End If
                    dr.Close()
                End Using
                _dt1.Merge(dtSM)
                counter = counter + 1
            Next
            dtable1.Clear()
            dtable1.Merge(_dt1)
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " GetSMOperator")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Contact Admin Support")
        End Try
    End Sub

    'get express Load operator and branch
    Private Sub GetLoadExpressOperatorAndBranch(ByVal dtExpress As DataTable)
        Dim OperatorID As String = String.Empty
        Dim zcode1 As String = String.Empty
        Dim branch As String = String.Empty
        Dim counter As Integer = 0
        Try
            For Each row As DataRow In dtExpress.Rows
                OperatorID = row.Item("Operator")
                zcode1 = row.Item("zcode")
                branch = row.Item("Branch")
                Con.OpenCon("KPUsers")
                Using Con.GetCon()
                    strquery = String.Format("SELECT bu.fullname AS operator,b.branchname,b.zonecode FROM kpusers.sysuseraccounts sys INNER JOIN kpusers.branches b ON IF(isreliever=1,b.branchcode=sys.tempbranchcode AND b.zonecode=sys.tempzonecode,b.branchcode=sys.branchcode AND b.zonecode=sys.zonecode) INNER JOIN kpusers.branchusers bu ON bu.resourceid=sys.resourceid WHERE sys.userlogin= '{0}'  LIMIT 1 ;", OperatorID)
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    If dr.HasRows() Then
                        dr.Read()
                        If (usertype = "IAD" And drpBranchName.Text = UCase(Trim(dr.Item("branchname"))) And UCase(Trim(dr.Item("zonecode"))) = zCode) Or usertype = "NOTIAD" Then
                            If dr.HasRows() Then
                                dtExpress.Rows(counter).BeginEdit()
                                dtExpress.Rows(counter)("Operator") = UCase(Trim(dr.Item("operator")))
                                dtExpress.Rows(counter)("Branch") = UCase(Trim(dr.Item("branchname")))
                                dtExpress.Rows(counter).EndEdit()
                            End If
                        Else
                            dtExpress.Rows(counter).BeginEdit()
                            dtExpress.Rows(counter).Delete()
                            'dtExpress.AcceptChanges()
                        End If
                    Else
                        dtExpress.Rows(counter).BeginEdit()
                        dtExpress.Rows(counter).Delete()
                        'dtExpress.AcceptChanges()
                    End If
                    dr.Close()
                End Using
                counter = counter + 1
            Next
            dtExpress.AcceptChanges()
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " GetLoadExpressOperatorAndBranch")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Contact Admin Support")
        End Try
    End Sub

    'LOAD REPORT
    Private Sub loadwalletreport(ByVal _transtype As String)
        Dim ReportName As String = String.Empty
        Dim ReportLocation As String = String.Empty
        Dim _reportname As String = String.Empty

        If _transtype = "WalletLoading" Then
            _reportname = "Wallet Loading"
        ElseIf _transtype = "WalletSendout" Then
            _reportname = "Wallet Sendout"
        ElseIf _transtype = "WalletPayout" Then
            _reportname = "Wallet Payout"
        ElseIf _transtype = "WalletKPPayout" Then
            _reportname = "Wallet Sendout To KP Payout"
        ElseIf _transtype = "WalletCancelSendout" Then
            _reportname = "Wallet Cancel Sendout"
        ElseIf _transtype = "WalletCancelPayout" Then
            _reportname = "Wallet Cancel Payout"
        ElseIf _transtype = "WalletAmmendment" Then
            _reportname = "Wallet Ammendment"
        ElseIf _transtype = "WalletUnclaimed" Then
            _reportname = "Wallet Unclaimed"
        ElseIf _transtype = "WalletCashout" Then
            _reportname = "Wallet Cashout"
        ElseIf _transtype = "WalletBillspayment" Then
            _reportname = "Wallet To Billspayment"
        ElseIf _transtype = "WalletCustomerBalance" Then
            _reportname = "Wallet Customer Balanced"
        ElseIf _transtype = "WalletKPSendout" Then
            _reportname = "Wallet KP Sendout"
        ElseIf _transtype = "WalletKPSendout" Then
            _reportname = "Wallet KP Sendout"
        ElseIf _transtype = "WalletTransHistory" Then
            _reportname = "Wallet Transaction History"
            ' express summary report
        ElseIf _transtype = "ExpressSummary" Then
            _reportname = "ML Express Summary"

            ' express eload report
        ElseIf _transtype = "ExpressEload" Then
            _reportname = "ML Express Eload"

            'wallet registration
        ElseIf _transtype = "WalletRegistrationSummary" Then
            _reportname = "Wallet Registration"

        ElseIf _transtype = "WalletAccountSummary" Then
            _reportname = "Wallet Account"

            'wallet security
        ElseIf _transtype = "WalletTransferFromBank" Then
            _reportname = "Wallet Transfer from Bank"
            'batchUpload
        ElseIf _transtype = "BatchUpload" Then
            _reportname = "Batch Upload"
            'Domestic Sendout to Wallet Payout
        ElseIf _transtype = "DomSOWalPO" Then
            _reportname = "DomesticSO to WalletPO"

            'ML Wallet Return to Sender
        ElseIf _transtype = "MLWalletRTS" Then
            _reportname = "ML Wallet Return to Sender"

        ElseIf _transtype = "GlobalSoWalletPO" Then
            _reportname = "GlobalSoWalletPO"

        ElseIf _transtype = "WesterUnionRefund" Then
            _reportname = "Wester Union Refund"

            'ML Express Cancelled Billspayment Report
        ElseIf _transtype = "Cancelled-SendoutBPX" Then
            _reportname = "ML Express Cancelled Billspayment"

            'ML Wallet Cancelled Billspayment Report
        ElseIf _transtype = "Cancelled-SendoutBPW" Then
            _reportname = "ML Wallet Cancelled Billspayment"

        ElseIf _transtype = "WalletUserSummary" Then
            _reportname = "ML Wallet Users Transaction Summary"
        ElseIf _transtype = "WalletUsersEndingBalanceSummary" Then
            _reportname = "Wallet Users Ending Balance Summary"

        ElseIf _transtype = "MLWalletBatchUpload" Then
            _reportname = "ML Wallet BatchUpload"

        ElseIf _transtype = "WesterUnionPayment" Then
            _reportname = "Wester Union Payment"

        ElseIf _transtype = "MLWalletLoadingAdjustment" Then
            _reportname = "Wallet Loading Adjustment"
        ElseIf _transtype = "SmartPromo" Then
            _reportname = "ML Wallet: My Extra Credit ka Promo(Smart & TNT)"
        End If


        Try
            emailadd = Session("emailaddress")

            If drpPeriod.Text = 1 Or _monthnoofdays = 1 Then
                If _monthnoofdays = 1 Then
                    ReportName = String.Format("{0}-Daily-Report-{1:MMMM-dd-yyyy}", _transtype, Convert.ToDateTime(txtdateFrom.Text))
                Else
                    If _transtype = "WalletSeccomTransaction" Then
                        ReportName = String.Format("ML Wallet Transation Report {0:MM/dd/yyyy}", Convert.ToDateTime(txtDate.Text))
                    Else
                        ReportName = String.Format("{0}-Daily-Report-{1:MMMM-dd-yyyy}", _transtype, Convert.ToDateTime(txtDate.Text))
                    End If
                End If
                _rpttitle = String.Format("Daily {0} Transaction Report", _reportname)
            ElseIf drpPeriod.Text = 2 Then
                If _transtype = "WalletCustomerListSeccom" Then
                    ReportName = String.Format("ML Wallet Customer List Report {1:MM/dd/yyyy}", _transtype, Convert.ToDateTime(txtDate.Text))
                ElseIf _transtype = "WalletSeccomTransaction" Then
                    ReportName = String.Format("ML Wallet Transation Report {0} {1}", MonthName(drpMonth.Text), drpYear.Text)
                Else
                    ReportName = String.Format("{0}-Monthly-Report-{1}-{2}", _transtype, MonthName(drpMonth.Text), drpYear.Text)
                End If
                _rpttitle = String.Format("Monthly {0} Transaction Report", _reportname)
            ElseIf drpPeriod.Text = 3 Or _monthnoofdays > 1 Then
                If drpPartnerAccountlist.Text = "-Select-" Then
                    If _transtype = "WalletSeccomTransaction" Then
                        ReportName = String.Format("ML Wallet Transation Report {0:MM/dd/yyyy} to {1:MM/dd/yyyy}", Convert.ToDateTime(txtdateFrom.Text), Convert.ToDateTime(txtdateTo.Text))
                    Else
                        ReportName = String.Format("{0}-Range-Summary-Report-{1}-{2}", _transtype, MonthName(drpMonth.Text), drpYear.Text)
                        _rpttitle = _reportname + " Summary Report"
                    End If
                Else
                    ReportName = String.Format("{0}-Range-Report-{1:MMMM-dd-yyyy}-to-{2:MMMM-dd-yyyy}", _transtype, Convert.ToDateTime(txtdateFrom.Text), Convert.ToDateTime(txtdateTo.Text))
                    _rpttitle = _reportname + " Transaction Report"
                End If
            End If

            If drpPeriod.Text = 2 Or drpPeriod.Text = 3 Then
                If emailadd <> String.Empty Then
                    Try
                        ReportLocation = String.Format("{0}Reports\{1}Report.rpt", AppDomain.CurrentDomain.BaseDirectory, _transtype)
                        Rpt.Load(ReportLocation)
                        Rpt.SetDataSource(CType(dtmerger, DataTable))
                        getparameters()
                        'System.Net.ServicePointManager.ServerCertificateValidationCallback = New RemoteCertificateValidationCallback(Function() True)
                        Try
                            Dim data As String = String.Format("{0} .pdf", ReportName)
                            sendmail(emailadd, Rpt, data)
                        Catch ex As Exception
                            kplog.Error(ex.ToString())
                            'GetMessage(ex.ToString)
                            GetMessage("Please Call Admin Support")

                        End Try
                        'send.sendMail("harveyesparcia@gmail.com", dtFSDMonthlyPOFin)
                    Catch ex As Exception
                        kplog.Error(ex.ToString())
                        GetMessage("Failed to send mail!")
                        Response.Redirect("MainForm.aspx")
                    End Try
                Else
                    GoTo generated
                End If
            End If
generated:
            If rb.Text = "PDFF" Then 'PDF FILE
                ReportLocation = String.Format("{0}Reports\{1}Report.rpt", AppDomain.CurrentDomain.BaseDirectory, _transtype)
            Else 'EXCEL FILE
                ReportLocation = String.Format("{0}Reports\{1}ReportExcel.rpt", AppDomain.CurrentDomain.BaseDirectory, _transtype)
            End If
            Rpt.Load(ReportLocation)
            Rpt.Refresh()
            Rpt.SetDataSource(CType(dtmerger, DataTable))
            getwalletparameters()
            If rb.Text = "PDFF" Then 'PDF FILE
                Rpt.ExportToHttpResponse(ExportFormatType.PortableDocFormat, Response, True, ReportName)
            Else 'EXCEL FILE
                Rpt.ExportToHttpResponse(ExportFormatType.ExcelRecord, Response, True, ReportName)
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " loadwalletreport")
            'GetMessage(ex.ToString())
            GetMessage("Please Contact Admin Support")
        End Try
    End Sub
    Private Sub loadreport(ByVal _transtype As String)
        Dim ReportName As String = String.Empty
        Dim ReportLocation As String = String.Empty
        Dim _reportname As String = String.Empty

        If _transtype = "Cancelled-Sendout" Then
            _reportname = "Cancelled Sendout"
        ElseIf _transtype = "Cancelled-Payout" Then
            _reportname = "Cancelled Payout"
        ElseIf _transtype = "Return-to-Sender" Then
            _reportname = "Return To Sender"
        ElseIf _transtype = "ExpressPayout" Then
            _reportname = "ML Express Payout"
        ElseIf _transtype = "ExpressWalletLoading" Then
            _reportname = "ML Express Wallet Loading Daily"
        ElseIf _transtype = "ExpressHistory" Then
            _reportname = "ML Express History"
        ElseIf _transtype = "ProfitShare" Then
            _reportname = "Profit Share"
        ElseIf _transtype = "SalesJournal" Then
            _reportname = "Sales Journal"
        ElseIf _transtype = "SOPO" Then
            _reportname = Convert.ToString(drpTransactionTypelist.SelectedItem)
        ElseIf _transtype = "PostAudit" Then
            _reportname = "ML Express Post Audit"
        ElseIf _transtype = "salesMLO" Then
            _reportname = "Sales Report Per Merchant"
        ElseIf _transtype = "ExpressWalletPayout" Then
            _reportname = "Express Wallet Payout"
        ElseIf _transtype = "WalletCorporatePayout" Then
            _reportname = "Wallet Corporate Payout"
        ElseIf _transtype = "DailySettlement" Then
            _reportname = "Daily Settlement"
        ElseIf _transtype = "weeklyStatement" Then
            _reportname = "weekly Statement"
        ElseIf _transtype = "MonthlyStatement" Then
            _reportname = "Monthly Statement"
        ElseIf _transtype = "WeeklySummaryStatement" Then
            _reportname = "Weekly Summary Statement"
        ElseIf _transtype = "MonthlySummaryStatement" Then
            _reportname = "Monthly Summary Statement"
        ElseIf _transtype = "AllPartnersVolume" Then
            _reportname = "All Partners Volume"
        ElseIf _transtype = "WalletBillspayFCManual" Then
            _reportname = "WalletBillspayFCManual"
        ElseIf _transtype = "WalletBillspayFCAuto" Then
            _reportname = "WalletBillspayFCAuto"
        Else
            _reportname = _transtype
        End If

        Try
            emailadd = Session("emailaddress")

            If drpPeriod.Text = 1 Or _monthnoofdays = 1 Then
                If _monthnoofdays = 1 Then
                    If drppartnerid.Text = smaccountid And ReportType = 6 Then
                        ReportName = String.Format("{0}-Daily-Report-{1:MMMM-dd-yyyy}", Convert.ToString(drpTransactionTypelist.SelectedItem), Convert.ToDateTime(txtdateFrom.Text))
                    Else
                        If _transtype = "Paypal" Then
                            ReportName = String.Format("{0} {2} Report {1:MM-dd-yyyy}", drpPartnerAccountlist.Text, Convert.ToDateTime(txtdateFrom.Text), drpTransactionTypelist.SelectedItem)
                        Else
                            ReportName = String.Format("{0}-Daily-Report-{1:MMMM-dd-yyyy}", _transtype, Convert.ToDateTime(txtdateFrom.Text))
                        End If
                    End If
                Else
                    If drppartnerid.Text = smaccountid And partnername <> String.Empty Then
                        ReportName = String.Format("{0}-Daily-Report-{1:MMMM-dd-yyyy}", Convert.ToString(drpTransactionTypelist.SelectedItem), Convert.ToDateTime(txtDate.Text))
                    Else
                        If _transtype = "Paypal" Then
                            ReportName = String.Format("{0} {2} Report {1:MM-dd-yyyy}", drpPartnerAccountlist.Text, Convert.ToDateTime(txtDate.Text), drpTransactionTypelist.SelectedItem)
                        Else
                            ReportName = String.Format("{0}-Daily-Report-{1:MMMM-dd-yyyy}", _transtype, Convert.ToDateTime(txtDate.Text))
                        End If
                    End If
                End If
                If _transtype = "SOPO" And drppartnerid.Text = smaccountid And ReportType = 6 Then
                    _rpttitle = _reportname
                Else
                    If _transtype = "Paypal" Then
                        _rpttitle = ReportName
                    Else
                        _rpttitle = String.Format("Daily {0} Transaction Report", _reportname)
                    End If
                End If

            ElseIf drpPeriod.Text = 2 Then
                If drpPartnerAccountlist.Text = "-Select-" Then
                    ReportName = String.Format("{0}-Monthly-Summary-Report-{1}-{2}", _transtype, MonthName(drpMonth.Text), drpYear.Text)
                    _rpttitle = String.Format("Monthly {0} Summary Report", _reportname)
                Else
                    If _transtype = "Paypal" Then
                        ReportName = String.Format("{0} {3} Report {1}-{2}", drpPartnerAccountlist.Text, MonthName(drpMonth.Text), drpYear.Text, drpTransactionTypelist.SelectedItem)
                        _rpttitle = ReportName
                    Else
                        ReportName = String.Format("{0}-Monthly-Report-{1}-{2}", _transtype, MonthName(drpMonth.Text), drpYear.Text)
                        If _transtype = "ProfitShare" Then
                            _rpttitle = String.Format("Monthly {0} Report", _reportname)
                        Else
                            _rpttitle = String.Format("Monthly {0} Transaction Report", _reportname)
                        End If
                    End If
                End If
            ElseIf drpPeriod.Text = 3 Or _monthnoofdays > 1 Then
                If drpPartnerAccountlist.Text = "-Select-" Then
                    ReportName = String.Format("{0}-Range-Summary-Report-{1}-{2}", _transtype, MonthName(drpMonth.Text), drpYear.Text)
                    _rpttitle = _reportname + " Summary Report"
                Else
                    If _transtype = "Paypal" Then
                        ReportName = String.Format("{0} {2} Report {1:MM-dd-yyyy} To {3:MM-dd-yyyy}", drpPartnerAccountlist.Text, Convert.ToDateTime(txtdateFrom.Text), drpTransactionTypelist.SelectedItem, Convert.ToDateTime(txtdateTo.Text))
                    Else
                        ReportName = String.Format("{0}-Range-Report-{1:MMMM-dd-yyyy}-to-{2:MMMM-dd-yyyy}", _transtype, Convert.ToDateTime(txtdateFrom.Text), Convert.ToDateTime(txtdateTo.Text))
                        _rpttitle = _reportname + " Transaction Report"
                    End If
                End If
            End If

            If drpPeriod.Text = 2 Or drpPeriod.Text = 3 Then
                If emailadd <> String.Empty Then
                    Try
                        ReportLocation = String.Format("{0}Reports\{1}Report.rpt", AppDomain.CurrentDomain.BaseDirectory, _transtype)
                        Rpt.Load(ReportLocation)
                        Rpt.SetDataSource(CType(dtmerger, DataTable))
                        getparameters()
                        'System.Net.ServicePointManager.ServerCertificateValidationCallback = New RemoteCertificateValidationCallback(Function() True)
                        Try
                            Dim data As String = String.Format("{0} .pdf", ReportName)
                            sendmail(emailadd, Rpt, data)
                        Catch ex As Exception
                            kplog.Error(ex.ToString())
                            'GetMessage(ex.ToString)
                            GetMessage("Please Call Admin Support")

                        End Try
                        'send.sendMail("harveyesparcia@gmail.com", dtFSDMonthlyPOFin)
                    Catch ex As Exception
                        kplog.Error(ex.ToString())
                        GetMessage("Failed to send mail!")
                        Response.Redirect("MainForm.aspx")
                    End Try
                Else
                    GoTo generated
                End If
            End If
generated:
            If rb.Text = "PDFF" Then 'PDF FILE
                If (sotxnreftype = "WSC") And (_transtype = "Sendout" Or _transtype = "Claimed") Then
                    If Session("roles") = "KP-HKDTELLER" Or Session("roles") = "KP-HKDPARTNERTELLER" Then
                        ReportLocation = String.Format("{0}Reports\{1}HKDCommissionReport.rpt", AppDomain.CurrentDomain.BaseDirectory, _transtype) 'For WSC kABAYAN
                    Else
                        ReportLocation = String.Format("{0}Reports\{1}CommissionReport.rpt", AppDomain.CurrentDomain.BaseDirectory, _transtype) 'For WSC Payout commission Report
                    End If
                ElseIf ReportType = 5 And (_transtype = "Sendout" Or _transtype = "Claimed" Or _transtype = "ExpressPayout") Then
                    If _transtype = "Sendout" Then
                        ReportLocation = AppDomain.CurrentDomain.BaseDirectory + "Reports\ExpressSOCommissionReport.rpt"
                        'ElseIf _transtype = "Claimed" Then
                        '    ReportLocation = AppDomain.CurrentDomain.BaseDirectory + "Reports\ExpressPOCommissionReport.rpt"
                    ElseIf _transtype = "ExpressPayout" Or _transtype = "Claimed" Then
                        ReportLocation = AppDomain.CurrentDomain.BaseDirectory + "Reports\ExpressPayoutCommissionReport.rpt"
                    End If
                ElseIf drppartnerid.Text = smaccountid And ReportType = 6 And partnername <> Nothing And (drpTransactionTypelist.SelectedIndex = 1 Or drpTransactionTypelist.SelectedIndex = 2) Then
                    ReportLocation = String.Format("{0}Reports\SM{1}Report.rpt", AppDomain.CurrentDomain.BaseDirectory, _transtype) 'For SM
                Else
                    If drpTransactionTypelist.SelectedIndex = 13 Or drpTransactionTypelist.SelectedIndex = 14 Or drpTransactionTypelist.SelectedIndex = 15 Then
                        ReportLocation = String.Format("{0}Reports\SM{1}Report.rpt", AppDomain.CurrentDomain.BaseDirectory, _transtype) 'For SM
                    ElseIf drpTransactionTypelist.SelectedIndex = 85 Then
                        ReportLocation = String.Format("{0}Reports\{1}Report.rpt", AppDomain.CurrentDomain.BaseDirectory, _transtype) 'For All Partners
                    Else
                        If ReportType = 1 And drpTransactionTypelist.SelectedIndex = 2 Then
                            ReportLocation = String.Format("{0}Reports\{1}APIReport.rpt", AppDomain.CurrentDomain.BaseDirectory, _transtype)
                        Else
                            ReportLocation = String.Format("{0}Reports\{1}Report.rpt", AppDomain.CurrentDomain.BaseDirectory, _transtype)
                        End If
                    End If
                End If
            Else 'EXCEL FILE
                If (sotxnreftype = "WSC") And (_transtype = "Sendout" Or _transtype = "Claimed") Then
                    If Session("roles") = "KP-HKDTELLER" Or Session("roles") = "KP-HKDPARTNERTELLER" Then
                        ReportLocation = String.Format("{0}Reports\{1}HKDCommissionReportExcel.rpt", AppDomain.CurrentDomain.BaseDirectory, _transtype) 'For WSC kABAYAN
                    Else
                        ReportLocation = String.Format("{0}Reports\{1}CommissionReportExcel.rpt", AppDomain.CurrentDomain.BaseDirectory, _transtype) 'For WSC Payout commission Report
                    End If
                ElseIf (ReportType = 5) And (_transtype = "Sendout" Or _transtype = "Claimed" Or _transtype = "ExpressPayout") Then
                    If _transtype = "Sendout" Then
                        ReportLocation = AppDomain.CurrentDomain.BaseDirectory + "Reports\ExpressSOCommissionReport.rpt"
                        'ElseIf _transtype = "Claimed" Then
                        '    ReportLocation = AppDomain.CurrentDomain.BaseDirectory + "Reports\ExpressPOCommissionReportExcel.rpt"
                    ElseIf _transtype = "ExpressPayout" Or _transtype = "Claimed" Then
                        ReportLocation = AppDomain.CurrentDomain.BaseDirectory + "Reports\ExpressPayoutCommissionReportExcel.rpt"
                    End If
                ElseIf drppartnerid.Text = smaccountid And ReportType = 6 And partnername <> Nothing And (drpTransactionTypelist.SelectedIndex = 1 Or drpTransactionTypelist.SelectedIndex = 2) Then
                    ReportLocation = String.Format("{0}Reports\SM{1}ReportExcel.rpt", AppDomain.CurrentDomain.BaseDirectory, _transtype) 'For SM
                Else
                    If drpTransactionTypelist.SelectedIndex = 13 Or drpTransactionTypelist.SelectedIndex = 14 Or drpTransactionTypelist.SelectedIndex = 15 Then
                        ReportLocation = String.Format("{0}Reports\SM{1}ReportExcel.rpt", AppDomain.CurrentDomain.BaseDirectory, _transtype) 'For SM
                    ElseIf drpTransactionTypelist.SelectedIndex = 85 Then
                        ReportLocation = String.Format("{0}Reports\{1}ReportExcel.rpt", AppDomain.CurrentDomain.BaseDirectory, _transtype) 'For All Partners
                    Else
                        If ReportType = 1 And drpTransactionTypelist.SelectedIndex = 2 Then
                            ReportLocation = String.Format("{0}Reports\{1}APIReportExcel.rpt", AppDomain.CurrentDomain.BaseDirectory, _transtype)
                        Else
                            ReportLocation = String.Format("{0}Reports\{1}ReportExcel.rpt", AppDomain.CurrentDomain.BaseDirectory, _transtype)
                        End If
                    End If
                End If
            End If
            Rpt.Load(ReportLocation)
            Rpt.Refresh()
            Rpt.SetDataSource(CType(dtmerger, DataTable))
            Select Case drpTransactionTypelist.SelectedIndex
                Case 13 To 29
                    getsmparameters()
                Case Else
                    getparameters()
            End Select
            If rb.Text = "PDFF" Then 'PDF FILE
                Rpt.ExportToHttpResponse(ExportFormatType.PortableDocFormat, Response, True, ReportName)
            Else 'EXCEL FILE
                Rpt.ExportToHttpResponse(ExportFormatType.ExcelRecord, Response, True, ReportName)
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " loadreport")
            GetMessage(ex.ToString())
            'GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    'Load Sm Report
    Private Sub loadsmreport(ByVal _transtype As Integer)
        Dim ReportName As String = String.Empty
        Dim ReportLocation As String = String.Empty
        Dim _reportname As String = String.Empty
        Dim rptname As String = String.Empty
        Try
            emailadd = Session("emailaddress")


            Select Case _transtype
                Case 20
                    rptname = "SMDTRSend"
                Case 21
                    rptname = "SMMLReceiveDTR"
                Case 22
                    rptname = "SMSTRSend"
                Case 23
                    rptname = "SMMLSRReceive"
                Case 24
                    rptname = "SMMLPSSend"
                Case 25
                    rptname = "SMMLPSReceive"
                Case 26
                    rptname = "MLSMSend"
                Case 27
                    rptname = "MLSMPayout"
                Case 28
                    rptname = "POS"
                Case 30
                    rptname = "SMSummary"
                Case 31
                    rptname = "POSSalesBook"
                Case 32
                    rptname = "XReading"
                Case 33
                    rptname = "ORRegistered"
                Case 34
                    rptname = "TransactionLogs"
                Case 50
                    rptname = "ZReading"
                Case 51
                    rptname = "ARRegistered"
                Case 54
                    rptname = "ARCancelledRegistered"
            End Select

            If drpPeriod.Text = 1 Or _monthnoofdays = 1 Then
                If _monthnoofdays = 1 Then
                    ReportName = String.Format("{0}-Daily-Report-{1:MMMM-dd-yyyy}", rptname, Convert.ToDateTime(txtdateFrom.Text))
                Else
                    ReportName = String.Format("{0}-Daily-Report-{1:MMMM-dd-yyyy}", rptname, Convert.ToDateTime(txtDate.Text))
                End If
                _rpttitle = String.Format("Daily {0} ", drpTransactionTypelist.SelectedItem.ToString())
            ElseIf drpPeriod.Text = 2 Then
                ReportName = String.Format("{0}-Monthly-Summary-Report-{1}-{2}", rptname, MonthName(drpMonth.Text), drpYear.Text)
                _rpttitle = String.Format("Monthly {0} ", drpTransactionTypelist.SelectedItem.ToString())
            ElseIf drpPeriod.Text = 3 Or _monthnoofdays > 1 Then
                ReportName = String.Format("{0}-Range-Summary-Report-{1}-{2}", rptname, MonthName(drpMonth.Text), drpYear.Text)
                _rpttitle = drpTransactionTypelist.SelectedItem.ToString()
            End If

            If drpPeriod.Text = 2 Or drpPeriod.Text = 3 Then
                If emailadd <> String.Empty Then
                    Try
                        ReportLocation = String.Format("{0}Reports\{1}Report.rpt", AppDomain.CurrentDomain.BaseDirectory, rptname)
                        Rpt.Load(ReportLocation)
                        Rpt.SetDataSource(CType(dtmerger, DataTable))
                        getsmparameters()
                        'System.Net.ServicePointManager.ServerCertificateValidationCallback = New RemoteCertificateValidationCallback(Function() True)
                        Try
                            Dim data As String = String.Format("{0} .pdf", ReportName)
                            sendmail(emailadd, Rpt, data)
                        Catch ex As Exception
                            kplog.Error(ex.ToString())
                            'GetMessage(ex.ToString)
                            GetMessage("Please Call Admin Support")

                        End Try
                        'send.sendMail("harveyesparcia@gmail.com", dtFSDMonthlyPOFin)
                    Catch ex As Exception
                        kplog.Error(ex.ToString())
                        GetMessage("Failed to send mail!")
                        Response.Redirect("MainForm.aspx")
                    End Try
                Else
                    GoTo generated
                End If
            End If
generated:
            ReportLocation = String.Format("{0}Reports\{1}Report.rpt", AppDomain.CurrentDomain.BaseDirectory, rptname) 'For WSC Payout commission Report
            Rpt.Load(ReportLocation)
            Rpt.Refresh()
            Rpt.SetDataSource(CType(dtmerger, DataTable))
            getsmparameters()
            If rb.Text = "PDFF" Then 'PDF FILE
                Rpt.ExportToHttpResponse(ExportFormatType.PortableDocFormat, Response, True, ReportName)
            Else 'EXCEL FILE
                Rpt.ExportToHttpResponse(ExportFormatType.ExcelRecord, Response, True, ReportName)
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " loadsmreport")
            'GetMessage(ex.ToString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    'SEND MAIL
    Public Sub sendmail(ByVal emailadd As String, ByVal rpt As ReportDocument, ByVal Reportname As String)
        Try
            Dim email As String() = emailadd.ToString.Split(",")
            Dim Recipient As String() = email
            Dim username As String = ConfigurationManager.AppSettings("Username")
            Dim MailMessage As New MailMessage(username, Recipient(0))
            Dim ctr As Short = 0
            For Each e_add As String In Recipient
                If ctr > 0 Then
                    MailMessage.To.Add(e_add)
                Else
                    ctr += 1
                End If
            Next
            MailMessage.Subject = "Reports"
            Dim mBody As New StringBuilder
            mBody.Append("<html>")
            mBody.Append("<head>")
            mBody.Append("</head>")
            mBody.Append("</br>")
            mBody.Append("<body>")
            mBody.Append("<div id='wrapper' style='width:600px; height:400px; margin-top: 20;padding: 20;background:#FFFFF;border: 0px solid gray;overflow:auto'>")
            mBody.Append("<font face='arial' align='left'>")
            mBody.Append("<font size='2px'>")
            mBody.Append("<div style ='margin: 0 auto auto 3px;padding: 15px 1px 3px 2px; font-San Serif;font-size:12px;'>")
            mBody.Append("<div style ='text-align left'><font font-size:12px>Dear Sir/Madam:</font></div>")
            mBody.Append("<br></br>")
            mBody.Append("</div>")
            mBody.Append("<div>")
            mBody.Append("<p class='normal' style='text-indent: 0px;text-align:left'>Please see attached file for Corporate Reports.</p>")
            mBody.Append("</div>")
            mBody.Append("<div style ='width 400px;padding 5;border 1px solid gray;margin-left:0px;'>")
            mBody.Append("<br></br>")
            mBody.Append("<div style='text-align:left'>Thank you.</div>")
            mBody.Append("<br></br>")
            mBody.Append("</div>")
            mBody.Append("</div>")
            mBody.Append("</div>")
            mBody.Append("</font>")
            mBody.Append("</div>")
            mBody.Append("</body>")
            mBody.Append("</html>")
            MailMessage.Body = mBody.ToString
            MailMessage.IsBodyHtml = True
            Dim emailClient As New SmtpClient
            Dim Userpass As String = ConfigurationManager.AppSettings("Userpassword")
            Dim IP_Address As String = ConfigurationManager.AppSettings("IP_address")
            Dim auth As New System.Net.NetworkCredential(username, Userpass)
            emailClient.Host = IP_Address
            emailClient.UseDefaultCredentials = True
            emailClient.Credentials = auth
            MailMessage.Attachments.Add(New Attachment(rpt.ExportToStream(ExportFormatType.PortableDocFormat), Reportname))
            emailClient.Send(MailMessage)
        Catch ex As Exception
            kplog.Error(ex.ToString() + " sendmail")
            'GetMessage(ex.ToString())
            GetMessage("Please Call Admin Support")

            Response.Redirect("MainForm.aspx")
        End Try
    End Sub
    'GET PARAMETERS FOR RPT
    Public Sub getwalletparameters()
        Try
            If drpPeriod.Text = 1 Or _monthnoofdays = 1 Then
                If _monthnoofdays = 1 Then
                    Rpt.SetParameterValue(0, UCase(Convert.ToDateTime(txtdateFrom.Text).ToString("MMMM dd, yyyy")))
                Else
                    Rpt.SetParameterValue(0, UCase(Convert.ToDateTime(txtDate.Text).ToString("MMMM dd, yyyy")))
                End If
            ElseIf drpPeriod.Text = 2 Then
                Rpt.SetParameterValue(0, UCase(String.Concat(drpMonth.SelectedItem.Text, "-", drpYear.SelectedItem.Text)))
            ElseIf drpPeriod.Text = 3 Or _monthnoofdays > 1 Then
                Rpt.SetParameterValue(0, UCase(String.Format("{0:MMMM dd, yyyy} To {1:MMMM dd, yyyy}", Convert.ToDateTime(txtdateFrom.Text), Convert.ToDateTime(txtdateTo.Text))))
            End If
            Rpt.SetParameterValue(2, Session("UserFullname").ToString.ToUpper())
            Rpt.SetParameterValue(3, DateTime.Now.ToString("yyyy-MM-dd hh:mm:ss"))
            If drpglobe.Text <> "-Select-" And partnername <> Nothing Then
                Rpt.SetParameterValue(1, drpglobe.Text)
            Else
                If drpPartnerAccountlist.Text = "-Select-" Then
                    Rpt.SetParameterValue(1, "ALL PARTNERS")
                Else
                    Rpt.SetParameterValue(1, drpPartnerAccountlist.SelectedItem.Text.Trim())
                End If

            End If
            Rpt.SetParameterValue(4, _rpttitle)
            If drpTransactionTypelist.SelectedIndex = "55" Then
                Rpt.SetParameterValue(5, Session("beginningbal").ToString())

            End If
            If _usrinfo.ZoneCode = 1 Then
                zones = "VISMIN"
            ElseIf _usrinfo.ZoneCode = 2 Then
                zones = "LNCR"
            ElseIf _usrinfo.ZoneCode = 3 Then
                zones = "LOS ANGELES"
            ElseIf _usrinfo.ZoneCode = 4 Then
                zones = "SHOWROOM"
            ElseIf _usrinfo.ZoneCode = 5 Then
                zones = "VISAYAS"
            ElseIf _usrinfo.ZoneCode = 6 Then
                zones = "MINDANAO"
            ElseIf _usrinfo.ZoneCode = 7 Then
                zones = "LUZON"
            ElseIf _usrinfo.ZoneCode = 8 Then
                zones = "NCR"
            Else
                zones = ""
            End If
            If drpTransactionTypelist.SelectedIndex = "69" Then
                Rpt.SetParameterValue(5, zones.ToString())

            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " getwalletparameters")
            'GetMessage(ex.ToString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    Public Sub getparameters()
        Try
            If drpPeriod.Text = 1 Or _monthnoofdays = 1 Then
                If _monthnoofdays = 1 Then
                    Rpt.SetParameterValue(0, UCase(Convert.ToDateTime(txtdateFrom.Text).ToString("MMMM dd, yyyy")))
                Else
                    Rpt.SetParameterValue(0, UCase(Convert.ToDateTime(txtDate.Text).ToString("MMMM dd, yyyy")))
		kplog.INFO("set1")
                End If
            ElseIf drpPeriod.Text = 2 Then
                If drppartnerid.Text = smaccountid And (drpTransactionTypelist.SelectedValue = "13" Or drpTransactionTypelist.SelectedValue = "14" Or drpTransactionTypelist.SelectedValue = "15") Then
                    Rpt.SetParameterValue(0, UCase(smperiod))
                ElseIf drpTransactionTypelist.SelectedIndex = 74 Then
                    Rpt.SetParameterValue(0, drpMonth.SelectedItem.Text + " " + drpYear.Text)
                Else
                    Rpt.SetParameterValue(0, UCase(String.Concat(drpMonth.SelectedItem.Text, "-", drpYear.SelectedItem.Text)))
                End If
            ElseIf drpPeriod.Text = 3 Or _monthnoofdays > 1 Then
                If (drpTransactionTypelist.SelectedIndex = 17 Or drpTransactionTypelist.SelectedIndex = 18) Then
                    Rpt.SetParameterValue(0, String.Format("From: {0:MMMM dd, yyyy} To: {1:MMMM dd, yyyy}", Convert.ToDateTime(txtdateFrom.Text), Convert.ToDateTime(txtdateTo.Text)))
                Else
                    Rpt.SetParameterValue(0, UCase(String.Format("{0:MMMM dd, yyyy} To {1:MMMM dd, yyyy}", Convert.ToDateTime(txtdateFrom.Text), Convert.ToDateTime(txtdateTo.Text))))
                End If
            End If

            If partnername <> "" And drppartnerid.Text = smaccountid And ReportType = 6 Then
                Dim smempcode = Nothing
                If Session("subterminalid") <> "" And Session("subterminalid") <> Nothing Then
                    smempcode = " - " + Session("subterminalid")
                End If
                Rpt.SetParameterValue(2, Session("UserName").ToString.ToUpper() + smempcode)
                If drpTransactionTypelist.SelectedIndex = 1 Or drpTransactionTypelist.SelectedIndex = 2 Then
                    Rpt.SetParameterValue(3, Session("UserFullname").ToString.ToUpper())
                Else
                    Rpt.SetParameterValue(3, DateTime.Now.ToString("yyyy-MM-dd hh:mm:ss"))
kplog.INFO("set3 ?")
                End If
                If Session("superviselocationid") <> "" And Session("superviselocationid") <> Nothing Then
                    Dim CCon As New ClsCon
                    CCon.OpenCon("KPWSC")
                    Dim str As String = String.Format("SELECT sublocationdesc from kpadminpartners.ws_Sublocation where subLocationID='{0}' limit 1", Session("superviselocationid"))
                    cmd = New MySqlCommand(str, CCon.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    If dr.Read Then
                        Rpt.SetParameterValue(5, UCase(If(Not IsDBNull(dr.Item("sublocationdesc")), Trim(dr.Item("sublocationdesc")), "-")))
                    Else
                        Rpt.SetParameterValue(5, "")
                    End If
                    dr.Close()
                    CCon.CloseCon()
                Else
                    Rpt.SetParameterValue(5, "")
                End If
                Rpt.SetParameterValue(6, smflag)
            Else
                Rpt.SetParameterValue(2, Session("UserFullname").ToString.ToUpper())
		kplog.INFO("set2 ??")
                Rpt.SetParameterValue(3, DateTime.Now.ToString("yyyy-MM-dd hh:mm:ss"))
		kplog.INFO("set3 ??")
            End If
            If (drpglobe.Text <> "-Select-" And drpglobe.Text <> "") And partnername <> Nothing Then
                Rpt.SetParameterValue(1, drpglobe.Text)
            Else
                If drpPartnerAccountlist.Text = "-Select-" Then
                    Rpt.SetParameterValue(1, "All PARTNERS")
                Else
                    Rpt.SetParameterValue(1, drpPartnerAccountlist.SelectedItem.Text.Trim())
kplog.INFO("set 1 ????")
                End If
            End If
            Rpt.SetParameterValue(4, _rpttitle)
 kplog.INFO("set4")
            If ReportType = 5 And drpTransactionTypelist.SelectedIndex = 12 Then
                Rpt.SetParameterValue(5, Session("begbalance"))
kplog.INFO("set 5")
            End If
            If ReportType = 12 And (drpTransactionTypelist.SelectedIndex = 71 Or drpTransactionTypelist.SelectedIndex = 72) Then
                Rpt.SetParameterValue(5, TextBox1.Text)
               If accountID = globe Then
                    Rpt.SetParameterValue(6, "Sub Biller            :   " + drpglobe.Text)
   		Else
                    Rpt.SetParameterValue(6, drpglobe.Text)
                End If
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " getparameters")
            GetMessage(ex.ToString())
            'GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    Public Sub getsmparameters()
        Try
            If drpPeriod.Text = 1 Or _monthnoofdays = 1 Then
                If _monthnoofdays = 1 Then
                    Rpt.SetParameterValue(0, UCase(Convert.ToDateTime(txtdateFrom.Text).ToString("MMMM dd, yyyy")))
                Else
                    Rpt.SetParameterValue(0, UCase(Convert.ToDateTime(txtDate.Text).ToString("MMMM dd, yyyy")))
                End If
            ElseIf drpPeriod.Text = 2 Then
                Rpt.SetParameterValue(0, UCase(String.Concat(drpMonth.SelectedItem.Text, "-", drpYear.SelectedItem.Text)))
            ElseIf drpPeriod.Text = 3 Or _monthnoofdays > 1 Then
                Rpt.SetParameterValue(0, UCase(String.Format("{0:MMMM dd, yyyy} To {1:MMMM dd, yyyy}", Convert.ToDateTime(txtdateFrom.Text), Convert.ToDateTime(txtdateTo.Text))))
            End If
            If drpglobe.Text <> "-Select-" Then
                Rpt.SetParameterValue(1, drpglobe.Text)
            Else
                Rpt.SetParameterValue(1, drpPartnerAccountlist.SelectedItem.Text.Trim())
            End If
            Rpt.SetParameterValue(2, Session("UserFullname").ToString.ToUpper())
            Rpt.SetParameterValue(3, DateTime.Now.ToString("yyyy-MM-dd hh:mm:ss"))
            Rpt.SetParameterValue(4, drpTransactionTypelist.SelectedItem.ToString())

            If Session("superviselocationid") <> "" And Session("superviselocationid") <> Nothing Then
                Dim CCon As New ClsCon
                CCon.OpenCon("KPWSC")
                Dim str As String = String.Format("SELECT sublocationdesc from kpadminpartners.ws_Sublocation where subLocationID='{0}' limit 1", Session("superviselocationid"))
                cmd = New MySqlCommand(str, CCon.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                If dr.Read Then
                    Rpt.SetParameterValue(5, UCase(If(Not IsDBNull(dr.Item("sublocationdesc")), Trim(dr.Item("sublocationdesc")), "-")))
                Else
                    Rpt.SetParameterValue(5, "")
                End If
                dr.Close()
                CCon.CloseCon()
            Else
                Rpt.SetParameterValue(5, "")
            End If
            Rpt.SetParameterValue(6, smflag)
            If (drpTransactionTypelist.SelectedIndex = 16 Or (drpTransactionTypelist.SelectedIndex >= 31 And drpTransactionTypelist.SelectedIndex <= 34) Or drpTransactionTypelist.SelectedIndex = 50 Or drpTransactionTypelist.SelectedIndex = 51 Or drpTransactionTypelist.SelectedIndex = 54) Then
                Rpt.SetParameterValue(7, drpsubpartnerid.Text)
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " getsmparameters")
            'GetMessage(ex.ToString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub

    '=======================================================BILLSPAYMENT REPORTS=========================================
    'billspay sendout
    Public Sub billspaysendout()
        dtable = billspaydatatable("SO")
        dtable.Clear()
        dtable1 = billspaydatatable("SO")
        dtable1.Clear()
        dtmerger = billspaydatatable("SO")
        dtmerger.Clear()

        Dim zone_code As String = Session("zcode")
        Dim region_code As String = Session("regioncode")
        Dim area_code As String = Session("areacode")
        Dim branch_code As String = Session("branchcode")
        Dim CD_OLD As Boolean = False
        Dim TPCdirect As Boolean = False


        Dim tableCounter As Integer = 0
        Try

            Dim flag As String = ""
            Dim _datefrom As Date
            Dim _dateto As Date = txtdateTo.Text
            Dim _datef As String
            Dim _datet As String = Convert.ToDateTime(_dateto).ToString("yyyy-MM-dd")

            If drppartnerid.Text = psslaiaccountid And txtdateFrom.Text = txtdateTo.Text And partnername <> Nothing Then
                Dim monday = Convert.ToDateTime(txtdateFrom.Text).DayOfWeek.ToString()
                If monday = "Monday" Then
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text).AddDays(-3)
                    _datef = Convert.ToDateTime(_datefrom).ToString("yyyy-MM-dd")
                Else
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text).AddDays(-1)
                    _datef = Convert.ToDateTime(_datefrom).ToString("yyyy-MM-dd")
                End If
            Else
                _datefrom = txtdateFrom.Text
                _datef = Convert.ToDateTime(_datefrom).ToString("yyyy-MM-dd")
            End If

            For i As Integer = 1 To _monthnoofdays
                _day = Convert.ToDateTime(_datefrom).ToString("MM")
                _year = Convert.ToDateTime(_datefrom).ToString("yyyy")
                _Dateme = Convert.ToDateTime(_datefrom).ToString("yyyy-MM-dd")
                tableCounter += 1
                Dim _date As String = Convert.ToDateTime(_datefrom).ToString("yyyy-MM-dd")
                If drpPartnerAccountlist.SelectedValue = "GILLAMAC" Then
                    If (Session("roles") = "KP-IAD" Or Session("roles") = "KP-RAM") Then
                        If drpRegion.SelectedIndex <> 0 And drpArea.SelectedIndex = 0 And drpBranchName.SelectedIndex = 0 Then
                            strquery = String.Format("SELECT DATE_FORMAT(gp.TransDate, '%Y-%m-%d %r') AS DATETIME, gp.Controlno, gp.Kptn AS ReferenceNo, gp.partnerinvoiceno AS AccountNo, CONCAT(gp.partnerAcctFName,' ',gp.partnerAcctMName,' ',gp.partnerAcctLName) AS AccountName, gp.AmountPaid, gp.AmountCharge AS CCharge, '0.0' AS PCharge, gp.BranchCode AS MLOutlet, gp.Zonecode AS MLZoneCode, gp.OperatorID AS Operator, CONCAT(gp.PayorFName,' ',gp.PayorMName,' ',gp.PayorLName) AS Payer, gp.payorAddr AS Address, gp.PayorContactNo AS ContactNo, gp.OtherDetails, gp.RemoteBranchCode AS RemoteId, gp.RemoteZoneCode, gp.RemoteOperatorID AS RemoteOperator, NULL AS CancelReason, 'S' AS CDType FROM kpbillspayment.gillamacspayment gp INNER JOIN kppartnerstransactions.branches b ON IF(gp.RemoteBranchCode = '', gp.branchcode = b.branchcode AND gp.zonecode = b.zonecode, gp.RemoteBranchCode = b.branchcode AND gp.RemoteZoneCode = b.zonecode) WHERE DATE(TransDate)='{0}' AND accountid='{1}' AND (isRFCled IS NULL OR isRFCled = 0) AND IF(gp.RemoteBranchCode = '', gp.ZoneCode = '{2}', gp.RemoteZoneCode = '{2}') AND b.regioncode = '{3}' UNION ALL SELECT DATE_FORMAT(gp.transdate, '%Y-%m-%d %r') AS DATETIME, gp.ControlNo, gp.kptn AS ReferenceNo, gp.partnerinvoiceno AS AccountNo, CONCAT(gp.partnerAcctFName,' ',gp.partnerAcctMName,' ',gp.partnerAcctLName) AS AccountName, gp.AmountPaid, gp.AmountCharge AS CCharge, '0.0' AS PCharge, gp.BranchCode AS MLOutlet, gp.Zonecode AS MLZoneCode, gp.OperatorID AS Operator, CONCAT(gp.PayorFName,' ',gp.PayorMName,' ',gp.PayorLName) AS Payer, gp.payorAddr AS Address, gp.payorContactNo AS ContactNo, gp.OtherDetails, gp.RemoteBranchCode AS RemoteId, gp.RemoteZoneCode, gp.RemoteOperatorID AS RemoteOperator, 'Cancel' AS CancelReason, 'S' AS CDType FROM kpbillspayment.gillamacspayment gp INNER JOIN kpbillspayment.gillamacspaymentcancel gpc ON gp.kptn = gpc.kptn AND gp.referenceno = gpc.referenceno INNER JOIN kppartnerstransactions.branches b ON IF(gp.RemoteBranchCode = '', gp.branchcode = b.branchcode AND gp.zonecode = b.zonecode, gp.RemoteBranchCode = b.branchcode AND gp.RemoteZoneCode = b.zonecode) WHERE DATE(TransDate)='{4}' AND accountid='{5}' AND gp.isRFCled = 1 AND IF(gp.RemoteBranchCode = '', gp.ZoneCode = '{2}', gp.RemoteZoneCode = '{2}') AND b.regioncode = '{3}' ORDER BY DATE_FORMAT(DATETIME, '%k%i%s') ASC", _date, partnerID, zone_code, region_code, _year, partnerID)
                        ElseIf drpRegion.SelectedIndex <> 0 And drpArea.SelectedIndex <> 0 And drpBranchName.SelectedIndex = 0 Then
                            strquery = String.Format("SELECT DATE_FORMAT(gp.TransDate, '%Y-%m-%d %r') AS DATETIME, gp.Controlno, gp.Kptn AS ReferenceNo, gp.partnerinvoiceno AS AccountNo, CONCAT(gp.partnerAcctFName,' ',gp.partnerAcctMName,' ',gp.partnerAcctLName) AS AccountName, gp.AmountPaid, gp.AmountCharge AS CCharge, '0.0' AS PCharge, gp.BranchCode AS MLOutlet, gp.Zonecode AS MLZoneCode, gp.OperatorID AS Operator, CONCAT(gp.PayorFName,' ',gp.PayorMName,' ',gp.PayorLName) AS Payer, gp.payorAddr AS Address, gp.PayorContactNo AS ContactNo, gp.OtherDetails, gp.RemoteBranchCode AS RemoteId, gp.RemoteZoneCode, gp.RemoteOperatorID AS RemoteOperator, NULL AS CancelReason, 'S' AS CDType FROM kpbillspayment.gillamacspayment gp INNER JOIN kppartnerstransactions.branches b ON IF(gp.RemoteBranchCode = '', gp.branchcode = b.branchcode AND gp.zonecode = b.zonecode, gp.RemoteBranchCode = b.branchcode AND gp.RemoteZoneCode = b.zonecode) WHERE DATE(TransDate)='{0}' AND accountid='{1}' AND (isRFCled IS NULL OR isRFCled = 0) AND IF(gp.RemoteBranchCode = '', gp.ZoneCode = '{2}', gp.RemoteZoneCode = '{2}') AND b.regioncode = '{3}' AND b.areacode = '{4}' UNION ALL SELECT DATE_FORMAT(gp.transdate, '%Y-%m-%d %r') AS DATETIME, gp.ControlNo, gp.kptn AS ReferenceNo, gp.partnerinvoiceno AS AccountNo, CONCAT(gp.partnerAcctFName,' ',gp.partnerAcctMName,' ',gp.partnerAcctLName) AS AccountName, gp.AmountPaid, gp.AmountCharge AS CCharge, '0.0' AS PCharge, gp.BranchCode AS MLOutlet, gp.Zonecode AS MLZoneCode, gp.OperatorID AS Operator, CONCAT(gp.PayorFName,' ',gp.PayorMName,' ',gp.PayorLName) AS Payer, gp.payorAddr AS Address, gp.payorContactNo AS ContactNo, gp.OtherDetails, gp.RemoteBranchCode AS RemoteId, gp.RemoteZoneCode, gp.RemoteOperatorID AS RemoteOperator, 'Cancel' AS CancelReason, 'S' AS CDType FROM kpbillspayment.gillamacspayment gp INNER JOIN kpbillspayment.gillamacspaymentcancel gpc ON gp.kptn = gpc.kptn AND gp.referenceno = gpc.referenceno INNER JOIN kppartnerstransactions.branches b ON IF(gp.RemoteBranchCode = '', gp.branchcode = b.branchcode AND gp.zonecode = b.zonecode, gp.RemoteBranchCode = b.branchcode AND gp.RemoteZoneCode = b.zonecode) WHERE DATE(TransDate)='{0}' AND accountid='{5}' AND gp.isRFCled = 1 AND IF(gp.RemoteBranchCode = '', gp.ZoneCode = '{2}', gp.RemoteZoneCode = '{2}') AND b.regioncode = '{3}' AND b.areacode = '{4}' ORDER BY DATE_FORMAT(DATETIME, '%k%i%s') ASC", _date, partnerID, zone_code, region_code, area_code, partnerID)
                        ElseIf drpRegion.SelectedIndex <> 0 And drpArea.SelectedIndex <> 0 And drpBranchName.SelectedIndex <> 0 Then
                            strquery = String.Format("SELECT DATE_FORMAT(TransDate, '%Y-%m-%d %r') AS DATETIME, Controlno, Kptn AS ReferenceNo, partnerinvoiceno AS AccountNo, CONCAT(partnerAcctFName,' ',partnerAcctMName,' ',partnerAcctLName) AS AccountName, AmountPaid, AmountCharge AS CCharge, '0.0' AS PCharge, BranchCode AS MLOutlet, Zonecode AS MLZoneCode, OperatorID AS Operator, CONCAT(PayorFName,' ',PayorMName,' ',PayorLName) AS Payer, payorAddr AS Address, PayorContactNo AS ContactNo, OtherDetails, RemoteBranchCode AS RemoteId, RemoteZoneCode, RemoteOperatorID AS RemoteOperator, NULL AS CancelReason, 'S' AS CDType FROM kpbillspayment.gillamacspayment WHERE DATE(TransDate)='{0}' AND accountid='{1}' AND (isRFCled IS NULL OR isRFCled = 0) AND IF(RemoteBranchCode = '' ,ZoneCode = '{2}' AND BranchCode = '{3}',RemoteZoneCode = '{2}' AND RemoteBranchCode = '{3}') UNION ALL SELECT DATE_FORMAT(gp.transdate, '%Y-%m-%d %r') AS DATETIME, gp.ControlNo, gp.kptn AS ReferenceNo, gp.partnerinvoiceno AS AccountNo, CONCAT(gp.partnerAcctFName,' ',gp.partnerAcctMName,' ',gp.partnerAcctLName) AS AccountName, gp.AmountPaid, gp.AmountCharge AS CCharge, '0.0' AS PCharge, gp.BranchCode AS MLOutlet, gp.Zonecode AS MLZoneCode, gp.OperatorID AS Operator, CONCAT(gp.PayorFName,' ',gp.PayorMName,' ',gp.PayorLName) AS Payer, gp.payorAddr AS Address, gp.payorContactNo AS ContactNo, gp.OtherDetails, gp.RemoteBranchCode AS RemoteId, gp.RemoteZoneCode, gp.RemoteOperatorID AS RemoteOperator, 'Cancel' AS CancelReason, 'S' AS CDType FROM kpbillspayment.gillamacspayment gp INNER JOIN kpbillspayment.gillamacspaymentcancel gpc ON gp.kptn = gpc.kptn AND gp.referenceno = gpc.referenceno WHERE DATE(TransDate)='{0}' AND accountid='{4}' AND gp.isRFCled = 1 AND IF(RemoteBranchCode = '' ,ZoneCode = '{2}' AND BranchCode = '{3}',RemoteZoneCode = '{2}' AND RemoteBranchCode = '{3}') ORDER BY DATE_FORMAT(DATETIME, '%k%i%s') ASC", _date, partnerID, zone_code, branch_code, partnerID)
                        End If
                    Else
                        strquery = String.Format("SELECT DATE_FORMAT(TransDate, '%Y-%m-%d %r') AS DATETIME, Controlno, Kptn AS ReferenceNo, partnerinvoiceno AS AccountNo, CONCAT(partnerAcctFName,' ',partnerAcctMName,' ',partnerAcctLName) AS AccountName, AmountPaid, AmountCharge AS CCharge, '0.0' AS PCharge, BranchCode AS MLOutlet, Zonecode AS MLZoneCode, OperatorID AS Operator, CONCAT(PayorFName,' ',PayorMName,' ',PayorLName) AS Payer, payorAddr AS Address, PayorContactNo AS ContactNo, OtherDetails, RemoteBranchCode AS RemoteId, RemoteZoneCode, RemoteOperatorID AS RemoteOperator, NULL AS CancelReason, 'S' AS CDType FROM kpbillspayment.gillamacspayment WHERE DATE(TransDate)='{0}' AND accountid='{1}' AND (isRFCled IS NULL OR isRFCled = 0) UNION ALL SELECT DATE_FORMAT(gp.transdate, '%Y-%m-%d %r') AS DATETIME, gp.ControlNo, gp.kptn AS ReferenceNo, gp.partnerinvoiceno AS AccountNo, CONCAT(gp.partnerAcctFName,' ',gp.partnerAcctMName,' ',gp.partnerAcctLName) AS AccountName, gp.AmountPaid, gp.AmountCharge AS CCharge, '0.0' AS PCharge, gp.BranchCode AS MLOutlet, gp.Zonecode AS MLZoneCode, gp.OperatorID AS Operator, CONCAT(gp.PayorFName,' ',gp.PayorMName,' ',gp.PayorLName) AS Payer, gp.payorAddr AS Address, gp.payorContactNo AS ContactNo, gp.OtherDetails, gp.RemoteBranchCode AS RemoteId, gp.RemoteZoneCode, gp.RemoteOperatorID AS RemoteOperator, 'Cancel' AS CancelReason, 'S' AS CDType FROM kpbillspayment.gillamacspayment gp INNER JOIN kpbillspayment.gillamacspaymentcancel gpc ON gp.kptn = gpc.kptn AND gp.referenceno = gpc.referenceno WHERE DATE(TransDate)='{2}' AND accountid='{3}' AND gp.isRFCled = 1 ORDER BY DATE_FORMAT(DATETIME, '%k%i%s') ASC", _year, partnerID, _year, partnerID)
                    End If
                Else
                    If drpglobe.Text = "INNOVE" Then
                        flag = "I"
                    ElseIf drpglobe.Text = "GLOBE" Then
                        flag = "G"
                    End If
                    If partnerID = tpc And Session("roles") <> "KP-CAD" Then 'And Session("roles") = "KP-WALLETDIV" 
                        forTelepreneur()
                        TPCdirect = True
                        GoTo generateTPC
                    ElseIf partnerID = tpc And Session("roles") = "KP-CAD" Then
                        isCADTPC = True
                        strquery = String.Format("Call kpbillspayment.sendoutBPforCAD ('{0}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}');", _Dateme, Convert.ToDateTime(_datefrom), drppartnerid.Text, _datef, _datet, _year, flag, region_code, area_code, branch_code, zone_code, oldzCode, drpbiller2.Text)
                        kplog.Info(strquery.ToString())
                    Else
                        If (Session("roles") = "KP-CAD") Then
                            isCAD = True
                            strquery = String.Format("Call kpbillspayment.sendoutBPforCAD ('{0}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}');", _Dateme, Convert.ToDateTime(_datefrom), drppartnerid.Text, _datef, _datet, _year, flag, region_code, area_code, branch_code, zone_code, oldzCode, drpbiller2.Text)
                            kplog.Info(strquery.ToString())
                        ElseIf partnerID <> "" Then 'per partner 
                            'isCAD = True
                            strquery = String.Format("Call kpbillspayment.getsendoutBillspayment ('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}');", _day, Convert.ToDateTime(_datefrom), drppartnerid.Text, _datef, _datet, _year, flag, region_code, area_code, branch_code, zone_code, oldzCode, drpbiller2.Text)
                        Else
                            strquery = String.Format("Call kpbillspayment.getsendoutBillspayment ('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}');", _day, Convert.ToDateTime(_datefrom), drppartnerid.Text, _datef, _datet, _year, flag, region_code, area_code, branch_code, zone_code, oldzCode, drpbiller2.Text)
                            kplog.Info(strquery.ToString())
                            gstrquery = String.Format("Call kpbillspayment.getsendoutBillspaymentforglobal ('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}');", _day, Convert.ToDateTime(_datefrom), drppartnerid.Text, _datef, _datet, _year, flag, region_code, area_code, branch_code, zone_code)
                            kplog.Info(gstrquery.ToString())
                        End If

                    End If
                        If isepay = True Then
                            strquery = String.Format("Call `epayaccounts`.`getEpaySO` ('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}');", _day, Convert.ToDateTime(_datefrom), partnerID, _year, region_code, area_code, branch_code, zone_code, oldzCode)
                        End If
                End If

                Dim conflag As Int16 = 0
bpglobalcon:
                If isepay = True Then
                    Con.OpenCon("MLEpay")
                ElseIf isCAD = True Or isCADTPC = True Then
                    Con.OpenCon("KPWallet-BillspayDB")
                Else
                    If gstrquery <> String.Empty And conflag = 1 Then
                        strquery = gstrquery
                        BGcon()
                    Else
                        getconnections()
                    End If
                End If
                Using Con.GetCon()
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader()
                    If dr.HasRows Then
                        dtable.Clear()
                        dtable.Load(dr)
                        dtmerger.Merge(dtable, True, MissingSchemaAction.Ignore)
                    End If
                    dr.Close()
                    cmd = Nothing
                End Using

                If gstrquery <> String.Empty And conflag = 0 And isepay = False Then
                    conflag = 1
                    GoTo bpglobalcon
                End If

                If drpPartnerAccountlist.SelectedValue = "GILLAMAC" Then
                    CD_OLD = False
                Else
                    CD_OLD = True
                End If
                dr.Close()
                cmd = Nothing

                _datefrom = _datefrom.AddDays(1)
            Next
            Dim counter = 0
            If drppartnerid.Text = psslaiaccountid And partnername <> Nothing Then
                For Each row As DataRow In dtmerger.Rows
                    dtmerger.Rows(counter).BeginEdit()
                    Try
                        Dim dataoutput As String = row.Item("AccountNo").ToString() ' change this into your dataoutput
                        Dim removecharacter As String = System.Text.RegularExpressions.Regex.Replace(dataoutput, "[^a-zA-Z0-9]", "")
                        If removecharacter.IndexOf(0) <> "0" Then
                            removecharacter = "0" + removecharacter
                        End If
                        dtmerger.Rows(counter)("AccountNo") = removecharacter
                    Catch ex As Exception
                        kplog.Error(ex.ToString())
                    End Try
                    dtmerger.Rows(counter).EndEdit()
                    dtmerger.AcceptChanges()
                    counter = counter + 1
                Next
            End If
            'dtmerger.Merge(dtable1)
            '========================================================================
            'Prevent double posting in range report

            'Try
            '    If tableCounter > 1 Then
            '        Dim getLIst As DataTable = (From listVal2 In (From listVal In dtmerger.AsEnumerable _
            '                    Group By ReferenceNo = listVal.Field(Of String)("ReferenceNo") Into Group)
            '                    Where listVal2.Group.Count < 2
            '                    Select listVal2.Group.Last).AsQueryable.CopyToDataTable
            '        dtmerger.Clear()
            '        getLIst.AsEnumerable.CopyToDataTable(dtmerger, LoadOption.OverwriteChanges)
            '        dtmerger.AcceptChanges()
            '    End If
            'Catch ex As Exception
            '    kplog.Error(ex.ToString())
            '    GetMessage("No record for " & _dateofreport)
            'Exit Sub
            'End Try

generateTPC:
            '=========================================================================
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            ElseIf TPCdirect = True Then
                'getoperatormobilebillspay(dtmerger, "SO")
                'getcheckwalletandbillspayment(dtmerger)
                loadbillspayreport("SOTPC")
            ElseIf isCADTPC = True Then
                getcheckwalletandbillspayment(dtmerger)
                loadbillspayreport("SOTPCad")
            ElseIf isCAD = True Then
                getcheckwalletandbillspayment(dtmerger)
                loadbillspayreport("SOforCAD")
            Else
                getoperatormobilebillspay(dtmerger, "SO")
                loadbillspayreport("SO")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " " + gstrquery.ToString() + " billspaysendout")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                billspaysendout()
            Else
                GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                'GetMessage(Con.GetCon.ConnectionString())
                'GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    'billspay cancel sendout
    Public Sub billspaycancelsendout()
        dtable = billspaydatatable("CS")
        dtable.Clear()
        dtable1 = billspaydatatable("CS")
        dtable1.Clear()
        dtmerger = billspaydatatable("CS")
        dtmerger.Clear()

        Try
            Dim _datefrom As Date = txtdateFrom.Text
afterdataloop:
            If _loop <= _monthnoofdays Then
                For i As Integer = _loop To _monthnoofdays
                    _day = Convert.ToDateTime(_datefrom).ToString("MM")
                    _year = Convert.ToDateTime(_datefrom).ToString("yyyy")
                    strquery = String.Format("call kpbillspayment.getcancelSOBillspay('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}');", _day, Convert.ToDateTime(_datefrom), partnerID, zCode, rCode, aCode, bCode, _year, drpglobe.Text, usertype, oldzCode, drpbiller2.Text)
                    gstrquery = String.Format("call kpbillspayment.getcancelSOBillspayGlobalforCR('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}');", _day, Convert.ToDateTime(_datefrom), partnerID, zCode, rCode, aCode, bCode, _year, drpglobe.Text, usertype, oldzCode)
                    _datefrom = _datefrom.AddDays(1)
                    _loop = i + 1
                    GoTo dataloop
                Next
            Else
                GoTo _finaldata
            End If
dataloop:
            Dim conflag As Int16 = 0
bpglobalcon:
            If gstrquery <> String.Empty And conflag = 1 Then
                strquery = gstrquery
                BGcon()
            Else
                getconnections()
            End If

            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                While dr.Read()
                    datarow = dtable.NewRow()
                    clsreport.ID = clsreport.ID + 1
                    datarow("ID") = clsreport.ID
                    datarow("Transaction_Date") = UCase(If(Not IsDBNull(dr.Item("Transaction_Time")) And Trim(dr.Item("Transaction_Time")) <> String.Empty, Convert.ToDateTime(Trim(dr.Item("Transaction_Time"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("KPTN") = UCase(If(dr.Item("New_KPTN") <> String.Empty, Trim(dr.Item("New_KPTN")), "-"))
                    datarow("OLD_KPTN") = UCase(If(Not IsDBNull(dr.Item("OLD_KPTN")), Trim(dr.Item("OLD_KPTN")), "-"))
                    datarow("Account_No") = UCase(If(dr.Item("Account_No") <> String.Empty, Trim(dr.Item("Account_No")), "-"))
                    datarow("Account_Name") = UCase(If(dr.Item("Account_Name") <> String.Empty, Trim(dr.Item("Account_Name")), "-"))
                    datarow("Payor_Name") = UCase(If(dr.Item("Payor_Name") <> String.Empty, Trim(dr.Item("Payor_Name")), "-"))
                    datarow("Payment_To") = UCase(drpPartnerAccountlist.SelectedValue)  'CType(clsreport.Payment_To, String)
                    datarow("IR_NO") = UCase(If(Not IsDBNull(dr.Item("IR_No")), Trim(dr.Item("IR_No")), "-"))
                    datarow("Amount_Paid") = If(dr.Item("Amount_Paid") = 0.0, 0, Val(dr.Item("Amount_Paid")))
                    datarow("Cancellation_Charge") = 10.0
                    datarow("Other_Charge") = If(dr.Item("CCharge") = 0.0, Val(dr.Item("PCharge")), Val(dr.Item("CCharge")))
                    datarow("Operator_ID") = UCase(If(IsDBNull(dr.Item("Operator_ID")), Trim(dr.Item("CancelledByOperatorID")), Trim(dr.Item("Operator_ID"))))
                    datarow("Branch_Code") = UCase(If(dr.Item("Branch_Code") <> String.Empty, Trim(dr.Item("Branch_Code")), "-"))
                    datarow("Zone_Code") = If(dr.Item("CancelledByZoneCode") <> 0, Trim(dr.Item("Zone_Code")), "-")
                    datarow("Control_No") = UCase(If(dr.Item("Control_No") <> String.Empty, Trim(dr.Item("Control_No")), "-"))
                    datarow("Payor_Name") = UCase(If(dr.Item("Payor_Name") <> String.Empty, Trim(dr.Item("Payor_Name")), "-"))
                    datarow("Payor_Address") = UCase(If(dr.Item("Payor_Address") <> String.Empty, Trim(dr.Item("Payor_Address")), "-"))
                    datarow("Payor_ContactNo") = UCase(If(dr.Item("Payor_ContactNo") <> String.Empty, Trim(dr.Item("Payor_ContactNo")), "-"))
                    datarow("Other_Details") = If(dr.Item("Other_Details") <> String.Empty, Trim(dr.Item("Other_Details")), "-")
                    datarow("SOdate") = UCase(If(Convert.ToString(dr.Item("SO_Date")) <> String.Empty, Trim(dr.Item("SO_Date")), "-"))
                    datarow("CancelledByName") = UCase(If(IsDBNull(dr.Item("CancelledByOperatorID")), Trim(dr.Item("CancelledByOperatorID")), Trim(dr.Item("CancelledByOperatorID")))) 'melan
                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()
                    dtable1.Merge(dtable)
                End While
                dr.Close()
                cmd = Nothing
            End Using
            If gstrquery <> String.Empty And conflag = 0 Then
                conflag = 1
                GoTo bpglobalcon
            End If

            If _loop <= _monthnoofdays Then
                GoTo afterdataloop
            End If
            dtmerger.Merge(dtable1)
_finaldata:
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                getoperatormobilebillspay(dtmerger, "CancelSO")
                loadbillspayreport("Cancel-SO")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " " + gstrquery.ToString() + " billspaycancelsendout")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                billspaycancelsendout()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    'billspay rfc
    Public Sub billspaychangedetails()
        dtable = billspaydatatable("RFC_NEW")
        dtable.Clear()
        dtable1 = billspaydatatable("RFC_NEW")
        dtable1.Clear()
        dtmerger = billspaydatatable("RFC_NEW")
        dtmerger.Clear()
        Dim mm As String = Nothing
        Dim dd As String = Nothing
        Dim getold As Integer = 0
        Dim getold2 As Integer = 0
        Dim oldkptn As String = Nothing
        Try
            Dim _datefrom As Date = txtdateFrom.Text
afterdataloop:
            If _loop <= _monthnoofdays Then
                For i As Integer = _loop To _monthnoofdays
                    _day = Convert.ToDateTime(_datefrom).ToString("MM")
                    _year = Convert.ToDateTime(_datefrom).ToString("yyyy")
                    strquery = String.Format("call kpbillspayment.getRFCBillspay('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}');", _day, Convert.ToDateTime(_datefrom), partnerID, zCode, rCode, aCode, bCode, _year, drpglobe.Text, usertype, oldzCode, drpbiller2.Text)
                    gstrquery = String.Format("call kpbillspayment.getRFCBillspayGlobalForCR('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}');", _day, Convert.ToDateTime(_datefrom), partnerID, zCode, rCode, aCode, bCode, _year, drpglobe.Text, usertype, oldzCode)
                    _datefrom = _datefrom.AddDays(1)
                    _loop = i + 1
                    GoTo dataloop
                Next
            Else
                GoTo _finaldata
            End If
dataloop:
            Dim conflag As Int16 = 0
bpglobalcon:
            If gstrquery <> String.Empty And conflag = 1 Then
                strquery = gstrquery
                BGcon()
            Else
                getconnections()
            End If
            Try
                dtable1.Clear()
                Using Con.GetCon()
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader()
                    If dr.HasRows Then
                        dtable1.Load(dr)
                        dtmerger.Merge(dtable1)
                    End If
                    dr.Close()
                    cmd = Nothing
                End Using
            Catch ex As Exception
                kplog.Error(ex.ToString())
            End Try

            If gstrquery <> String.Empty And conflag = 0 Then
                conflag = 1
                GoTo bpglobalcon
            End If

            If _loop <= _monthnoofdays Then
                dr.Close()
                cmd = Nothing
                Con.CloseCon()
                GoTo afterdataloop
            Else
                'dtmerger.Merge(dtable1)
                GoTo _finaldata
            End If

_finaldata:
            getbranchoperator(dtmerger, "bprfc")
            getbranchoperator(dtmerger, "opidfn") 'melan
            getbranchglobaloperator(dtmerger, "bprfc")
            billspayoldkptn(dtmerger, partnerID)
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                getoperatormobilebillspay(dtmerger, "RFC")
                loadbillspayreport("Request-for-Change")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " " + gstrquery.ToString() + " billspaychangedetails")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                billspaychangedetails()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub billspayoldkptn(ByVal dtold As DataTable, ByVal partnerid As String)
        Dim strqueryold As String = Nothing
        Dim cmdold As MySqlCommand = New MySqlCommand
        Dim drold As MySqlDataReader = Nothing
        Dim counter As Int16 = 0
        Dim mm As String = Nothing
        Dim dd As String = Nothing
        Dim oldkptn As String = Nothing
        Try
            For Each row As DataRow In dtold.Rows
                oldkptn = Trim(row("CR_OLD_KPTN").ToString())
                For i As Int16 = 1 To 2
                    Try
                        If i = 1 Then
                            Con.OpenCon("KPBillspayGlobal")
                            mm = oldkptn.Substring(15, 2)
                            dd = oldkptn.Substring(6, 2)
                            strquery = String.Format("call kpbillspayment.BillsPaymentOLDKPTNGlobalForCR('{0}{1}','{2}','{3}');", mm, dd, oldkptn, partnerid)
                        Else
                            Con.OpenCon("KPBillsPayment")
                            mm = oldkptn.Substring(15, 2)
                            dd = oldkptn.Substring(7, 2)
                            strquery = String.Format("call kpbillspayment.BillsPaymentOLDKPTN('{0}{1}','{2}','{3}');", mm, dd, oldkptn, partnerid)
                        End If

                        Using Con.GetCon()
                            cmdold = New MySqlCommand(strquery, Con.GetCon())
                            cmdold.CommandTimeout = 0
                            drold = cmdold.ExecuteReader
                            While drold.Read()
                                dtold.Rows(counter)("KPTN") = If(drold.Item("NEW_KPTN") <> String.Empty, Trim(drold.Item("NEW_KPTN")), "-")
                                dtold.Rows(counter)("Account_No") = If(drold.Item("Account_No") <> String.Empty, Trim(drold.Item("Account_No")), "-")
                                dtold.Rows(counter)("Account_Name") = If(drold.Item("Account_Name") <> String.Empty, Trim(drold.Item("Account_Name")).ToUpper(), "-")
                                dtold.Rows(counter)("Payor_Name") = If(drold.Item("Payor_Name") <> String.Empty, Trim(drold.Item("Payor_Name")).ToUpper(), "-")
                                dtold.Rows(counter)("Payment_To") = If(drold.Item("Payment_To") <> String.Empty, Trim(drold.Item("Payment_To")).ToUpper(), "-")
                                dtold.Rows(counter)("IR_NO") = If(Not IsDBNull(drold.Item("IR_No")), Trim(drold.Item("IR_No")), "-")
                                dtold.Rows(counter)("Amount_Paid") = If(drold.Item("Amount_Paid") = 0.0, 0, Val(drold.Item("Amount_Paid")))
                                dtold.Rows(counter)("Operator_ID") = If(drold.Item("Operator_ID") <> String.Empty, Trim(drold.Item("Operator_ID")), Trim(drold.Item("Employee_Name")))
                                dtold.Rows(counter)("Cancellation_Charge") = If(drold.Item("Cancellation_Charge") = 0.0, 0.0, Val(drold.Item("Cancellation_Charge")))
                                dtold.Rows(counter)("Other_Charge") = CType(0.0, Decimal)
                                dtold.Rows(counter)("Branch_Code") = If(drold.Item("Branch_Code") <> String.Empty, Trim(drold.Item("Branch_Code")), "-")
                                dtold.Rows(counter)("Control_No") = If(drold.Item("Control_No") <> String.Empty, Trim(drold.Item("Control_No")), "-")
                                dtold.Rows(counter)("Employee_Name") = If(drold.Item("Employee_Name") <> String.Empty, Trim(drold.Item("Employee_Name")).ToUpper(), Trim(drold.Item("Operator_ID")).ToUpper())
                                dtold.Rows(counter)("Transaction_Date") = If(Not IsDBNull(drold.Item("Transaction_Time")) And Convert.ToString(drold.Item("Transaction_Time")) <> String.Empty, Convert.ToDateTime(Trim(drold.Item("Transaction_Time"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-")
                                dtold.AcceptChanges()
                            End While
                            drold.Close()
                            cmdold = Nothing
                        End Using
                        Con.CloseCon()
                    Catch ex As Exception
                        kplog.Error(ex.ToString())
                    End Try
                Next
                counter = counter + 1
            Next
            getbranchoperator(dtold, "bprfcold")
            getbranchglobaloperator(dtold, "bprfcold")
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " " + gstrquery.ToString() + " billspayoldkptn")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub

    Private Sub forTelepreneur()
        dtable = billspaydatatable("SOTelepreneur")
        dtable.Clear()
        dtable1 = billspaydatatable("SOTelepreneur")
        dtable1.Clear()
        dtmerger = billspaydatatable("SOTelepreneur")
        dtmerger.Clear()

        Dim zone_code As String = Session("zcode")
        Dim region_code As String = Session("regioncode")
        Dim area_code As String = Session("areacode")
        Dim branch_code As String = Session("branchcode")
        Dim CD_OLD As Boolean = False
        Try


            Dim flag As String = ""
            Dim _datefrom As Date
            Dim _dateto As Date = txtdateTo.Text
            Dim _datef As String
            Dim _datet As String = Convert.ToDateTime(_dateto).ToString("yyyy-MM-dd")

            If drppartnerid.Text = psslaiaccountid And txtdateFrom.Text = txtdateTo.Text And partnername <> Nothing Then
                Dim monday = Convert.ToDateTime(txtdateFrom.Text).DayOfWeek.ToString()
                If monday = "Monday" Then
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text).AddDays(-3)
                    _datef = Convert.ToDateTime(_datefrom).ToString("yyyy-MM-dd")
                Else
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text).AddDays(-1)
                    _datef = Convert.ToDateTime(_datefrom).ToString("yyyy-MM-dd")
                End If
            Else
                _datefrom = txtdateFrom.Text
                _datef = Convert.ToDateTime(_datefrom).ToString("yyyy-MM-dd")
            End If

            Con.OpenCon("KPWallet-BillspayDB")
            Using Con.GetCon()
                For i As Integer = 1 To _monthnoofdays
                    strquery = String.Format("Call kpbillspayment.getsendoutBillspaymentTPC ('{0}{1:dd}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}');", _day, Convert.ToDateTime(_datefrom), drppartnerid.Text, _datef, _datet, _year, flag, region_code, area_code, branch_code, zone_code, oldzCode, drpbiller2.Text)
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    If dr.HasRows Then
                        dtable.Clear()
                        dtable.Load(dr)
                        dtmerger.Merge(dtable)
                    End If
                    dr.Close()
                    cmd = Nothing
                    _datefrom = _datefrom.AddDays(1)
                Next
            End Using
            Con.CloseCon()
            'getwalletIdforPayor(dtmerger)
            'getConvenienceFee(dtmerger)


            'If dtmerger.Rows.Count = 0 Then
            '    GetMessage("No record for " & _dateofreport)
            'Else
            '    getoperatormobilebillspay(dtmerger, "SOTelepreneur")
            '    loadbillspayreport("SOTPC")
            'End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " sendoutbillspay")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                forTelepreneur()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    'get operator billspay for wallet
    Public Sub getoperatormobilebillspay(dtbillspay As DataTable, flag As String)
        Try
            Con.OpenCon("KPMLWallet")
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row As DataRow In dtbillspay.Rows
                    If flag = "SO" Then
                        Try
                            'cmd = New MySqlCommand(String.Format("SELECT CONCAT(firstname,' ',middlename,' ',lastname) as name FROM `kpmobile`.`mobilelogin` WHERE username='{0}';", Trim(row("operator"))), Con.GetCon())
                            'cmd = New MySqlCommand(String.Format("Call KPWalletReportsSP.getoperatormobilebillspay('{0}','{1}')", Trim(row("operator")), flag), Con.GetCon())
                            cmd = New MySqlCommand(String.Format("Call getoperatormobilebillspay('{0}','{1}')", Trim(row("operator")), flag), Con.GetCon())
                            cmd.CommandTimeout = 0
                            dr = cmd.ExecuteReader
                            dtbillspay.Rows(counter).BeginEdit()
                            If dr.HasRows() Then
                                dr.Read()
                                dtbillspay.Rows(counter)("operator") = UCase(dr.Item("name").ToString().Trim())
                                If ReportType = 2 Then
                                    dtbillspay.Rows(counter)("assFullName") = UCase(dr.Item("name").ToString().Trim())
                                    If drpPartnerAccountlist.Text = "-Select-" And (Session("roles") = "KP-IAD" Or Session("roles") = "KP-RAM") Then
                                        dtbillspay.Rows(counter)("assoperator") = UCase(dr.Item("name").ToString().Trim())
                                    End If
                                End If
                            End If
                            dtbillspay.Rows(counter).EndEdit()
                            dtbillspay.AcceptChanges()
                            dr.Close()
                        Catch ex As Exception
                            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + cmd.CommandText.ToString() + " getoperatormobilebillspay1")
                            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                            GetMessage("Please Call Admin Support!")
                        End Try

                    ElseIf flag = "SOTelepreneur" Then
                        Try
                            'cmd = New MySqlCommand(String.Format("SELECT CONCAT(firstname,' ',middlename,' ',lastname) as name FROM `kpmobile`.`mobilelogin` WHERE username='{0}';", Trim(row("operator"))), Con.GetCon())
                            'cmd = New MySqlCommand(String.Format("Call KPWalletReportsSP.getoperatormobilebillspay('{0}','{1}');", Trim(row("operator")), flag), Con.GetCon())
                            cmd = New MySqlCommand(String.Format("Call getoperatormobilebillspay('{0}','{1}');", Trim(row("operator")), flag), Con.GetCon())
                            cmd.CommandTimeout = 0
                            dr = cmd.ExecuteReader
                            dtbillspay.Rows(counter).BeginEdit()
                            If dr.HasRows() Then
                                dr.Read()
                                dtbillspay.Rows(counter)("operator") = UCase(dr.Item("name").ToString().Trim())
                                If ReportType = 2 Then
                                    dtbillspay.Rows(counter)("assFullName") = UCase(dr.Item("name").ToString().Trim())
                                    If drpPartnerAccountlist.Text = "-Select-" And (Session("roles") = "KP-IAD" Or Session("roles") = "KP-RAM") Then
                                        dtbillspay.Rows(counter)("assoperator") = UCase(dr.Item("name").ToString().Trim())
                                    End If
                                End If
                            End If
                            dtbillspay.Rows(counter).EndEdit()
                            dtbillspay.AcceptChanges()
                            dr.Close()
                        Catch ex As Exception
                            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + cmd.CommandText.ToString() + " getoperatormobilebillspay1")
                            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                            GetMessage("Please Call Admin Support!")
                        End Try

                    ElseIf flag = "CancelSO" Or flag = "RFC" Then
                        Try
                            'cmd = New MySqlCommand(String.Format("SELECT CONCAT(firstname,' ',middlename,' ',lastname) as name FROM `kpmobile`.`mobilelogin` WHERE username='{0}';", Trim(row("Operator_ID"))), Con.GetCon())
                            'cmd = New MySqlCommand(String.Format("Call KPWalletReportsSP.getoperatormobilebillspay('{0}','{1}');", Trim(row("Operator_ID")), flag), Con.GetCon())
                            cmd = New MySqlCommand(String.Format("Call getoperatormobilebillspay('{0}','{1}');", Trim(row("Operator_ID")), flag), Con.GetCon())
                            cmd.CommandTimeout = 0
                            dr = cmd.ExecuteReader
                            dtbillspay.Rows(counter).BeginEdit()
                            If dr.HasRows() Then
                                dr.Read()
                                If flag = "CancelSO" Then
                                    dtbillspay.Rows(counter)("Operator_ID") = UCase(dr.Item("name").ToString().Trim())
                                Else
                                    dtbillspay.Rows(counter)("CR_Employee_Name") = UCase(dr.Item("name").ToString().Trim())
                                    dtbillspay.Rows(counter)("Employee_Name") = UCase(dr.Item("name").ToString().Trim())
                                End If
                            End If
                            dtbillspay.Rows(counter).EndEdit()
                            dtbillspay.AcceptChanges()
                            dr.Close()
                        Catch ex As Exception
                            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + cmd.CommandText.ToString() + " getoperatormobilebillspay2")
                            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                            GetMessage("Please Call Admin Support!")
                        End Try
                        
                    ElseIf flag = "claimedExpress" Then
                        Try
                            If UCase(Trim(row("Operator"))).ToString() = UCase(Trim(row("Operatorid"))).ToString() Then
                                'cmd = New MySqlCommand("SELECT CONCAT(lastname,',',' ',firstname,' ',middlename) as name FROM `kpmobile`.`mobilelogin` WHERE SUBSTRING(username,1,15)='" + Trim(row("Operator")).ToString() + "';", Con.GetCon())
                                'cmd = New MySqlCommand(String.Format("Call KPWalletReportsSP.getoperatormobilebillspay('{0}','{1}');", Trim(row("Operator_ID")).Substring(1, 15).ToString(), flag), Con.GetCon())
                                cmd = New MySqlCommand(String.Format("Call getoperatormobilebillspay('{0}','{1}');", Trim(row("Operator_ID")).Substring(1, 15).ToString(), flag), Con.GetCon())
                                cmd.CommandTimeout = 0
                                dr = cmd.ExecuteReader
                                dtbillspay.Rows(counter).BeginEdit()
                                If dr.HasRows() Then
                                    dr.Read()
                                    dtbillspay.Rows(counter)("Operator") = UCase(dr.Item("name").ToString().Trim()).Replace("Ñ", "N")
                                    If Not IsDBNull(dtbillspay.Rows(counter)("partnername")) Then
                                        If Not ReportType = 5 Then
                                            dtbillspay.Rows(counter)("partnername") = UCase(dr.Item("name").ToString().Trim()).Replace("Ñ", "N")
                                        End If
                                    End If
                                End If
                                dtbillspay.Rows(counter).EndEdit()
                                dtbillspay.AcceptChanges()
                                dr.Close()
                            End If
                        Catch ex As Exception
                            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + cmd.CommandText.ToString() + " getoperatormobilebillspay3")
                            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                            GetMessage("Please Call Admin Support!")
                        End Try
                        
                    ElseIf flag = "cancelpoExpress" Then
                        Try
                            If drpPartnerAccountlist.Text = "-Select-" Then
                                'cmd = New MySqlCommand("SELECT CONCAT(lastname,',',' ',firstname,' ',middlename) as name FROM `kpmobile`.`mobilelogin` WHERE SUBSTRING(username,1,15)='" + Trim(row("partnername")).ToString() + "';", Con.GetCon())
                                'cmd = New MySqlCommand(String.Format("Call KPWalletReportsSP.getoperatormobilebillspay('{0}','{1}');", Trim(row("partnername")).Substring(1, 15).ToString(), flag), Con.GetCon())
                                cmd = New MySqlCommand(String.Format("Call getoperatormobilebillspay('{0}','{1}');", Trim(row("partnername")).Substring(1, 15).ToString(), flag), Con.GetCon())
                            Else
                                'cmd = New MySqlCommand("SELECT CONCAT(lastname,',',' ',firstname,' ',middlename) as name FROM `kpmobile`.`mobilelogin` WHERE SUBSTRING(username,1,15)='" + Trim(row("operator")).ToString() + "';", Con.GetCon())
                                'cmd = New MySqlCommand(String.Format("Call KPWalletReportsSP.getoperatormobilebillspay('{0}','{1}');", Trim(row("operator")).Substring(1, 15).ToString(), flag), Con.GetCon())
                                cmd = New MySqlCommand(String.Format("Call getoperatormobilebillspay('{0}','{1}');", Trim(row("operator")).Substring(1, 15).ToString(), flag), Con.GetCon())
                            End If
                            cmd.CommandTimeout = 0
                            dr = cmd.ExecuteReader
                            dtbillspay.Rows(counter).BeginEdit()
                            If dr.HasRows() Then
                                dr.Read()
                                If drpPartnerAccountlist.Text = "-Select-" Then
                                    If Not IsDBNull(dtbillspay.Rows(counter)("partnername")) Then
                                        If (dtbillspay.Rows(counter)("partnername") = "-") Then
                                            dtbillspay.Rows(counter)("partnername") = UCase(dr.Item("name").ToString().Trim()).Replace("Ñ", "N")
                                        End If
                                    End If
                                Else
                                    dtbillspay.Rows(counter)("operator") = UCase(dr.Item("name").ToString().Trim()).Replace("Ñ", "N")
                                End If
                            End If
                            dtbillspay.Rows(counter).EndEdit()
                            dtbillspay.AcceptChanges()
                            dr.Close()
                        Catch ex As Exception
                            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + cmd.CommandText.ToString() + " getoperatormobilebillspay4")
                            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                            GetMessage("Please Call Admin Support!")
                        End Try
                        

                    ElseIf flag = "WalletLoading" Then
                        Try
                            'cmd = New MySqlCommand("SELECT CONCAT(lastname,',',' ',firstname,' ',middlename) as name FROM `kpmobile`.`mobilelogin` WHERE custid='" + Trim(row("custid")).ToString() + "';", Con.GetCon())
                            'cmd = New MySqlCommand(String.Format("Call KPWalletReportsSP.getoperatormobilebillspay('{0}','{1}');", Trim(row("custid")).ToString(), flag), Con.GetCon())
                            cmd = New MySqlCommand(String.Format("Call getoperatormobilebillspay('{0}','{1}');", Trim(row("custid")).ToString(), flag), Con.GetCon())
                            cmd.CommandTimeout = 0
                            dr = cmd.ExecuteReader
                            dtbillspay.Rows(counter).BeginEdit()
                            If dr.HasRows() Then
                                dr.Read()
                                dtbillspay.Rows(counter)("partnername") = UCase(dr.Item("name").ToString().Trim()).Replace("Ñ", "N")
                            End If
                            dtbillspay.Rows(counter).EndEdit()
                            dtbillspay.AcceptChanges()
                            dr.Close()
                        Catch ex As Exception
                            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + cmd.CommandText.ToString() + " getoperatormobilebillspay5")
                            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                            GetMessage("Please Call Admin Support!")
                        End Try
                        
                    End If
                    counter = counter + 1
                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + cmd.CommandText.ToString() + " getoperatormobilebillspaymain")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub


    'get to check wallet and billspayment
    Public Sub getcheckwalletandbillspayment(ByVal dtbillspay As DataTable)
        Try
            Con.OpenCon("KPWallet-BillspayDB")
            Dim counter As Integer = 0

            Using Con.GetCon()
                For Each row As DataRow In dtbillspay.Rows
                    Dim kptn As String = Trim(row.Item("ReferenceNo"))
                    'Dim dates As String = row("DATETIME").ToString()
                    If kptn.Substring(0, 3) = "BPW" Then
                        cmd = New MySqlCommand(String.Format("Call getcheckwalletandbillspay('{0}','{1}')", row.Item("ReferenceNo").ToString(), row.Item("DATETIME")), Con.GetCon())
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        dtbillspay.Rows(counter).BeginEdit()
                        If dr.HasRows() Then
                            dr.Read()
                            Dim existwallet As String = dr.Item("asteriskW_wallet").ToString()
                            Dim existbillspayment As String = dr.Item("asteriskB_bp").ToString()
                            If existbillspayment = "1" And existwallet = "1" Then
                                dtbillspay.Rows(counter)("legend") = ""
                            ElseIf existbillspayment = "1" And existwallet = "" Then
                                dtbillspay.Rows(counter)("legend") = "**"
                            ElseIf existwallet = "1" And existbillspayment = "" Then
                                dtbillspay.Rows(counter)("legend") = "*"
                            End If
                        End If
                        dtbillspay.Rows(counter).EndEdit()
                        dtbillspay.AcceptChanges()
                        dr.Close()

                    End If
                    counter = counter + 1
                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + cmd.CommandText.ToString() + " getoperatormobilebillspaymain")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    'express eload
    Public Sub getnetowrkname(ByVal dt As DataTable)
        Try
            Con.OpenCon("MLEload")
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    cmd = New MySqlCommand(String.Format("SELECT network FROM `ELoadAdmin`.`NetworkInfo` WHERE networkid = '{0}';", Trim(row("network"))), Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("network") = UCase(If(Not IsDBNull(dr.Item("network")), Trim(dr.Item("network")), "-"))
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1
                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + cmd.CommandText.ToString() + " getnetowrkname")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub


    Public Sub getbranchname(dt As DataTable)
        Try
            Con.OpenCon("KPUsers")
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    cmd = New MySqlCommand(String.Format("SELECT branchname,address FROM kpusers.branches WHERE branchcode='{0}' and zonecode='{1}' limit 1;", Trim(row("branchcode")), Trim(row("zonecode"))), Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        If (ReportType = 5) Then
                            dt.Rows(counter)("branchname") = String.Format("{0}-{1}", dt.Rows(counter)("branchname"), UCase(If(Not IsDBNull(dr.Item("branchname")), Trim(dr.Item("branchname")), "-")))
                        Else
                            dt.Rows(counter)("pobranch") = UCase(If(Not IsDBNull(dr.Item("branchname")), Trim(dr.Item("branchname")), "-"))
                            dt.Rows(counter)("receiveraddress") = UCase(If(Not IsDBNull(dr.Item("address")), Trim(dr.Item("address")), "-"))
                        End If
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1
                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + cmd.CommandText.ToString() + " getbranchname")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    Public Sub getbranchoperator(ByVal dt As DataTable, ByVal flag As String)
        Try
            Con.OpenCon("KPUsers")
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    Try
                        If (flag = "walletkppo") Then
                            cmd = New MySqlCommand(String.Format("SELECT concat(firstname,' ',middlename,' ',lastname) as fullname FROM kpusers.branchusers b inner join kpusers.sysuseraccounts s on s.resourceid=b.resourceid WHERE userlogin='{0}' limit 1;", Trim(row("operator"))), Con.GetCon())
                        ElseIf (flag = "bprfc") Then
                            cmd = New MySqlCommand(String.Format("SELECT concat(firstname,' ',middlename,' ',lastname) as fullname FROM kpusers.branchusers b inner join kpusers.sysuseraccounts s on s.resourceid=b.resourceid WHERE userlogin='{0}' limit 1;", Trim(row("CR_Employee_Name"))), Con.GetCon())
                        ElseIf (flag = "opidfn") Then 'Melan
                            cmd = New MySqlCommand(String.Format("SELECT concat(firstname,' ',middlename,' ',lastname) as fullname FROM kpusers.branchusers b inner join kpusers.sysuseraccounts s on s.resourceid=b.resourceid WHERE userlogin='{0}' limit 1;", Trim(row("CR_Operator_ID"))), Con.GetCon())

                        ElseIf (flag = "bprfcold") Then
                            cmd = New MySqlCommand(String.Format("SELECT concat(firstname,' ',middlename,' ',lastname) as fullname FROM kpusers.branchusers b inner join kpusers.sysuseraccounts s on s.resourceid=b.resourceid WHERE userlogin='{0}' limit 1;", Trim(row("Employee_Name"))), Con.GetCon())
                        Else
                            cmd = New MySqlCommand(String.Format("SELECT concat(firstname,' ',middlename,' ',lastname) as fullname FROM kpusers.branchusers b inner join kpusers.sysuseraccounts s on s.resourceid=b.resourceid WHERE userlogin='{0}' limit 1;", Trim(row("operatorid"))), Con.GetCon())
                        End If
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        dt.Rows(counter).BeginEdit()
                        If dr.HasRows() Then
                            dr.Read()
                            If (flag = "walletkppo") Then
                                dt.Rows(counter)("operator") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), "-"))
                            ElseIf (flag = "bprfc") Then
                                dt.Rows(counter)("CR_Employee_Name") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), "-"))
                            ElseIf (flag = "opidfn") Then 'melan
                                dt.Rows(counter)("CR_Operator_ID") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), "-"))

                            ElseIf (flag = "bprfcold") Then
                                dt.Rows(counter)("Operator_ID") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), Trim(row("Operator_ID"))))
                                dt.Rows(counter)("Employee_Name") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), Trim(row("Employee_Name"))))
                            Else
                                dt.Rows(counter)("pooperator") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), "-"))
                            End If
                        End If
                        dt.Rows(counter).EndEdit()
                        dt.AcceptChanges()
                        dr.Close()
                    Catch ex As Exception
                        kplog.Error(ex.ToString())
                    End Try
                    counter = counter + 1
                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + cmd.CommandText.ToString() + " getbranchoperator")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    Public Sub getbranchglobaloperator(ByVal dt As DataTable, ByVal flag As String)
        Try
            Con.OpenCon("KPGLOBAL")
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    Try
                        If (flag = "bprfc") Then
                            cmd = New MySqlCommand(String.Format("SELECT concat(firstname,' ',middlename,' ',lastname) as fullname FROM kpusersglobal.branchusers b inner join kpusersglobal.sysuseraccounts s on s.resourceid=b.resourceid WHERE userlogin='{0}' limit 1;", Trim(row("CR_Employee_Name"))), Con.GetCon())
                        ElseIf (flag = "bprfcold") Then
                            cmd = New MySqlCommand(String.Format("SELECT concat(firstname,' ',middlename,' ',lastname) as fullname FROM kpusersglobal.branchusers b inner join kpusersglobal.sysuseraccounts s on s.resourceid=b.resourceid WHERE userlogin='{0}' limit 1;", Trim(row("Employee_Name"))), Con.GetCon())
                        Else
                            cmd = New MySqlCommand(String.Format("SELECT concat(firstname,' ',middlename,' ',lastname) as fullname FROM kpusersglobal.branchusers b inner join kpusersglobal.sysuseraccounts s on s.resourceid=b.resourceid WHERE userlogin='{0}' limit 1;", Trim(row("operatorid"))), Con.GetCon())
                        End If
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        dt.Rows(counter).BeginEdit()
                        If dr.HasRows() Then
                            dr.Read()
                            If (flag = "bprfc") Then
                                dt.Rows(counter)("CR_Employee_Name") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), "-"))
                            ElseIf (flag = "bprfcold") Then
                                dt.Rows(counter)("Operator_ID") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), Trim(row("Operator_ID"))))
                                dt.Rows(counter)("Employee_Name") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), Trim(row("Employee_Name"))))
                            Else
                                dt.Rows(counter)("pooperator") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), "-"))
                            End If
                        End If
                        dt.Rows(counter).EndEdit()
                        dt.AcceptChanges()
                        dr.Close()
                    Catch ex As Exception
                        kplog.Error(ex.ToString())
                    End Try
                    counter = counter + 1
                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + cmd.CommandText.ToString() + " getbranchglobaloperator")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    Public Sub getoperatorExpress(ByVal dtbillspay As DataTable, ByVal flag As String)
        Try
            Con.OpenCon("KPMLExpress")
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row As DataRow In dtbillspay.Rows
                    If flag = "SO" Then
                        Try
                            cmd = New MySqlCommand(String.Format("SELECT CONCAT(firstname,' ',middlename,' ',lastname) as name FROM `kpOFW`.`OFWaccounts` WHERE username='{0}';", Trim(row("operator"))), Con.GetCon())
                            cmd.CommandTimeout = 0
                            dr = cmd.ExecuteReader
                            dtbillspay.Rows(counter).BeginEdit()
                            If dr.HasRows() Then
                                dr.Read()
                                dtbillspay.Rows(counter)("operator") = UCase(dr.Item("name").ToString().Trim())
                                If ReportType = 2 Then
                                    dtbillspay.Rows(counter)("assFullName") = UCase(dr.Item("name").ToString().Trim())
                                    If drpPartnerAccountlist.Text = "-Select-" And (Session("roles") = "KP-IAD" Or Session("roles") = "KP-RAM") Then
                                        dtbillspay.Rows(counter)("assoperator") = UCase(dr.Item("name").ToString().Trim())
                                    End If
                                End If
                            End If
                            dtbillspay.Rows(counter).EndEdit()
                            dtbillspay.AcceptChanges()
                            dr.Close()
                        Catch ex As Exception
                            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + cmd.CommandText.ToString() + " getoperatorExpress")
                            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                            GetMessage("Please Call Admin Support!")
                        End Try
                    ElseIf flag = "claimedExpress" Then
                        Try
                            'cmd = New MySqlCommand("SELECT CONCAT(lastname,',',' ',firstname,' ',middlename) as name FROM `kpmobile`.`mobilelogin` WHERE SUBSTRING(username,1,15)='" + Trim(row("Operator")).ToString() + "';", Con.GetCon())
                            cmd = New MySqlCommand(String.Format("SELECT CONCAT(firstname,' ',middlename,' ',lastname) as name FROM `kpOFW`.`OFWaccounts` WHERE username='{0}';", Trim(row("operator"))), Con.GetCon())
                            cmd.CommandTimeout = 0
                            dr = cmd.ExecuteReader
                            dtbillspay.Rows(counter).BeginEdit()
                            If dr.HasRows() Then
                                dr.Read()
                                dtbillspay.Rows(counter)("Operator") = UCase(dr.Item("name").ToString().Trim()).Replace("Ñ", "N")
                                If Not IsDBNull(dtbillspay.Rows(counter)("partnername")) Then
                                    If Not ReportType = 5 Then
                                        dtbillspay.Rows(counter)("partnername") = UCase(dr.Item("name").ToString().Trim()).Replace("Ñ", "N")
                                    End If
                                End If
                            End If
                            dtbillspay.Rows(counter).EndEdit()
                            dtbillspay.AcceptChanges()
                            dr.Close()

                        Catch ex As Exception
                            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + cmd.CommandText.ToString() + " getoperatorExpress")
                            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                            GetMessage("Please Call Admin Support!")
                        End Try
                    End If
                    counter = counter + 1
                Next

            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + cmd.CommandText.ToString() + " getoperatormobilebillspaymain")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    Public Sub getfullnamewallet(ByVal dt As DataTable, ByVal flag As String)
        Try

            If ReportType = 10 Then
                Con.OpenCon("KPMLWalletEmp")
            Else
                Con.OpenCon("KPMLWallet")
            End If
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    If ReportType = 10 Then
                        If flag = "username" Then
                            cmd = New MySqlCommand(String.Format("CALL kpmobile.getfullnamewallet('{0}','{1}');", Trim(row("username")), flag), Con.GetCon())
                        ElseIf flag = "operator" Then
                            cmd = New MySqlCommand(String.Format("CALL kpmobile.getfullnamewallet('{0}','{1}');", Trim(row("operator")), flag), Con.GetCon())
                        ElseIf flag = "walletload" Then
                            cmd = New MySqlCommand(String.Format("CALL kpmobile.getFNWwalletload('{0}','{1}','{2}');", Trim(row("receivername")), Trim(row("custid")), flag), Con.GetCon())
                        ElseIf flag = "xpreswalletpo" Then
                            cmd = New MySqlCommand(String.Format("CALL kpmobile.getfullnamewallet('{0}','{1}');", Trim(row("operatorid")), flag), Con.GetCon())
                        ElseIf flag = "sendername" Then
                            'Con.CloseCon()
                            'Con.OpenCon("KPMLWalletEmp")
                            cmd = New MySqlCommand(String.Format("CALL kpmobile.getfullnamewallet('{0}','{1}');", Trim(row("sendername")), flag), Con.GetCon())
                        ElseIf flag = "walletcorppo" Then
                            cmd = New MySqlCommand(String.Format("CALL kpmobile.getfullnamewallet('{0}','{1}');", Trim(row("receivername")), flag), Con.GetCon())
                        ElseIf flag = "custid" Then
                            cmd = New MySqlCommand(String.Format("CALL kpmobile.getfullnamewallet('{0}','{1}');", Trim(row("custid")), flag), Con.GetCon())
                        ElseIf flag = "custname" Then
                            cmd = New MySqlCommand(String.Format("CALL kpmobile.getfullnamewallet('{0}','{1}');", Trim(row("customername")), flag), Con.GetCon())
                        ElseIf flag = "walletno" Then
                            cmd = New MySqlCommand(String.Format("CALL kpmobile.getfullnamewallet('{0}','{1}');", Trim(row("walletno")), flag), Con.GetCon())
                        ElseIf flag = "seccomwalletload" Then
                            cmd = New MySqlCommand(String.Format("CALL kpmobile.getfullnamewallet('{0}','{1}');", Trim(row("custid")), flag), Con.GetCon())
                        ElseIf flag = "walletloadbatch" Then
                            cmd = New MySqlCommand(String.Format("CALL kpmobile.getfullnamewallet('{0}','{1}');", Trim(row("kptn")), flag), Con.GetCon())
                        End If
                    Else
                        'Con.OpenCon("KPMLWallet")
                        If flag = "username" Then
                            'cmd = New MySqlCommand(String.Format("CALL KPWalletReportsSP.getfullnamewallet('{0}','{1}');", Trim(row("username")), flag), Con.GetCon())
                            cmd = New MySqlCommand(String.Format("CALL getfullnamewallet('{0}','{1}');", Trim(row("username")), flag), Con.GetCon())
                        ElseIf flag = "operator" Then
                            'cmd = New MySqlCommand(String.Format("CALL KPWalletReportsSP.getfullnamewallet('{0}','{1}');", Trim(row("operator")), flag), Con.GetCon())
                            cmd = New MySqlCommand(String.Format("CALL getfullnamewallet('{0}','{1}');", Trim(row("operator")), flag), Con.GetCon())
                        ElseIf flag = "walletload" Then
                            'cmd = New MySqlCommand(String.Format("CALL KPWalletReportsSP.getFNWwalletload('{0}','{1}','{2}');", Trim(row("receivername")), Trim(row("custid")), flag), Con.GetCon())
                            cmd = New MySqlCommand(String.Format("CALL getFNWwalletload('{0}','{1}','{2}');", Trim(row("receivername")), Trim(row("custid")), flag), Con.GetCon())
                        ElseIf flag = "xpreswalletpo" Then
                            'cmd = New MySqlCommand(String.Format("CALL KPWalletReportsSP.getfullnamewallet('{0}','{1}');", Trim(row("operatorid")), flag), Con.GetCon())
                            cmd = New MySqlCommand(String.Format("CALL getfullnamewallet('{0}','{1}');", Trim(row("operatorid")), flag), Con.GetCon())
                        ElseIf flag = "sendername" Then
                            'cmd = New MySqlCommand(String.Format("CALL KPWalletReportsSP.getfullnamewallet('{0}','{1}');", Trim(row("sendername")), flag), Con.GetCon())
                            cmd = New MySqlCommand(String.Format("CALL getfullnamewallet('{0}','{1}');", Trim(row("sendername")), flag), Con.GetCon())
                        ElseIf flag = "walletcorppo" Then
                            'cmd = New MySqlCommand(String.Format("CALL KPWalletReportsSP.getfullnamewallet('{0}','{1}');", Trim(row("receivername")), flag), Con.GetCon())
                            cmd = New MySqlCommand(String.Format("CALL getfullnamewallet('{0}','{1}');", Trim(row("receivername")), flag), Con.GetCon())
                        ElseIf flag = "custid" Then
                            'cmd = New MySqlCommand(String.Format("CALL KPWalletReportsSP.getfullnamewallet('{0}','{1}');", Trim(row("custid")), flag), Con.GetCon())
                            cmd = New MySqlCommand(String.Format("CALL getfullnamewallet('{0}','{1}');", Trim(row("custid")), flag), Con.GetCon())
                        ElseIf flag = "custname" Then
                            'cmd = New MySqlCommand(String.Format("CALL KPWalletReportsSP.getfullnamewallet('{0}','{1}');", Trim(row("customername")), flag), Con.GetCon())
                            cmd = New MySqlCommand(String.Format("CALL getfullnamewallet('{0}','{1}');", Trim(row("customername")), flag), Con.GetCon())
                        ElseIf flag = "walletno" Then
                            'cmd = New MySqlCommand(String.Format("CALL KPWalletReportsSP.getfullnamewallet('{0}','{1}');", Trim(row("walletno")), flag), Con.GetCon())
                            cmd = New MySqlCommand(String.Format("CALL getfullnamewallet('{0}','{1}');", Trim(row("walletno")), flag), Con.GetCon())
                        ElseIf flag = "seccomwalletload" Then
                            'cmd = New MySqlCommand(String.Format("CALL KPWalletReportsSP.getfullnamewallet('{0}','{1}');", Trim(row("custid")), flag), Con.GetCon())
                            cmd = New MySqlCommand(String.Format("CALL getfullnamewallet('{0}','{1}');", Trim(row("custid")), flag), Con.GetCon())
                        ElseIf flag = "walletloadbatch" Then
                            'cmd = New MySqlCommand(String.Format("CALL KPWalletReportsSP.getfullnamewallet('{0}','{1}');", Trim(row("kptn")), flag), Con.GetCon())
                            cmd = New MySqlCommand(String.Format("CALL getfullnamewallet('{0}','{1}');", Trim(row("kptn")), flag), Con.GetCon())
                        End If
                    End If
                   
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        If flag = "operator" Then
                            dt.Rows(counter)("operator") = UCase(If(Not IsDBNull(dr.Item("customername")), Trim(dr.Item("customername")), "-"))
                        ElseIf flag = "sendername" Then
                            dt.Rows(counter)("sendername") = UCase(If(Not IsDBNull(dr.Item("customername")), Trim(dr.Item("customername")), "-"))
                        ElseIf flag = "seccomwalletload" Then
                            dt.Rows(counter)("walletno") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                        ElseIf flag = "walletno" Then
                            dt.Rows(counter)("sendername") = UCase(If(Not IsDBNull(dr.Item("customername")), Trim(dr.Item("customername")), "-"))
                            dt.Rows(counter)("receivername") = UCase(If(Not IsDBNull(dr.Item("customername")), Trim(dr.Item("customername")), "-"))
                        ElseIf flag = "walletload" Then
                            dt.Rows(counter)("custid") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                        ElseIf flag = "walletloadbatch" Then
                            dt.Rows(counter)("custid") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                        Else
                            dt.Rows(counter)("customername") = UCase(If(Not IsDBNull(dr.Item("customername")), Trim(dr.Item("customername")), "-"))
                            dt.Rows(counter)("walletno") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                            dt.Rows(counter)("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
                            dt.Rows(counter)("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                        End If
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1
                    'Con.CloseCon()


                    '_____________________________________________________________________________________________

                    'Con.OpenCon("KPMLWalletEmp")

                    'If flag = "username" Then
                    '    cmd = New MySqlCommand(String.Format("SELECT CONCAT(lastname,', ',firstname,' ',middlename) AS customername,walletno,username,custid FROM `kpmobile`.`mobileaccounts` WHERE username='{0}' limit 1;", Trim(row("username"))), Con.GetCon())
                    'ElseIf flag = "operator" Then
                    '    cmd = New MySqlCommand(String.Format("SELECT CONCAT(lastname,', ',firstname,' ',middlename) AS customername,walletno,username,custid FROM `kpmobile`.`mobileaccounts` WHERE username='{0}' limit 1;", Trim(row("operator"))), Con.GetCon())
                    'ElseIf flag = "walletload" Then
                    '    cmd = New MySqlCommand(String.Format("SELECT CONCAT(lastname,', ',firstname,' ',middlename) AS customername,walletno,username,custid FROM `kpmobile`.`mobileaccounts` WHERE CONCAT(lastname,', ',firstname,' ',middlename)='{0}' and custid='{1}' limit 1;", Trim(row("receivername")), Trim(row("custid"))), Con.GetCon())
                    'ElseIf flag = "xpreswalletpo" Then
                    '    cmd = New MySqlCommand(String.Format("SELECT CONCAT(lastname,', ',firstname,' ',middlename) AS customername,walletno,username,custid FROM `kpmobile`.`mobileaccounts` WHERE username='{0}' limit 1;", Trim(row("operatorid"))), Con.GetCon())
                    'ElseIf flag = "sendername" Then
                    '    cmd = New MySqlCommand(String.Format("SELECT CONCAT(lastname,', ',firstname,' ',middlename) AS customername,walletno,username,custid FROM `kpmobile`.`mobileaccounts` WHERE username='{0}' limit 1;", Trim(row("sendername"))), Con.GetCon())
                    'ElseIf flag = "walletcorppo" Then
                    '    cmd = New MySqlCommand(String.Format("SELECT CONCAT(lastname,', ',firstname,' ',middlename) AS customername,walletno,username,custid FROM `kpmobile`.`mobileaccounts` WHERE CONCAT(lastname,', ',firstname,' ',middlename)='{0}' or CONCAT(firstname,' ',middlename,' ',lastname)='{0}' limit 1;", Trim(row("receivername"))), Con.GetCon())
                    'ElseIf flag = "custid" Then
                    '    cmd = New MySqlCommand(String.Format("SELECT CONCAT(lastname,', ',firstname,' ',middlename) AS customername,walletno,username,custid FROM `kpmobile`.`mobileaccounts` WHERE custid='{0}' limit 1;", Trim(row("custid"))), Con.GetCon())
                    'ElseIf flag = "custname" Then
                    '    cmd = New MySqlCommand(String.Format("SELECT CONCAT(lastname,', ',firstname,' ',middlename) AS customername,walletno,username,custid FROM `kpmobile`.`mobileaccounts` WHERE CONCAT(lastname,', ',firstname,' ',middlename)='{0}' or CONCAT(firstname,' ',middlename,' ',lastname)='{0}' limit 1;", Trim(row("customername"))), Con.GetCon())
                    'ElseIf flag = "walletno" Then
                    '    cmd = New MySqlCommand(String.Format("SELECT CONCAT(lastname,', ',firstname,' ',middlename) AS customername,walletno,username,custid FROM `kpmobile`.`mobileaccounts` WHERE walletno='{0}' limit 1;", Trim(row("walletno"))), Con.GetCon())
                    'ElseIf flag = "seccomwalletload" Then
                    '    cmd = New MySqlCommand(String.Format("SELECT walletno FROM `kpmobile`.`mobileaccounts` WHERE custid='{0}' limit 1;", Trim(row("custid"))), Con.GetCon())
                    'End If
                    'cmd.CommandTimeout = 0
                    'dr = cmd.ExecuteReader
                    'dt.Rows(counter).BeginEdit()
                    'If dr.HasRows() Then
                    '    dr.Read()
                    '    If flag = "operator" Then
                    '        dt.Rows(counter)("operator") = UCase(If(Not IsDBNull(dr.Item("customername")), Trim(dr.Item("customername")), "-"))
                    '    ElseIf flag = "sendername" Then
                    '        dt.Rows(counter)("sendername") = UCase(If(Not IsDBNull(dr.Item("customername")), Trim(dr.Item("customername")), "-"))
                    '    ElseIf flag = "seccomwalletload" Then
                    '        dt.Rows(counter)("walletno") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                    '    ElseIf flag = "walletno" Then
                    '        dt.Rows(counter)("sendername") = UCase(If(Not IsDBNull(dr.Item("customername")), Trim(dr.Item("customername")), "-"))
                    '        dt.Rows(counter)("receivername") = UCase(If(Not IsDBNull(dr.Item("customername")), Trim(dr.Item("customername")), "-"))
                    '    ElseIf flag = "walletload" Then
                    '        dt.Rows(counter)("custid") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                    '    Else
                    '        dt.Rows(counter)("customername") = UCase(If(Not IsDBNull(dr.Item("customername")), Trim(dr.Item("customername")), "-"))
                    '        dt.Rows(counter)("walletno") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                    '        dt.Rows(counter)("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
                    '        dt.Rows(counter)("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                    '    End If
                    'End If
                    'dt.Rows(counter).EndEdit()
                    'dt.AcceptChanges()
                    'dr.Close()
                    'counter = counter + 1
                    'Con.CloseCon()

                Next
		Con.CloseCon()
            End Using
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + cmd.CommandText.ToString() + " getfullnamewallet")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub

    Public Sub getwalletno(ByVal partnerID As String)
        Try

            Con.OpenCon("KPMLWallet")

            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    'cmd = New MySqlCommand(String.Format("SELECT walletno FROM `kpmobile`.`mobilelogin` WHERE username='{0}' limit 1;", partnerID), Con.GetCon())
                    'cmd = New MySqlCommand(String.Format("CALL KPWalletReportsSP.GetWalletno('{0}'))", partnerID), Con.GetCon())
                    cmd = New MySqlCommand(String.Format("CALL GetWalletno('{0}'))", partnerID), Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("operator") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1

                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString())
            'GetMessage(ex.ToString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    Public Sub ElaodSname(ByVal dt As DataTable)
        Try
            Con.OpenCon("KPMLWallet")
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    cmd = New MySqlCommand(String.Format("CALL EloadSname('{0}');", Trim(row("sendername"))), Con.GetCon())
                    kplog.Info(cmd.CommandText.ToString())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("custid") = UCase(If(Not IsDBNull(dr.Item("customername")), Trim(dr.Item("customername")), "-"))
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1
                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    Public Sub getwalletid(ByVal dt As DataTable)
        Try
            If ReportType = 10 Then
                Con.OpenCon("KPMLWalletEmp")
            Else
                Con.OpenCon("KPMLWallet")
            End If
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    'cmd = New MySqlCommand(String.Format("SELECT walletno FROM `kpmobile`.`mobilelogin` WHERE username='{0}' limit 1;", Trim(row("operator"))), Con.GetCon())
                    'cmd = New MySqlCommand(String.Format("SELECT walletno FROM `kpmobile`.`mobilelogin` WHERE username='{0}' limit 1;", Trim(row("operator"))), Con.GetCon())
                    'cmd = New MySqlCommand(String.Format("CALL KPWalletReportsSP.GetWalletno('{0}');", Trim(row("operator"))), Con.GetCon())
                    cmd = New MySqlCommand(String.Format("CALL GetWalletno('{0}');", Trim(row("operator"))), Con.GetCon())
                    kplog.Info(cmd.CommandText.ToString())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("operator") = UCase(If(Not IsDBNull(dr.Item("walletid")), Trim(dr.Item("walletid")), "-"))
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1

                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString())
            'GetMessage(ex.ToString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    Public Sub getwalletIdforPayor(ByVal dt As DataTable)
        Try
            If ReportType = 10 Then
                Con.OpenCon("KPMLWalletEmp")
            Else
                Con.OpenCon("KPMLWallet")
            End If
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    'cmd = New MySqlCommand(String.Format("SELECT walletno as PayorWalletID FROM `kpmobile`.`mobilelogin` WHERE username='{0}' limit 1;", Trim(row("Operator"))), Con.GetCon())
                    'cmd = New MySqlCommand(String.Format("SELECT walletno as PayorWalletID FROM `kpmobile`.`mobilelogin` WHERE username='{0}' limit 1;", Trim(row("Operator"))), Con.GetCon())
                    'cmd = New MySqlCommand(String.Format("CALL KPWalletReportsSP.GetWalletno('{0}');", Trim(row("operator"))), Con.GetCon())
                    cmd = New MySqlCommand(String.Format("CALL GetWalletno('{0}');", Trim(row("operator"))), Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("PayorWalletID") = UCase(If(Trim(dr.Item("walletid")), "-"))
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1

                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString())
            'GetMessage(ex.ToString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
   Public Sub getfullname(ByVal dt As DataTable)
        Try
            
            If ReportType = 10 Then
                Con.OpenCon("KPMLWalletEmp")
            Else
                Con.OpenCon("KPMLWallet")
            End If
                Dim counter As Integer = 0
                Using Con.GetCon()
                    For Each row As DataRow In dt.Rows
                    'cmd = New MySqlCommand(String.Format("SELECT CONCAT(firstname,' ',middlename,' ',lastname) AS fullname FROM `kpmobile`.`mobilelogin` WHERE walletno='{0}' limit 1;", Trim(row("operator"))), Con.GetCon())
                    'cmd = New MySqlCommand(String.Format("CALL `KPWalletReportsSP`.`GetFullname`('{0}')", Trim(row("operator"))), Con.GetCon())
                    cmd = New MySqlCommand(String.Format("CALL GetFullname('{0}')", Trim(row("operator"))), Con.GetCon())
                    cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        dt.Rows(counter).BeginEdit()
                        If dr.HasRows() Then
                            dr.Read()
                        dt.Rows(counter)("fullname") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), "-"))
                        End If
                        dt.Rows(counter).EndEdit()
                        dt.AcceptChanges()
                        dr.Close()
                        counter = counter + 1


                    Next
                End Using
                Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString())
            'GetMessage(ex.ToString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    Public Sub getrcvrwalletid(ByVal dt As DataTable)
        Try
            'If ReportType = 10 Then
            '    Con.OpenCon("KPMLWalletEmp")
            'Else
            '    Con.OpenCon("KPMLWallet")
            'End If

            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    Con.OpenCon("KPMLWallet")
                    cmd = New MySqlCommand(String.Format("CALL kpmobile.`getrcvrwalletid`('{0}','{1}')", Trim(row("kptn")), Trim(row("accountid"))), Con.GetCon())
                    'cmd = New MySqlCommand(String.Format("SELECT walletno FROM  `kpmobile`.`logs` WHERE kptn = '{0}' AND walletno != '{1}' limit 1;", Trim(row("kptn")), Trim(row("accountid"))), Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("recvrwalletid") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    Con.CloseCon()
                    '___________________________________________________________________________
                    'Con.OpenCon("KPMLWalletEmp")

                    'cmd = New MySqlCommand(String.Format("SELECT walletno FROM  `kpmobile`.`logs` WHERE kptn = '{0}' AND walletno != '{1}' limit 1;", Trim(row("kptn")), Trim(row("accountid"))), Con.GetCon())

                    'cmd.CommandTimeout = 0
                    'dr = cmd.ExecuteReader
                    'dt.Rows(counter).BeginEdit()
                    'If dr.HasRows() Then
                    '    dr.Read()
                    '    dt.Rows(counter)("recvrwalletid") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                    'End If
                    'dt.Rows(counter).EndEdit()
                    'dt.AcceptChanges()
                    'dr.Close()
                    'counter = counter + 1
                    'Con.CloseCon()
                Next
            End Using
            '  Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + cmd.CommandText.ToString() + " getrcvrwalletid")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    Public Sub getrcvrwalletid1(ByVal dt As DataTable)
        Try
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    If ReportType = 10 Then
                        Con.OpenCon("KPMLWalletEmp")
                    Else
                        Con.OpenCon("KPMLWallet")
                    End If
                    'cmd = New MySqlCommand(String.Format("SELECT walletno FROM  `kpmobile`.`mobilelogin` k WHERE concat(k.lastname,', ',k.firstname,' ',k.middlename) = '{0}' limit 1;", Trim(row("receivername"))), Con.GetCon())
                    'cmd = New MySqlCommand(String.Format("CALL KPWalletReportsSP.`getrcvrwalletid1`('{0}')", Trim(row("receivername"))), Con.GetCon())
                    cmd = New MySqlCommand(String.Format("CALL getrcvrwalletid1('{0}')", Trim(row("receivername"))), Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("receiverwalletno") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1
                    Con.CloseCon()
                    '___________________________________________________________________________
                    'Con.OpenCon("KPMLWalletEmp")

                    'cmd = New MySqlCommand(String.Format("SELECT walletno FROM  `kpmobile`.`mobileaccounts` k WHERE concat(k.lastname,', ',k.firstname,' ',k.middlename) = '{0}' limit 1;", Trim(row("receivername"))), Con.GetCon())
                    'cmd.CommandTimeout = 0
                    'dr = cmd.ExecuteReader
                    'dt.Rows(counter).BeginEdit()
                    'If dr.HasRows() Then
                    '    dr.Read()
                    '    dt.Rows(counter)("receiverwalletno") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                    'End If
                    'dt.Rows(counter).EndEdit()
                    'dt.AcceptChanges()
                    'dr.Close()
                    'counter = counter + 1
                    'Con.CloseCon()
                Next
            End Using
            '  Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + cmd.CommandText.ToString() + " getrcvrwalletid1")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub

    Public Sub getwalletfee(ByVal dt As DataTable)
        Try
            If ReportType = 10 Then
                Con.OpenCon("KPMLWalletEmp")
            Else
                Con.OpenCon("KPMLWallet")
            End If
            Dim counter As Integer = 0
            Dim min As Integer = 0
            Dim max As Integer = 0
            Dim wtable1 As Integer
            Dim dbname As String = String.Empty
            Dim intwallet As Integer
            Dim walletstr As String = String.Empty
            Dim tablename As String = String.Empty

            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    walletstr = Trim(row.Item("operator"))
                    'databasewallet = walletUserconf(walletstr)
                    'Dim conn As MySqlConnection = databasewallet.getConnection
                    'Using conn

                    'intwallet = Convert.ToInt32(walletstr.Substring(walletstr.Length - 7))
                    'wtable1 = intwallet Mod 100
                    'If wtable1 = 0 Then
                    '    min = intwallet - 99
                    '    max = intwallet
                    'Else
                    '    min = (intwallet - wtable1) + 1
                    '    max = min + 99
                    'End If
                    'dbname = "wallet" + min.ToString() + "_" + max.ToString() + ""
                    'tablename = "walletno" + intwallet.ToString() + ""
                    'conn.Open()
                    'cmd = New MySqlCommand(String.Format("SELECT IF(conveniencefee IS NULL,0.00,conveniencefee) AS conveniencefee FROM {0}.{1} Where kptn= '{2}' and walletno = '{3}' ", dbname, tablename, row.Item("kptn"), row.Item("operator")), conn)
                    'cmd = New MySqlCommand(String.Format("CALL KPWalletReportsSP.`getwalletfee`('{0}','{1}','{2}','{3}') ", dbname, tablename, row.Item("kptn"), row.Item("operator")), Con.GetCon())
                    cmd = New MySqlCommand(String.Format("CALL getwalletfee('{0}','{1}','{2}','{3}') ", dbname, tablename, row.Item("kptn"), row.Item("operator")), Con.GetCon())
                    kplog.Info(cmd.CommandText.ToString())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("conveniencefee") = UCase(If(Not IsDBNull(dr.Item("conveniencefee")), Trim(dr.Item("conveniencefee")), "-"))
                    End If

                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1
                    'End Using
                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString())
            'GetMessage(ex.ToString())
            GetMessage(cmd.CommandText())
        End Try
    End Sub
    Public Sub getConvenienceFee(ByVal dt As DataTable)
        Try
                If ReportType = 10 Then
                Con.OpenCon("KPMLWalletEmp")
            Else
                Con.OpenCon("KPMLWallet")
            End If
            Dim counter As Integer = 0
            Dim min As Integer = 0
            Dim max As Integer = 0
            Dim wtable1 As Integer
            Dim dbname As String = String.Empty
            Dim intwallet As Integer
            Dim walletstr As String = String.Empty
            Dim tablename As String = String.Empty

            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    If IsDBNull(row.Item("PayorWalletID")) Then

                        GoTo proceed
                    Else
                        'walletstr = Trim(row.Item("PayorWalletID"))
                        'databasewallet = walletUserconf(walletstr)
                        GoTo convenience
                    End If
convenience:
                    'intwallet = Convert.ToInt32(walletstr.Substring(walletstr.Length - 7))
                    'wtable1 = intwallet Mod 100
                    'If wtable1 = 0 Then
                    '    min = intwallet - 99
                    '    max = intwallet
                    'Else
                    '    min = (intwallet - wtable1) + 1
                    '    max = min + 99
                    'End If
                    'dbname = "wallet" + min.ToString() + "_" + max.ToString() + ""
                    'tablename = "walletno" + intwallet.ToString() + ""

                    'Dim conn As MySqlConnection = databasewallet.getConnection
                    'Using conn
                    'conn.Open()
                    'cmd = New MySqlCommand(String.Format("CAll kpmobile.conveniencefee('{0}','{1}','{2}','{3}') ", dbname, tablename, row.Item("ReferenceNo"), row.Item("PayorWalletID")), conn)
                    'cmd = New MySqlCommand(String.Format("CALL KPWalletReportsSP.`getwalletfee`('{0}','{1}','{2}','{3}') ", dbname, tablename, row.Item("ReferenceNo"), row.Item("PayorWalletID")), Con.GetCon())
                    cmd = New MySqlCommand(String.Format("CALL getwalletfee('{0}','{1}','{2}','{3}') ", dbname, tablename, row.Item("ReferenceNo"), row.Item("PayorWalletID")), Con.GetCon())
                    kplog.Info(cmd.CommandText.ToString())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("conveniencefee") = UCase(If(Not IsDBNull(dr.Item("conveniencefee")) Or IsDBNull(dr.Item("conveniencefee")), Trim(dr.Item("conveniencefee")), "0.00"))
                    End If

                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1
                    'End Using
                    GoTo wallet
proceed:

                    dt.Rows(counter).BeginEdit()
                    If IsDBNull(row.Item("PayorWalletID")) Then
                        dt.Rows(counter)("conveniencefee") = UCase("0.00")
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1


wallet:
                Next
            End Using
            Con.CloseCon()


        Catch ex As Exception
            kplog.Error(ex.ToString())
            'GetMessage(ex.ToString())
            GetMessage(cmd.CommandText())
        End Try
    End Sub
    Public Sub getwalletSecurity(ByVal dt As DataTable)
        Try
            Con.OpenCon("KPMLWallet")
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    'cmd = New MySqlCommand(String.Format("CALL KPWalletReportsSP.getwalletSecurity('{0}');", Trim(row("operatorid"))), Con.GetCon())
                    cmd = New MySqlCommand(String.Format("CALL getwalletSecurity('{0}');", Trim(row("operatorid"))), Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("walletno") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1
                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + cmd.CommandText.ToString() + " getwalletSecurity")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    Public Sub getBatchUploadSendername(ByVal dt As DataTable)
        Try
            Con.OpenCon("KPMLWallet")
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    'cmd = New MySqlCommand(String.Format("SELECT CONCAT(firstname,' ',lastname) AS sendername FROM `kpmobile`.`mobileaccounts` WHERE walletno = '{0}';", accountID.Trim), Con.GetCon())
                    'cmd = New MySqlCommand(String.Format("CALL KPWalletReportsSP.`getBatchUploadSendername`('{0}')", accountID.Trim), Con.GetCon())
                    cmd = New MySqlCommand(String.Format("CALL getBatchUploadSendername('{0}')", accountID.Trim), Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1
                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + cmd.CommandText.ToString() + " getBatchUploadSendername")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    Public Sub getrcvrname(ByVal dt As DataTable)
        Try

            Dim flag As Boolean = False
            Dim notSpecific As Boolean = False
            Dim counter As Integer = 0
            Dim tbl As String = ""
            Dim tbl1 As String = ""
            Dim year As String = ""
            Dim year1 As String = ""
            Dim mo As String = ""
            Dim d As String = ""
            Dim _date As Date
            Dim _date1 As Date
            Dim kptn As String = String.Empty
            Dim connection As Integer = 1
            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    If Trim(row("transtype")).ToUpper = "SENDOUT" Or Trim(row("transtype")).ToUpper = "CANCEL SENDOUT" Then
                        Try
                            flag = False
                            notSpecific = False
                            _date = Trim(row("transdate"))
                            kptn = Trim(row("kptn"))
                            tbl = _date.ToString("MMdd")
                            year = _date.ToString("yyyy")

                            mo = _date.ToString("MM")
                            d = _date.ToString("dd")
                            If kptn.Substring(0, 3) = "MLX" Then
                                flag = True
                                notSpecific = False
                                Con.OpenCon("KPMLExpressA")
                                cmd = New MySqlCommand(String.Format("SELECT Receivername,senderbranchid AS branch FROM sendout{0}{2}.sendout{0}{2} WHERE kptnno = '{1}' and year(transdate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())
                            
                            ElseIf kptn.Substring(0, 3) = "MLP" Then
                                flag = True
                                notSpecific = False
                                Con.OpenCon("KPMLWallet")
                                'cmd = New MySqlCommand(String.Format("CALL KPWalletReportsSP.getrcvrnameWSO('{0}','{1}','{2}') ", tbl, Trim(row("kptn")), year), Con.GetCon())
                                cmd = New MySqlCommand(String.Format("CALL getrcvrnameWSO('{0}','{1}','{2}') ", tbl, Trim(row("kptn")), year), Con.GetCon())
                            ElseIf kptn.Substring(0, 3) = "ELX" Then
                                flag = True
                                notSpecific = False
                                Con.OpenCon("MLEload")
                                cmd = New MySqlCommand(String.Format("SELECT mobileno AS Receivername,b.branchname AS branch FROM `ELoadTransactions`.`TransLog{0}` s " &
                                                                    "INNER JOIN kpusers.branches b ON b.branchcode = s.branchcode AND b.zonecode = s.zonecode " &
                                                                     "WHERE transno = '{1}' and day(transdate) ='{2}' and year(transdate) = '{3}' ", mo, Trim(row("kptn")), d, year), Con.GetCon())
                            ElseIf kptn.Substring(0, 3) = "BPX" Then
                                flag = True
                                notSpecific = False
                                Con.OpenCon("KPBillsPaymentA")
                                cmd = New MySqlCommand(String.Format("SELECT c.accountname AS Receivername,b.branchname  AS branch FROM `kpbillspayment`.`sendout{0}` p " +
                                                                     "INNER JOIN kpadminpartners.accountlist c ON c.accountid = p.companyid " +
                                                                     "INNER JOIN kpusers.branches b ON b.branchcode = p.branchcode AND b.zonecode = p.zonecode " +
                                                                     "WHERE kptnno = '{1}' AND YEAR(transdate) = '{2}'; ", tbl, Trim(row("kptn")), year), Con.GetCon())
                            Else
                                flag = True
                                notSpecific = False
                                Con.OpenCon("KPMLWallet")
                                'cmd = New MySqlCommand(String.Format("CALL KPWalletReportsSP.getrcvrnameWSO('{0}','{1}','{2}') ", tbl, Trim(row("kptn")), year), Con.GetCon())
                                cmd = New MySqlCommand(String.Format("CALL getrcvrnameWSO('{0}','{1}','{2}') ", tbl, Trim(row("kptn")), year), Con.GetCon())
                            End If
                        Catch ex As Exception
                            kplog.Fatal("Error in SENDOUT -- " + Con.GetCon.ConnectionString())
                        End Try
                    ElseIf Trim(row("transtype")).ToUpper = "SENDOUT COMMISSION" Or Trim(row("transtype")).ToUpper = "CANCEL SENDOUT COMMISSION" Then
                        Try
                            flag = False
                            _date = Trim(row("transdate"))
                            kptn = Trim(row("kptn"))
                            tbl = _date.ToString("MMdd")
                            year = _date.ToString("yyyy")
                            mo = _date.ToString("MM")
                            d = _date.ToString("dd")
                            If kptn.Substring(0, 3) = "MLX" Then
                                flag = True
                                Con.OpenCon("KPMLExpressA")
                                cmd = New MySqlCommand(String.Format("SELECT Receivername,senderbranchid AS branch FROM sendout{0}{2}.sendout{0}{2} WHERE kptnno = '{1}' and year(transdate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())
                            ElseIf kptn.Substring(0, 3) = "MLW" Then
                                flag = True
                                Con.OpenCon("KPMLWallet")
                                'cmd = New MySqlCommand(String.Format("CALL KPWalletReportsSP.getrcvrnameWSOcom('{0}','{1}','{2}')", tbl, Trim(row("kptn")), year), Con.GetCon())
                                cmd = New MySqlCommand(String.Format("CALL getrcvrnameWSOcom('{0}','{1}','{2}')", tbl, Trim(row("kptn")), year), Con.GetCon())
                            ElseIf kptn.Substring(0, 3) = "MLP" Then
                                flag = True
                                Con.OpenCon("KPMLWallet")
                                'cmd = New MySqlCommand(String.Format("CALL KPWalletReportsSP.getrcvrnameWSOcom('{0}','{1}','{2}')", tbl, Trim(row("kptn")), year), Con.GetCon())
                                cmd = New MySqlCommand(String.Format("CALL getrcvrnameWSOcom('{0}','{1}','{2}')", tbl, Trim(row("kptn")), year), Con.GetCon())
                            ElseIf kptn.Substring(0, 3) = "ELX" Then
                                flag = True
                                notSpecific = False
                                Con.OpenCon("MLEload")
                                cmd = New MySqlCommand(String.Format("SELECT mobileno AS Receivername,b.branchname AS branch FROM `ELoadTransactions`.`TransLog{0}` s " &
                                                                    "INNER JOIN kpusers.branches b ON b.branchcode = s.branchcode AND b.zonecode = s.zonecode " &
                                                                     "WHERE transno = '{1}' and day(transdate) ='{2}' and year(transdate) = '{3}' ", mo, Trim(row("kptn")), d, year), Con.GetCon())
                            ElseIf kptn.Substring(0, 3) = "BPX" Then
                                flag = True
                                Con.OpenCon("KPBillsPaymentA")
                                cmd = New MySqlCommand(String.Format("SELECT c.accountname AS Receivername,b.branchname  AS branch FROM `kpbillspayment`.`sendout{0}` p " +
                                                                     "INNER JOIN kpadminpartners.accountlist c ON c.accountid = p.companyid " +
                                                                     "INNER JOIN kpusers.branches b ON b.branchcode = p.branchcode AND b.zonecode = p.zonecode " +
                                                                     "WHERE kptnno = '{1}' AND YEAR(transdate) = '{2}'; ", tbl, Trim(row("kptn")), year), Con.GetCon())
                            End If
                        Catch ex As Exception
                            kplog.Fatal("Error in SENDOUT COMMISSION or Cancel SO Commission -- " + Con.GetCon.ConnectionString())
                        End Try
                    ElseIf Trim(row("transtype")).ToUpper = "PAYOUT" Or Trim(row("transtype")).ToUpper = "CANCEL PAYOUT" Then
payout:
                        Try
                            flag = False
                            notSpecific = False
                            _date = Trim(row("transdate"))
                            _date1 = Trim(row("transdate"))
                            tbl = _date.ToString("MMdd")
                            year = _date.ToString("yyyy")
                            kptn = Trim(row("kptn")).ToUpper
                            'If kptn.Substring(0, 3) = "MLA" Then
                            '    flag = True
                            '    notSpecific = False
                            '    Con.OpenCon("RuralNet")
                            '    cmd = New MySqlCommand(String.Format("SELECT p.Receivername,s.branchname AS branch FROM payout{0}{2}.payout{0}{2} p " +
                            '                                         "INNER JOIN kpusers.branches s ON s.branchcode = p.branchcode AND s.zonecode = p.zonecode " +
                            '                                         "WHERE p.kptnno = '{1}'and year(p.claimeddate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())

                            If kptn.Substring(0, 5) = "MLAPI" Then
                                flag = True
                                notSpecific = False
                                Con.OpenCon("KPMLWallet")
                                'cmd = New MySqlCommand(String.Format("CAll KPWalletReportsSP.getrcvrnameWPOcom('{0}','{1}','{2}')", tbl, Trim(row("kptn")), year), Con.GetCon())
                                cmd = New MySqlCommand(String.Format("SELECT receivername,'CEBU HEAD OFFICE' AS branch FROM `KPPartnersExpress`.`apihistory` " +
                                                                      "WHERE kptn = '{1}'and year(txndate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())

                            ElseIf kptn.Substring(0, 3) = "UPL" Or kptn.Substring(0, 5) = "MLAPI" Then
                                flag = True
                                notSpecific = False
                                Con.OpenCon("KPMLWallet")
                                'cmd = New MySqlCommand(String.Format("CAll KPWalletReportsSP.getrcvrnameWPOcom('{0}','{1}','{2}')", tbl, Trim(row("kptn")), year), Con.GetCon())
                                cmd = New MySqlCommand(String.Format("SELECT receivername,'CEBU HEAD OFFICE' AS branch FROM `KPPartnersExpress`.`apihistory` " +
                                                                      "WHERE kptn = '{1}'and year(txndate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())
                            ElseIf kptn.Substring(0, 3) = "MLW" Then
                                flag = True
                                notSpecific = False
                                Con.OpenCon("KPMLWallet")
                                'cmd = New MySqlCommand(String.Format("CAll KPWalletReportsSP.getrcvrnameWPO('{0}','{1}','{2}')", tbl, Trim(row("kptn")), year), Con.GetCon())
                                cmd = New MySqlCommand(String.Format("CAll getrcvrnameWPO('{0}','{1}','{2}')", tbl, Trim(row("kptn")), year), Con.GetCon())
                            ElseIf kptn.Substring(0, 3) = "MLP" Then
                                flag = True
                                notSpecific = False
                                Con.OpenCon("KPMLWallet")
                                'cmd = New MySqlCommand(String.Format("CAll KPWalletReportsSP.getrcvrnameWPO('{0}','{1}','{2}')", tbl, Trim(row("kptn")), year), Con.GetCon())
                                cmd = New MySqlCommand(String.Format("CAll getrcvrnameWPO('{0}','{1}','{2}')", tbl, Trim(row("kptn")), year), Con.GetCon())
                            ElseIf kptn.Substring(0, 3) = "MLG" Then
                                '@RC
                                flag = True
                                notSpecific = False
                                Con.OpenCon("KPGLOBAL")
                                Dim datekptn = kptn.Substring(6, 2).ToString()
                                Dim monthkptn = kptn.Substring(19, 2).ToString()
                                Dim strquery3 As String = String.Empty
                                Dim drpayout As MySqlDataReader = Nothing
                                Dim dtablepayout As DataTable = New DataTable

                                Con2.OpenCon("KPGLOBAL")
                                Using Con2.GetCon()
                                    strquery3 = String.Format("SELECT DATE_FORMAT(sysmodified,'%m%d') AS datefpayout  FROM kpglobal.sendout{0}{1} WHERE kptnno = '{2}' LIMIT 1;", monthkptn, datekptn, Trim(row("kptn")))
                                    cmd = New MySqlCommand(strquery3, Con2.GetCon())
                                    cmd.CommandTimeout = 0
                                    drpayout = cmd.ExecuteReader
                                    If drpayout.HasRows() Then
                                        drpayout.Read()
                                        Dim payoutdate As String = drpayout.Item("datefpayout")
                                        cmd = New MySqlCommand(String.Format("SELECT Receivername,'Cebu Head Office' AS branch FROM kpglobal.payout{0}  " +
                                                                         "WHERE (kptnno = '{1}' OR oldkptnno ='{1}') and year(claimeddate) = '{2}';", payoutdate, Trim(row("kptn")), year), Con.GetCon())
                                        'End If
                                        'RC
                                        'note: kalibug ko asa kuha branchname ,tungud sa PAYOUT by WALLET = branchcode = MLW
                                        'note:PAYOUT BY Express =Branchcode = 001 -nya usa ra man iyang Classificastion which is PAYOUT
                                        'nag static kug value sa ZONECODE kay if mo payout si WALLET zero man ang ma insert
                                        'cmd = New MySqlCommand(String.Format("SELECT p.Receivername,p.branchcode AS branch FROM kpglobal.payout{0} p " +
                                        '"WHERE p.kptnno = '{1}'and year(p.claimeddate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())
                                    End If
                                End Using
                                Con2.CloseCon()
                                ElseIf kptn.Substring(0, 3) = "MLR" Then
                                    flag = True
                                    notSpecific = False
                                    Con.OpenCon("KP8DomesticB")
                                cmd = New MySqlCommand(String.Format("SELECT p.Receivername,s.branchname AS branch FROM kpdomestic{2}.payout{0} p " +
                                                                     "INNER JOIN kpusers.branches s ON s.branchcode = p.branchcode AND s.zonecode = p.zonecode " +
                                                                     "WHERE p.kptn = '{1}'and year(p.claimeddate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())
                            ElseIf kptn.Substring(0, 3) = "MLX" Then
                                '@RC
                                flag = True
                                notSpecific = False
                                Con.OpenCon("KPMLExpressA")
                                cmd = New MySqlCommand(String.Format("SELECT Receivername,sobranch AS branch FROM payout{0}{2}.payout{0}{2} WHERE (kptnno = '{1}'OR oldkptnno = '{1}') ;", tbl, Trim(row("kptn")), year), Con.GetCon())
                                Else
                                    flag = False
                                    If connection = 1 Then
                                        flag = True
                                        notSpecific = True
                                        Con.OpenCon("KPUsersA")
                                        cmd = New MySqlCommand(String.Format("SELECT p.Receivername,s.branchname AS branch FROM kpdomestic.payout{0} p " +
                                                                         "INNER JOIN kpusers.branches s ON s.branchcode = p.branchcode AND s.zonecode = p.zonecode " +
                                                                         "WHERE p.kptnno = '{1}' and year(p.claimeddate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())
                                    ElseIf connection = 2 Then
                                        flag = True
                                        notSpecific = True
                                        Con.OpenCon("KPFileUpload")
                                        cmd = New MySqlCommand(String.Format("SELECT p.Receivername,s.branchname AS branch FROM kppartners.payout{0} p " +
                                                                         "INNER JOIN kpusers.branches s ON s.branchcode = p.branchcode AND s.zonecode = p.zonecode " +
                                                                         "WHERE p.referenceno = '{1}' and year(p.claimeddate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())
                                    ElseIf connection = 3 Then
                                        flag = True
                                        notSpecific = True
                                        Con.OpenCon("KPAPINEW")
                                        cmd = New MySqlCommand(String.Format("SELECT p.Receivername,s.branchname AS branch FROM kppartners.payout{0} p " +
                                                                         "INNER JOIN kpusers.branches s ON s.branchcode = p.branchcode AND s.zonecode = p.zonecode " +
                                                                         "WHERE p.referenceno = '{1}' and year(p.claimeddate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())
                                    ElseIf connection = 4 Then
                                        flag = True
                                        notSpecific = True
                                        Con.OpenCon("KPAPINEW")
                                        cmd = New MySqlCommand(String.Format("SELECT p.Receivername,s.branchname AS branch FROM kppartnersSKY.payout{0} p " +
                                                                         "INNER JOIN kpusers.branches s ON s.branchcode = p.branchcode AND s.zonecode = p.zonecode " +
                                                                         "WHERE p.referenceno = '{1}' and year(p.claimeddate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())
                                    ElseIf connection = 5 Then
                                        flag = True
                                        notSpecific = True
                                        Con.OpenCon("KPAPINEW")
                                        cmd = New MySqlCommand(String.Format("SELECT p.Receivername,s.branchname AS branch FROM kppartnersWU.payout{0} p " +
                                                                         "INNER JOIN kpusers.branches s ON s.branchcode = p.branchcode AND s.zonecode = p.zonecode " +
                                                                         "WHERE p.referenceno = '{1}' and year(p.claimeddate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())
                                    ElseIf connection = 6 Then
                                        flag = True
                                        notSpecific = True
                                        Con.OpenCon("KPAPI")
                                        cmd = New MySqlCommand(String.Format("SELECT p.Receivername,s.branchname AS branch FROM kppartners.payout{0} p " +
                                                                         "INNER JOIN kpusers.branches s ON s.branchcode = p.branchcode AND s.zonecode = p.zonecode " +
                                                                         "WHERE p.referenceno = '{1}' and year(p.claimeddate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())
                                    ElseIf connection = 7 Then
                                        flag = True
                                        notSpecific = True
                                        Con.OpenCon("KPAPI")
                                        cmd = New MySqlCommand(String.Format("SELECT p.Receivername,s.branchname AS branch FROM kppartnersAUB.payout{0} p " +
                                                                         "INNER JOIN kpusers.branches s ON s.branchcode = p.branchcode AND s.zonecode = p.zonecode " +
                                                                         "WHERE p.kptn = '{1}' and year(p.claimeddate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())
                                    ElseIf connection = 8 Then
                                        flag = True
                                        notSpecific = True
                                        Con.OpenCon("KPWSC")
                                        cmd = New MySqlCommand(String.Format("SELECT p.Receivername,s.branchname AS branch FROM kppartners.payout{0} p " +
                                                                         "INNER JOIN kpusers.branches s ON s.branchcode = p.branchcode AND s.zonecode = p.zonecode " +
                                                                         "WHERE p.referenceno = '{1}' and year(p.claimeddate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())
                                    End If

                                End If
                        Catch ex As Exception
                            kplog.Fatal("Error in PAYOUT or PAYOUT CANCEL -- " + Con.GetCon.ConnectionString())
                        End Try
                        'cmd.CommandTimeout = 0
                        'dr = cmd.ExecuteReader
                        'dt.Rows(counter).BeginEdit()
                        'If dr.HasRows() Then
                        '    dr.Read()
                        '    dt.Rows(counter)("receivername") = UCase(If(Not IsDBNull(dr.Item("Receivername")), Trim(dr.Item("Receivername")), "-"))
                        '    dt.Rows(counter)("branch") = UCase(If(Not IsDBNull(dr.Item("sobranch")), Trim(dr.Item("sobranch")), "-"))
                        'End If
                        'dt.Rows(counter).EndEdit()
                        'dt.AcceptChanges()
                        'dr.Close()
                    ElseIf Trim(row("transtype")).ToUpper = "PAYOUT COMMISSION" Or Trim(row("transtype")).ToUpper = "CANCEL PAYOUT COMMISSION" Then
payoutcommission:
                        Try
                            flag = False
                            notSpecific = False
                            _date = Trim(row("transdate"))
                            _date1 = Trim(row("transdate"))
                            tbl = _date.ToString("MMdd")
                            year = _date.ToString("yyyy")
                            kptn = Trim(row("kptn")).ToUpper
                            'If kptn.Substring(0, 3) = "MLA" Then
                            '    flag = True
                            '    notSpecific = False
                            '    Con.OpenCon("RuralNet")
                            '    cmd = New MySqlCommand(String.Format("SELECT p.Receivername,s.branchname AS branch FROM payout{0}{2}.payout{0}{2} p " +
                            '                                         "INNER JOIN kpusers.branches s ON s.branchcode = p.branchcode AND s.zonecode = p.zonecode " +
                            '                                         "WHERE p.kptnno = '{1}'and year(p.claimeddate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())
                            If kptn.Substring(0, 5) = "MLAPI" Then
                                flag = True
                                notSpecific = False
                                Con.OpenCon("KPMLWallet")
                                'cmd = New MySqlCommand(String.Format("CAll KPWalletReportsSP.getrcvrnameWPOcom('{0}','{1}','{2}')", tbl, Trim(row("kptn")), year), Con.GetCon())
                                cmd = New MySqlCommand(String.Format("SELECT receivername,'CEBU HEAD OFFICE' AS branch FROM`KPPartnersExpress`.`apihistory` " +
                                                                      "WHERE kptn = '{1}'and year(txndate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())

                            ElseIf kptn.Substring(0, 3) = "UPL" Then
                                flag = True
                                notSpecific = False
                                Con.OpenCon("KPMLWallet")
                                'cmd = New MySqlCommand(String.Format("CAll KPWalletReportsSP.getrcvrnameWPOcom('{0}','{1}','{2}')", tbl, Trim(row("kptn")), year), Con.GetCon())
                                cmd = New MySqlCommand(String.Format("SELECT receivername,'CEBU HEAD OFFICE' AS branch FROM`KPPartnersExpress`.`apihistory` " +
                                                                      "WHERE kptn = '{1}'and year(txndate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())

                            ElseIf kptn.Substring(0, 3) = "MLW" Then
                                flag = True
                                notSpecific = False
                                Con.OpenCon("KPMLWallet")
                                'cmd = New MySqlCommand(String.Format("CAll KPWalletReportsSP.getrcvrnameWPOcom('{0}','{1}','{2}')", tbl, Trim(row("kptn")), year), Con.GetCon())
                                cmd = New MySqlCommand(String.Format("CAll getrcvrnameWPOcom('{0}','{1}','{2}')", tbl, Trim(row("kptn")), year), Con.GetCon())
                            ElseIf kptn.Substring(0, 3) = "MLP" Then
                                flag = True
                                notSpecific = False
                                Con.OpenCon("KPMLWallet")
                                'cmd = New MySqlCommand(String.Format("CAll KPWalletReportsSP.getrcvrnameWPOcom('{0}','{1}','{2}')", tbl, Trim(row("kptn")), year), Con.GetCon())
                                cmd = New MySqlCommand(String.Format("CAll getrcvrnameWPOcom('{0}','{1}','{2}')", tbl, Trim(row("kptn")), year), Con.GetCon())
                            ElseIf kptn.Substring(0, 3) = "MLG" Then
                                '@RC
                                'flag = True
                                'notSpecific = False
                                'Con.OpenCon("KPGLOBAL")
                                'cmd = New MySqlCommand(String.Format("SELECT p.Receivername,s.branchname AS branch FROM kpglobal.payout{0} p " +
                                '                                     "INNER JOIN kpusers.branches s ON s.branchcode = p.branchcode AND s.zonecode = p.zonecode " +
                                '                                     "WHERE p.kptnno = '{1}'and year(p.claimeddate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())
                                flag = True
                                notSpecific = False
                                Con.OpenCon("KPGLOBAL")
                                Dim datekptn = kptn.Substring(6, 2).ToString()
                                Dim monthkptn = kptn.Substring(19, 2).ToString()
                                Dim strquery3 As String = String.Empty
                                Dim drpayout As MySqlDataReader = Nothing
                                Dim dtablepayout As DataTable = New DataTable

                                Con2.OpenCon("KPGLOBAL")
                                Using Con2.GetCon()
                                    strquery3 = String.Format("SELECT DATE_FORMAT(sysmodified,'%m%d') AS datefpayout  FROM kpglobal.sendout{0}{1} WHERE kptnno = '{2}' LIMIT 1;", monthkptn, datekptn, Trim(row("kptn")))
                                    cmd = New MySqlCommand(strquery3, Con2.GetCon())
                                    cmd.CommandTimeout = 0
                                    drpayout = cmd.ExecuteReader
                                    If drpayout.HasRows() Then
                                        drpayout.Read()
                                        Dim payoutdate As String = drpayout.Item("datefpayout")
                                        cmd = New MySqlCommand(String.Format("SELECT p.Receivername,s.branchname AS branch FROM kpglobal.payout{0} p " +
                                                                         "INNER JOIN kpusers.branches s ON s.branchcode =IF( p.branchcode= 'MLW','001', p.branchcode) AND s.zonecode = IF(p.zonecode ='0','1',p.zonecode) " +
                                                                         "WHERE (p.kptnno = '{1}' OR p.oldkptnno ='{1}') and year(p.claimeddate) = '{2}';", payoutdate, Trim(row("kptn")), year), Con.GetCon())
                                    End If
                                End Using
                                Con2.CloseCon()



                            ElseIf kptn.Substring(0, 3) = "MLR" Then
                                flag = True
                                notSpecific = False
                                Con.OpenCon("KP8DomesticB")
                                cmd = New MySqlCommand(String.Format("SELECT p.Receivername,s.branchname AS branch FROM kpdomestic{2}.payout{0} p " +
                                                                     "INNER JOIN kpusers.branches s ON s.branchcode = p.branchcode AND s.zonecode = p.zonecode " +
                                                                     "WHERE p.kptn = '{1}'and year(p.claimeddate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())
                            ElseIf kptn.Substring(0, 3) = "MLX" Then
                                '@RC
                                flag = True
                                notSpecific = False
                                Con.OpenCon("KPMLExpressA")
                                cmd = New MySqlCommand(String.Format("SELECT Receivername,sobranch AS branch FROM payout{0}{2}.payout{0}{2} WHERE( kptnno = '{1}' OR oldkptnno = '{1}');", tbl, Trim(row("kptn")), year), Con.GetCon())
                            Else
                                If connection = 1 Then
                                    flag = True
                                    notSpecific = True
                                    Con.OpenCon("KPUsersA")
                                    cmd = New MySqlCommand(String.Format("SELECT p.Receivername,s.branchname AS branch FROM kpdomestic.payout{0} p " +
                                                                     "INNER JOIN kpusers.branches s ON s.branchcode = p.branchcode AND s.zonecode = p.zonecode " +
                                                                     "WHERE p.kptnno = '{1}' and year(p.claimeddate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())
                                ElseIf connection = 2 Then
                                    flag = True
                                    notSpecific = True
                                    Con.OpenCon("KPFileUpload")
                                    cmd = New MySqlCommand(String.Format("SELECT p.Receivername,s.branchname AS branch FROM kppartners.payout{0} p " +
                                                                     "INNER JOIN kpusers.branches s ON s.branchcode = p.branchcode AND s.zonecode = p.zonecode " +
                                                                     "WHERE p.kptn = '{1}' and year(p.claimeddate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())
                                ElseIf connection = 3 Then
                                    flag = True
                                    notSpecific = True
                                    Con.OpenCon("KPAPINEW")
                                    cmd = New MySqlCommand(String.Format("SELECT p.Receivername,s.branchname AS branch FROM kppartners.payout{0} p " +
                                                                     "INNER JOIN kpusers.branches s ON s.branchcode = p.branchcode AND s.zonecode = p.zonecode " +
                                                                     "WHERE p.kptn = '{1}' and year(p.claimeddate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())
                                ElseIf connection = 4 Then
                                    flag = True
                                    notSpecific = True
                                    Con.OpenCon("KPAPINEW")
                                    cmd = New MySqlCommand(String.Format("SELECT p.Receivername,s.branchname AS branch FROM kppartnersSKY.payout{0} p " +
                                                                     "INNER JOIN kpusers.branches s ON s.branchcode = p.branchcode AND s.zonecode = p.zonecode " +
                                                                     "WHERE p.kptn = '{1}' and year(p.claimeddate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())
                                ElseIf connection = 5 Then
                                    flag = True
                                    notSpecific = True
                                    Con.OpenCon("KPAPINEW")
                                    cmd = New MySqlCommand(String.Format("SELECT p.Receivername,s.branchname AS branch FROM kppartnersWU.payout{0} p " +
                                                                     "INNER JOIN kpusers.branches s ON s.branchcode = p.branchcode AND s.zonecode = p.zonecode " +
                                                                     "WHERE p.kptn = '{1}' and year(p.claimeddate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())
                                ElseIf connection = 6 Then
                                    flag = True
                                    notSpecific = True
                                    Con.OpenCon("KPAPI")
                                    cmd = New MySqlCommand(String.Format("SELECT p.Receivername,s.branchname AS branch FROM kppartners.payout{0} p " +
                                                                     "INNER JOIN kpusers.branches s ON s.branchcode = p.branchcode AND s.zonecode = p.zonecode " +
                                                                     "WHERE p.kptn = '{1}' and year(p.claimeddate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())
                                ElseIf connection = 7 Then
                                    flag = True
                                    notSpecific = True
                                    Con.OpenCon("KPAPI")
                                    cmd = New MySqlCommand(String.Format("SELECT p.Receivername,s.branchname AS branch FROM kppartnersAUB.payout{0} p " +
                                                                     "INNER JOIN kpusers.branches s ON s.branchcode = p.branchcode AND s.zonecode = p.zonecode " +
                                                                     "WHERE p.kptn = '{1}' and year(p.claimeddate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())
                                ElseIf connection = 8 Then
                                    flag = True
                                    notSpecific = True
                                    Con.OpenCon("KPWSC")
                                    cmd = New MySqlCommand(String.Format("SELECT p.Receivername,s.branchname AS branch FROM kppartners.payout{0} p " +
                                                                     "INNER JOIN kpusers.branches s ON s.branchcode = p.branchcode AND s.zonecode = p.zonecode " +
                                                                     "WHERE p.referenceno = '{1}' and year(p.claimeddate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())
                                End If
                            End If
                        Catch ex As Exception
                            kplog.Fatal("Error in PAYOUT COMMISION or CANCEL PAYOUT COMMISION -- " + Con.GetCon.ConnectionString())
                        End Try

                    ElseIf Trim(row("transtype")).ToUpper = "BILLSPAYSENDOUT" Then
                        Try
                            flag = True
                            notSpecific = False
                            Con.OpenCon("KPBillsPayment")
                            _date = Trim(row("transdate"))
                            tbl = _date.ToString("MMdd")
                            year = _date.ToString("yyyy")
                            cmd = New MySqlCommand(String.Format("SELECT a.accountname AS Receivername,b.branchname as branch " &
                                                                    "FROM `kpbillspayment`.sendout{0} s " &
                                                                    "INNER JOIN `kpadminpartners`.`accountlist` a ON a.accountid = s.companyid " &
                                                                    "INNER JOIN kpusers.branches b ON b.branchcode = s.branchcode AND b.zonecode = s.zonecode " &
                                                                    "WHERE kptnno = '{1}' and year(transdate) = '{2}';", tbl, Trim(row("kptn")), year), Con.GetCon())
                        Catch ex As Exception
                            kplog.Fatal("Error in BILLSPAYSENDOUTENDOUT -- " + Con.GetCon.ConnectionString())
                        End Try

                    ElseIf Trim(row("transtype")).ToUpper = "E-LOAD" Then
                        Try
                            flag = True
                            notSpecific = False
                            Con.OpenCon("MLEload")
                            _date = Trim(row("transdate"))
                            mo = _date.ToString("MM")
                            d = _date.ToString("dd")
                            year = _date.ToString("yyyy")
                            cmd = New MySqlCommand(String.Format("SELECT mobileno AS Receivername,b.branchname AS branch FROM `ELoadTransactions`.`TransLog{0}` s " &
                                                                    "INNER JOIN kpusers.branches b ON b.branchcode = s.branchcode AND b.zonecode = s.zonecode " &
                                                                     "WHERE transno = '{1}' and day(transdate) ='{2}' and year(transdate) = '{3}' ", mo, Trim(row("kptn")), d, year), Con.GetCon())
                        Catch ex As Exception
                            kplog.Fatal("Error in E-LOAD -- " + Con.GetCon.ConnectionString())
                        End Try

                    ElseIf Trim(row("transtype")).ToUpper = "LOAD" Then
                        Try
                            flag = False
                            notSpecific = False
                            kptn = Trim(row("kptn"))
                            _date = Trim(row("transdate"))
                            tbl = _date.ToString("MMdd")
                            Dim month As String = _date.ToString("MM")
                            year = _date.ToString("yyyy")
                            If kptn.Substring(0, 6) = "MLW001" Then
                                flag = True
                                notSpecific = False
                                Con.OpenCon("KPMLWallet")
                                'cmd = New MySqlCommand(String.Format("CALL KPWalletReportsSP.getrcvrnameLoad('{0}','{1}','{2}') ", tbl, Trim(row("kptn")), year), Con.GetCon())
                                cmd = New MySqlCommand(String.Format("CALL getrcvrnameLoad('{0}','{1}','{2}') ", tbl, Trim(row("kptn")), year), Con.GetCon())
                            ElseIf kptn.Substring(0, 3) = "MGW" Then
                                flag = True
                                notSpecific = False
                                Con.OpenCon("KPGLOBAL")
                                'cmd = New MySqlCommand(String.Format("SELECT receivername,b.branchname AS branch FROM `walletloadglobal`.`sendout{0}` s " &
                                '                                     "INNER JOIN kpusersglobal.branches b ON b.branchcode = s.branchcode AND b.zonecode = s.zonecode " &
                                '                                     "WHERE kptnno = '{1}' and year(transdate) = '{2}' ", tbl, Trim(row("kptn")), year), Con.GetCon())

                                cmd = New MySqlCommand(String.Format("SELECT receivername,b.branchname AS branch FROM `walletloadglobaltransactions`.`sendout{0}` s " &
                                                                    "INNER JOIN kpusersglobal.branches b ON b.branchcode = s.branchcode AND b.zonecode = s.zonecode " &
                                                                    "WHERE kptnno = '{1}' and year(transdate) = '{2}' ", month, Trim(row("kptn")), year), Con.GetCon())
                            Else
                                flag = True
                                notSpecific = False
                                Con.OpenCon("KPUsers")
                                cmd = New MySqlCommand(String.Format("SELECT receivername,b.branchname AS branch FROM `kpdomestic`.`sendout{0}` s " &
                                                                     "INNER JOIN kpusers.branches b ON b.branchcode = s.branchcode AND b.zonecode = s.zonecode " &
                                                                     "WHERE kptnno = '{1}' and year(transdate) = '{2}' ", tbl, Trim(row("kptn")), year), Con.GetCon())
                            End If
                        Catch ex As Exception
                            kplog.Fatal("Error in LOADwallet -- " + Con.GetCon.ConnectionString())
                        End Try

                    ElseIf Trim(row("transtype")).ToUpper = "DEBIT" Or Trim(row("transtype")).ToUpper = "CREDIT" Then
                        Try
                            flag = True
                            notSpecific = False
                            Con.OpenCon("KPMLWallet")
                            _date = Trim(row("transdate"))
                            tbl = _date.ToString("MMdd")
                            year = _date.ToString("yyyy")
                            'cmd = New MySqlCommand(String.Format("CAll KPWalletReportsSP.`getrcvrnameDC`('{0}','{1}','{2}') ", tbl, Trim(row("kptn")), year), Con.GetCon())
                            cmd = New MySqlCommand(String.Format("CAll getrcvrnameWPO('{0}','{1}','{2}') ", tbl, Trim(row("kptn")), year), Con.GetCon())
                        Catch ex As Exception
                            kplog.Fatal("Error in DEBIT or CREDIT -- " + Con.GetCon.ConnectionString())
                        End Try
                    ElseIf Trim(row("transtype")).ToUpper = "MLShop Sendout" Then
                        Try
                            flag = True
                            notSpecific = False
                            Con.OpenCon("MLOnline")
                            _date = Trim(row("transdate"))
                            tbl = _date.ToString("MMdd")
                            year = _date.ToString("yyyy")
                            cmd = New MySqlCommand(String.Format("SELECT '-' AS receivername,b.branchname AS branch FROM ecommercetransactions{1}.ecommercetransactions{0} s  " &
                                                                    "INNER JOIN kpusers.branches b ON b.branchcode = s.branchcode AND b.zonecode = s.zonecode " &
                                                                     "WHERE kptnno = '{1}' and year(transdate) = '{2}' ", tbl, Trim(row("kptn")), year), Con.GetCon())
                        Catch ex As Exception
                            kplog.Fatal("Error in MLSHOP SENDOUT -- " + Con.GetCon.ConnectionString())
                        End Try
                    End If
                    If flag = True Then
                        kplog.Info("Query : " + cmd.CommandText.ToString())
                        kplog.Info("Connection : " + cmd.Connection.ConnectionString.ToString())
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        dt.Rows(counter).BeginEdit()
                        If dr.HasRows() Then
                            kplog.Info("HasRows")
                            dr.Read()
                            dt.Rows(counter)("receivername") = UCase(If(Not IsDBNull(dr.Item("Receivername")), Trim(dr.Item("Receivername")), "-"))
                            dt.Rows(counter)("branch") = UCase(If(Not IsDBNull(dr.Item("branch")), Trim(dr.Item("branch")), "-"))
                        Else
                            kplog.Info("noRows")
                            If notSpecific = True And (Trim(row("transtype")).ToUpper = "PAYOUT" Or Trim(row("transtype")).ToUpper = "PAYOUT CANCEL") Then
                                connection += 1
                                Con.GetCon.Close()
                                Con.CloseCon()
                                GoTo payout
                            ElseIf (Trim(row("transtype")).ToUpper = "PAYOUT COMMISSION" Or Trim(row("transtype")).ToUpper = "CANCEL PAYOUT COMMISSION") And notSpecific = True Then
                                connection += 1
                                Con.GetCon.Close()
                                Con.CloseCon()
                                GoTo payoutcommission
                            End If
                        End If
                        dt.Rows(counter).EndEdit()
                        dt.AcceptChanges()
                        dr.Close()
                        flag = False
                        notSpecific = False
                        Con.GetCon.Close()
                        Con.CloseCon()
                    End If
                    counter = counter + 1
                    connection = 1
                Next
            End Using
            Con.GetCon.Close()
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + cmd.CommandText.ToString() + " getrcvrname")
            GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            'GetMessage("Please Call Admin Support!")
        End Try
    End Sub

   
    'datable billspay
    Private Function billspaydatatable(ByVal _rtype As String) As DataTable
        Dim dtsBillsPaymentRec As DataTable = New DataTable
        Dim id As New DataColumn("ID", GetType(System.Int32))
        'dtsBillsPaymentRec.Columns.Add(id)
        Try
            If _rtype = "SO" Then 'so fields
                dtsBillsPaymentRec.Columns.Add(New DataColumn("ReferenceNo", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("ControlNo", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("AccountNo", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("AccountName", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("AmountPaid", GetType(System.Decimal)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Charge", GetType(System.Decimal)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("MLOutlet", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("MLZoneCode", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Operator", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Payer", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Address", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("ContactNo", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("OtherDetails", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("DateTime", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("RemoteOperator", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("RemoteOperatorId", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("RemoteZodeCode", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("CancelReason", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("partnername", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("assbranch", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("assoperator", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Assbranchname", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("assFullName", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Currency", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("CancelledDate", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("region", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("legend", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("PayorWalletID", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("ConvenienceFee", GetType(System.String)))

            ElseIf _rtype = "SOTelepreneur" Then 'SOTelepreneur fields
                dtsBillsPaymentRec.Columns.Add(New DataColumn("ReferenceNo", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("ControlNo", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("AccountNo", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("AccountName", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("AmountPaid", GetType(System.Decimal)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Charge", GetType(System.Decimal)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("MLOutlet", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("MLZoneCode", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Operator", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Payer", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Address", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("ContactNo", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("OtherDetails", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("DateTime", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("RemoteOperator", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("RemoteOperatorId", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("RemoteZodeCode", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("CancelReason", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("partnername", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("assbranch", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("assoperator", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Assbranchname", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("assFullName", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Currency", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("CancelledDate", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("region", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("PayorWalletID", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("ConvenienceFee", GetType(System.String)))

            ElseIf _rtype = "CS" Or _rtype = "RFC_NEW" Then 'cs fields
                If _rtype = "CS" Then
                    dtsBillsPaymentRec.Columns.Add(id)
                End If
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Transaction_Date", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("KPTN", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("OLD_KPTN", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Account_No", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Account_Name", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Payor_Name", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Payment_To", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("IR_NO", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Amount_Paid", GetType(System.Decimal)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Cancellation_Charge", GetType(System.Decimal)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Other_Charge", GetType(System.Decimal)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Operator_ID", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Branch_Code", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Zone_Code", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Control_No", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Payor_Address", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Payor_ContactNo", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Other_Details", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("SOdate", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("CancelledByName", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("Employee_Name", GetType(System.String)))

                dtsBillsPaymentRec.Columns.Add(New DataColumn("CR_Transaction_Date", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("CR_KPTN", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("CR_OLD_KPTN", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("CR_Account_No", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("CR_Account_Name", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("CR_Payor_Name", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("CR_Payment_To", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("CR_IR_NO", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("CR_Amount_Paid", GetType(System.Decimal)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("CR_Cancellation_Charge", GetType(System.Decimal)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("CR_Other_Charge", GetType(System.Decimal)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("CR_Operator_ID", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("CR_Branch_Code", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("CR_Zone_Code", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("CR_Control_No", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("CR_Payor_Address", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("CR_Payor_ContactNo", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("CR_Other_Details", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("CR_Employee_Name", GetType(System.String)))
                dtsBillsPaymentRec.Columns.Add(New DataColumn("CR_CancelledByName", GetType(System.String)))
                If _rtype = "CS" Then
                    dtsBillsPaymentRec.PrimaryKey = New DataColumn() {id}
                End If
            End If
            'dtsBillsPaymentRec.PrimaryKey = New DataColumn() {id}
            Return dtsBillsPaymentRec
        Catch ex As Exception
            Return dtsBillsPaymentRec
            kplog.Error(ex.ToString() + " billspaydatatable")
            'GetMessage(ex.ToString())
            GetMessage("Please Call Admin Support!")
        End Try
        
    End Function
    'load billspay report
    Public Sub loadbillspayreport(ByVal _reporttype As String)
        Dim ReportLOc As String = String.Empty
        Dim ReportName As String = String.Empty
        Dim name As String = Nothing
        Dim codename As String = Nothing
        Dim _datefrom = Nothing

        Try
            If drpPartnerAccountlist.Text = "PSSLAI COMPANY" And txtdateFrom.Text = txtdateTo.Text And partnername <> Nothing Then
                Dim monday = Convert.ToDateTime(txtdateFrom.Text).DayOfWeek.ToString()
                If monday = "Monday" Then
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text).AddDays(-3)
                Else
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text).AddDays(-1)
                End If
            Else
                _datefrom = Convert.ToDateTime(txtdateFrom.Text)
            End If

            Dim _range As String = UCase(String.Format("{0:MMMM dd, yyyy} to {1:MMMM dd, yyyy}", Convert.ToDateTime(_datefrom), Convert.ToDateTime(txtdateTo.Text)))
            Dim titlerange As String = UCase(String.Format("{0:MMMM-dd-yyyy}-to-{1:MMMM-dd-yyyy}", Convert.ToDateTime(_datefrom), Convert.ToDateTime(txtdateTo.Text)))

            ReportName = String.Format("{0}-BPR-{1}", _reporttype, titlerange)
            If drpRegion.SelectedIndex <> 0 And drpArea.SelectedIndex = 0 And drpBranchName.SelectedIndex = 0 Then
                codename = "Region : "
                name = drpRegion.SelectedItem.Text.Trim()
            ElseIf drpRegion.SelectedIndex <> 0 And drpArea.SelectedIndex <> 0 And drpBranchName.SelectedIndex = 0 Then
                codename = "Area : "
                name = drpArea.SelectedItem.Text.Trim()
            ElseIf drpRegion.SelectedIndex <> 0 And drpArea.SelectedIndex <> 0 And drpBranchName.SelectedIndex <> 0 Then
                codename = "Branch : "
                name = drpBranchName.SelectedItem.Text.Trim()
            Else
                codename = ""
                name = ""
            End If
            If drpPartnerAccountlist.Text = "-Select-" And drpRegion.SelectedIndex <> 0 And drpArea.SelectedIndex <> 0 And drpBranchName.SelectedIndex <> 0 Then
                If rb.Text = "PDFF" Then
                    ReportLOc = String.Format("{0}Reports\billspay{1}rangeBranchAllpartners.rpt", AppDomain.CurrentDomain.BaseDirectory, _reporttype)
                Else
                    ReportLOc = String.Format("{0}Reports\billspay{1}rangeBranchAllpartnersExcel.rpt", AppDomain.CurrentDomain.BaseDirectory, _reporttype)
                End If
            Else
                If rb.Text = "PDFF" Then
                    ReportLOc = String.Format("{0}Reports\billspay{1}range.rpt", AppDomain.CurrentDomain.BaseDirectory, _reporttype)
                Else
                    ReportLOc = String.Format("{0}Reports\billspay{1}rangeExcel.rpt", AppDomain.CurrentDomain.BaseDirectory, _reporttype)
                End If
            End If
            Rpt.Load(ReportLOc)
            Rpt.SetDataSource(dtmerger)
            If drpPartnerAccountlist.Text = "-Select-" And drpRegion.SelectedIndex <> 0 And drpArea.SelectedIndex <> 0 And drpBranchName.SelectedIndex <> 0 Then
                Rpt.SetParameterValue("Region", drpRegion.Text)
                Rpt.SetParameterValue("Area", drpArea.Text)
                Rpt.SetParameterValue("Branch", drpBranchName.Text)
                Rpt.SetParameterValue("_Date", _range)
            Else
                Rpt.SetParameterValue("DateofReportMonthly", _range)
                Rpt.SetParameterValue("Name", codename)
                Rpt.SetParameterValue("BAR", name)
            End If

            If drpglobe.Text = "GLOBE" Or drpglobe.Text = "INNOVE" Then
                Rpt.SetParameterValue("PartnerName", drpglobe.Text)
            ElseIf drpbiller.Text <> "" Then
                Rpt.SetParameterValue("PartnerName", drpPartnerAccountlist.SelectedItem.Text.Trim() + " - " + drpbiller.SelectedItem.Text.Trim())
            Else
                Rpt.SetParameterValue("PartnerName", drpPartnerAccountlist.SelectedItem.Text.Trim())
            End If
            Rpt.SetParameterValue("Printedby", Session("UserFullname").ToString.ToUpper())
            Rpt.SetParameterValue("RunDate", DateTime.Now.ToString("yyyy-MM-dd hh:mm:ss tt"))
            If rb.Text = "PDFF" Then
                Rpt.ExportToHttpResponse(CrystalDecisions.Shared.ExportFormatType.PortableDocFormat, Response, True, ReportName)
            Else
                Rpt.ExportToHttpResponse(CrystalDecisions.Shared.ExportFormatType.ExcelRecord, Response, True, ReportName)
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " loadbillspayreport")
            GetMessage(ex.ToString())
            'GetMessage("Please Call Admin Support!")
        End Try
        
    End Sub
    '==========================================================================================================================
    'billspaySendout

    Public Sub sendoutbillspay()
        Try
            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select

            Con.OpenCon("KPBillsPayment")
            Using Con.GetCon()
                strquery = String.Format("call kpbillspayment.WSCsendoutbillspay('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                If dr.HasRows Then
                    dtable.Load(dr)
                    dtmerger.Merge(dtable)
                End If
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()

            getoperatormobilebillspay(dtmerger, "operator")
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadbillspayreport("WSCbillspay")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " sendoutbillspay")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                sendoutbillspay()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub


    '----------SETTLEMENT and COLLECTION
    Private Sub DailySettlement()
        Try

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
              

            Con.OpenCon("KPBillsPayment")
            Using Con.GetCon()
                strquery = String.Format("call kpbillspayment.DailySettlement('{0}','{1}','{2}')", Session("bankname"), _datefrom.ToString("MMdd"), _dateto.ToString("yyyy"))
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                If dr.HasRows Then
                    If dr.HasRows Then
                        dtable.Load(dr)
                        dtmerger.Merge(dtable)
                    End If
                    dr.Close()
                    cmd = Nothing
                End If
            End Using
            Con.CloseCon()
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadreport("DailySettleMent")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " DailySettlement")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                DailySettlement()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub 'OK NAKA!
    Private Sub WeeklyStatement()
        Try
            

            Dim _datefrom As DateTime
            Dim _dateto As DateTime

            'RANGE
            _datefrom = Convert.ToDateTime(txtdateFrom.Text)
            _dateto = Convert.ToDateTime(txtdateTo.Text)

            Con.OpenCon("KPBillsPayment")
      
            Using Con.GetCon()
                If accountID = JT Then
                    strquery = String.Format("call kpbillspayment.WeeklyStatement('{0}','{1}','{2}')", accountID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                Else
                    strquery = String.Format("call kpbillspayment.WeeklyStatementDIV('{0}','{1}','{2}')", accountID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                End If
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                If dr.HasRows Then
                    dtable.Load(dr)
                    dtmerger.Merge(dtable)
                End If
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()


            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadreport("weeklyStatement")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " WeeklyStatement")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                WeeklyStatement()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub 'OK NAKA!
    Private Sub MonthlyStatement()
        Try          
            Dim flag As String = ""
            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            'Monthly
            Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
            Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
            _datefrom = Convert.ToDateTime(firstday)
            _dateto = Convert.ToDateTime(lastday)

            Con.OpenCon("KPBillsPayment")
  
            Using Con.GetCon()
                If accountID = globe Or accountID = bayantel Then
                    If drpglobe.Text = "INNOVE" Then
                        flag = "I"
                    ElseIf drpglobe.Text = "GLOBE" Then
                        flag = "G"
                    End If
                    strquery = String.Format("call kpbillspayment.MonthlyStatement('{0}','{1}','{2}','{3}')", accountID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), flag)
                ElseIf accountID = RYKOM Or accountID = FINASWIDE Or accountID = MCIA_LOCAL Then
                    strquery = String.Format("call kpbillspayment.MonthlyStatementCharge('{0}','{1}','{2}')", accountID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                Else
                    strquery = String.Format("call kpbillspayment.MonthlyStatementDiv('{0}','{1}','{2}')", accountID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                End If
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                If dr.HasRows Then
                    dtable.Load(dr)
                    dtmerger.Merge(dtable)
                End If
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadreport("MonthlyStatement")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " MonthlyStatement")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                MonthlyStatement()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub 'OK NAKA!
    Private Sub WeeklySummaryStatement()
          Try


            Dim _datefrom As DateTime
            Dim _dateto As DateTime


            'RANGE
            _datefrom = Convert.ToDateTime(txtdateFrom.Text)
            _dateto = Convert.ToDateTime(txtdateTo.Text)

            Con.OpenCon("KPBillsPayment")

            Using Con.GetCon()
                    strquery = String.Format("call kpbillspayment.WeeklySummaryStatement('{0}','{1}','{2}')", accountID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                If dr.HasRows Then
                    dtable.Load(dr)
                    dtmerger.Merge(dtable)
                End If
                dr.Close()
                cmd = Nothing
            End Using

            Con.CloseCon()

            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadreport("WeeklySummaryStatement")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " WeeklySummaryStatement")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                WeeklySummaryStatement()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub 'OK NAKA!
    Private Sub MonthlySummaryStatement()
        Try


            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            'Monthly
            Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
            Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
            _datefrom = Convert.ToDateTime(firstday)
            _dateto = Convert.ToDateTime(lastday)

            Con.OpenCon("KPBillsPayment")

            Using Con.GetCon()
                strquery = String.Format("call kpbillspayment.MonthlySummaryStatement('{0}','{1}','{2}')", accountID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                If dr.HasRows Then
                    dtable.Load(dr)
                    dtmerger.Merge(dtable)
                End If
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadreport("MonthlySummaryStatement")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " MonthlySummaryStatement")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                MonthlySummaryStatement()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub 'OK NAKA!
    '----------end SETTLEMENT and COLLECTION


    '=========================WALLET====================
    Public Sub walletsendout()
        Try
            dtable = GetMobileDatatable()
            dtable = GetMobileDatatable()
            dtable1 = GetMobileDatatable()
            dtable1.Clear()
            dtmerger = GetMobileDatatable()
            dtmerger.Clear()

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select
            'wallet emp
            If ReportType = 10 Then
                Con.OpenCon("KPMLWalletEmp")
                strquery = String.Format("call kpmobile.HOgetWalletSO('{0}','{1}','{2}','{3}','{4}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), "mlw002%", walletEmpkey)
            Else
                Con.OpenCon("KPMLWallet")
                'strquery = String.Format("call KPWalletReportsSP.HOgetWalletSO('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                strquery = String.Format("call HOgetWalletSO('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
            End If
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                While dr.Read()
                    datarow = dtable.NewRow()
                    clsreport.ID = clsreport.ID + 1
                    datarow("ID") = clsreport.ID
                    datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-"))
                    datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                    datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                    datarow("sobranch") = UCase(If(Not IsDBNull(dr.Item("sobranch")), Trim(dr.Item("sobranch")), "-"))
                    datarow("pobranch") = UCase(If(Not IsDBNull(dr.Item("pobranch")), Trim(dr.Item("pobranch")), "-"))
                    datarow("partnername") = UCase(If(Not IsDBNull(dr.Item("partnername")), Trim(dr.Item("partnername")), "-"))
                    datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                    datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                    datarow("commission") = UCase(If(Not IsDBNull(dr.Item("commission")), CType(Trim(dr.Item("commission")), System.Decimal), 0))
                    datarow("accountid") = UCase(If(Not IsDBNull(dr.Item("accountid")), Trim(dr.Item("accountid")), "-"))
                    datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
                    datarow("fullname") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), "-"))
                    datarow("operator") = UCase(If(Not IsDBNull(dr.Item("operator")), Trim(dr.Item("operator")), "-"))
                    datarow("cancelreason") = UCase(If(Not IsDBNull(dr.Item("cancelreason")), Trim(dr.Item("cancelreason")), "-"))
                    datarow("cancelleddate") = UCase(If(Not IsDBNull(dr.Item("cancelleddate")) And CType(dr.Item("cancelleddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("cancelleddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("oldkptn") = UCase(If(Not IsDBNull(dr.Item("oldkptn")), Trim(dr.Item("oldkptn")), "-"))
                    datarow("cancelledbyoperator") = UCase(If(Not IsDBNull(dr.Item("cancelledbyoperator")), Trim(dr.Item("cancelledbyoperator")), "-"))
                    datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                    datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
                    datarow("branchcode") = UCase(If(Not IsDBNull(dr.Item("branchcode")), Trim(dr.Item("branchcode")), "-"))
                    datarow("zonecode") = UCase(If(Not IsDBNull(dr.Item("zonecode")), Trim(dr.Item("zonecode")), "-"))
                    datarow("flag") = UCase(If(Not IsDBNull(dr.Item("flag")), Trim(dr.Item("flag")), "-"))
                    datarow("recvrwalletid") = UCase(If(Not IsDBNull(dr.Item("recvrwalletid")), Trim(dr.Item("recvrwalletid")), "-"))
                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()
                    dtable1.Merge(dtable)
                End While
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()

            dtmerger.Merge(dtable1)
            'getfullnamewallet()
            'getrcvrwalletid(dtmerger)
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadwalletreport("WalletSendout")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletsendout")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                walletsendout()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub walletpayout()

        Try
            dtable = GetMobileDatatable()
            dtable = GetMobileDatatable()
            dtable1 = GetMobileDatatable()
            dtable1.Clear()
            dtmerger = GetMobileDatatable()
            dtmerger.Clear()

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select
            'wallet emp
            If ReportType = 10 Then
                Con.OpenCon("KPMLWalletEmp")
                strquery = String.Format("call kpmobile.HOgetWalletPO('{0}','{1}','{2}','{3}','{4}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), "mlw002%", walletEmpkey)
            Else
                Con.OpenCon("KPMLWallet")
                'strquery = String.Format("call KPWalletReportsSP.HOgetWalletPO('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                strquery = String.Format("call HOgetWalletPO('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
            End If
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                While dr.Read()
                    datarow = dtable.NewRow()
                    clsreport.ID = clsreport.ID + 1
                    datarow("ID") = clsreport.ID
                    datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("claimeddate") = UCase(If(Not IsDBNull(dr.Item("claimeddate")) And CType(dr.Item("claimeddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-"))
                    datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                    datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                    datarow("sobranch") = UCase(If(Not IsDBNull(dr.Item("sobranch")), Trim(dr.Item("sobranch")), "-"))
                    datarow("pobranch") = UCase(If(Not IsDBNull(dr.Item("pobranch")), Trim(dr.Item("pobranch")), "-"))
                    datarow("partnername") = UCase(If(Not IsDBNull(dr.Item("partnername")), Trim(dr.Item("partnername")), "-"))
                    datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                    datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                    datarow("commission") = UCase(If(Not IsDBNull(dr.Item("commission")), CType(Trim(dr.Item("commission")), System.Decimal), 0))
                    datarow("accountid") = UCase(If(Not IsDBNull(dr.Item("accountid")), Trim(dr.Item("accountid")), "-"))
                    datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
                    datarow("fullname") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), "-"))
                    datarow("operator") = UCase(If(Not IsDBNull(dr.Item("operator")), Trim(dr.Item("operator")), "-"))
                    datarow("cancelreason") = UCase(If(Not IsDBNull(dr.Item("cancelreason")), Trim(dr.Item("cancelreason")), "-"))
                    datarow("cancelleddate") = UCase(If(Not IsDBNull(dr.Item("cancelleddate")) And CType(dr.Item("cancelleddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("cancelleddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("oldkptn") = UCase(If(Not IsDBNull(dr.Item("oldkptn")), Trim(dr.Item("oldkptn")), "-"))
                    datarow("cancelledbyoperator") = UCase(If(Not IsDBNull(dr.Item("cancelledbyoperator")), Trim(dr.Item("cancelledbyoperator")), "-"))
                    datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                    datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
                    datarow("branchcode") = UCase(If(Not IsDBNull(dr.Item("branchcode")), Trim(dr.Item("branchcode")), "-"))
                    datarow("zonecode") = UCase(If(Not IsDBNull(dr.Item("zonecode")), Trim(dr.Item("zonecode")), "-"))
                    datarow("flag") = UCase(If(Not IsDBNull(dr.Item("flag")), Trim(dr.Item("flag")), "-"))
                    datarow("recvrwalletid") = UCase(If(Not IsDBNull(dr.Item("recvrwalletid")), Trim(dr.Item("recvrwalletid")), "-"))

                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()
                    dtable1.Merge(dtable)
                End While
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()

            dtmerger.Merge(dtable1)
            'getrcvrwalletid(dtmerger)
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadwalletreport("WalletPayout")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletpayout")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                walletpayout()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try

    End Sub
    Public Sub walletammendments()
        Try
            dtable = GetMobileDatatable()
            dtable = GetMobileDatatable()
            dtable1 = GetMobileDatatable()
            dtable1.Clear()
            dtmerger = GetMobileDatatable()
            dtmerger.Clear()

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select
            'wallet emp
            If ReportType = 10 Then
                Con.OpenCon("KPMLWalletEmp")
                strquery = String.Format("call kpmobile.HOgetWalletRFC('{0}','{1}','{2}','{3}','{4}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), "mlw002%", walletEmpkey)
            Else
                Con.OpenCon("KPMLWallet")
                'strquery = String.Format("call KPWalletReportsSP.HOgetWalletRFC('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                strquery = String.Format("call HOgetWalletRFC('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
            End If
_bpconnect:
            If expresstrap = 1 Then
                Con.OpenCon("KPBillsPayment")
                'wallet emp
                If ReportType = 10 Then
                    strquery = String.Format("call kpbillspayment.HOgetWalletBPRFCEmp('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                Else
                    strquery = String.Format("call kpbillspayment.HOgetWalletBPRFC('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))

                End If
            End If
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                While dr.Read()
                    datarow = dtable.NewRow()
                    clsreport.ID = clsreport.ID + 1
                    datarow("ID") = clsreport.ID
                    datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-"))
                    datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                    datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                    datarow("sobranch") = UCase(If(Not IsDBNull(dr.Item("sobranch")), Trim(dr.Item("sobranch")), "-"))
                    datarow("pobranch") = UCase(If(Not IsDBNull(dr.Item("pobranch")), Trim(dr.Item("pobranch")), "-"))
                    datarow("partnername") = UCase(If(Not IsDBNull(dr.Item("partnername")), Trim(dr.Item("partnername")), "-"))
                    datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                    datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                    datarow("commission") = UCase(If(Not IsDBNull(dr.Item("commission")), CType(Trim(dr.Item("commission")), System.Decimal), 0))
                    datarow("accountid") = UCase(If(Not IsDBNull(dr.Item("accountid")), Trim(dr.Item("accountid")), "-"))
                    datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
                    datarow("fullname") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), "-"))
                    datarow("operator") = UCase(If(Not IsDBNull(dr.Item("operator")), Trim(dr.Item("operator")), "-"))
                    datarow("cancelreason") = UCase(If(Not IsDBNull(dr.Item("cancelreason")), Trim(dr.Item("cancelreason")), "-"))
                    datarow("cancelleddate") = UCase(If(Not IsDBNull(dr.Item("cancelleddate")) And CType(dr.Item("cancelleddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("cancelleddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("oldkptn") = UCase(If(Not IsDBNull(dr.Item("oldkptn")), Trim(dr.Item("oldkptn")), "-"))
                    datarow("cancelledbyoperator") = UCase(If(Not IsDBNull(dr.Item("cancelledbyoperator")), Trim(dr.Item("cancelledbyoperator")), "-"))
                    datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                    datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
                    datarow("branchcode") = UCase(If(Not IsDBNull(dr.Item("branchcode")), Trim(dr.Item("branchcode")), "-"))
                    datarow("zonecode") = UCase(If(Not IsDBNull(dr.Item("zonecode")), Trim(dr.Item("zonecode")), "-"))
                    datarow("flag") = UCase(If(Not IsDBNull(dr.Item("flag")), Trim(dr.Item("flag")), "-"))
                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()
                    dtable1.Merge(dtable)
                End While
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()
            If expresstrap = 0 Then
                expresstrap = 1
                GoTo _bpconnect
            End If
            dtmerger.Merge(dtable1)
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadwalletreport("WalletAmmendment")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletammendments")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                walletammendments()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub WesterUnionRefund()
        Try
            dtable = dtableWU()
            dtable.Clear()
            dtable1 = dtableWU()
            dtable1.Clear()
            dtmerger = dtableWU()
            dtmerger.Clear()

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select
            Con.OpenCon("KPBillsPayment")
            strquery = String.Format("call kpbillspayment.WUrefund('{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))

            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                While dr.Read()
                    datarow = dtable.NewRow()
                    clsreport.ID = clsreport.ID + 1
                    datarow("ID") = clsreport.ID
                    datarow("sendoutdate") = UCase(If(Not IsDBNull(dr.Item("sendoutdate")) And CType(dr.Item("sendoutdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("sendoutdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("referenceno") = UCase(If(Not IsDBNull(dr.Item("referenceno")), Trim(dr.Item("referenceno")), "-"))
                    datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
                    datarow("accountno") = UCase(If(Not IsDBNull(dr.Item("accountno")), Trim(dr.Item("accountno")), "-"))
                    datarow("accountname") = UCase(If(Not IsDBNull(dr.Item("accountname")), Trim(dr.Item("accountname")), "-"))
                    datarow("mtcn") = UCase(If(Not IsDBNull(dr.Item("mtcn")), Trim(dr.Item("mtcn")), "-"))
                    datarow("merchantname") = UCase(If(Not IsDBNull(dr.Item("merchantname")), Trim(dr.Item("merchantname")), "-"))
                    datarow("merchantamount") = UCase(If(Not IsDBNull(dr.Item("merchantamount")), CType(Trim(dr.Item("merchantamount")), System.Decimal), 0))
                    datarow("amount") = UCase(If(Not IsDBNull(dr.Item("amount")), CType(Trim(dr.Item("amount")), System.Decimal), 0))
                    datarow("resource") = UCase(If(Not IsDBNull(dr.Item("resource")), Trim(dr.Item("resource")), "-"))
                    datarow("branchname") = UCase(If(Not IsDBNull(dr.Item("branchname")), Trim(dr.Item("branchname")), "-"))
                    datarow("regionname") = UCase(If(Not IsDBNull(dr.Item("regionname")), Trim(dr.Item("regionname")), "-"))
                    datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), Trim(dr.Item("charge")), "-"))
                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()
                    dtable1.Merge(dtable)
                End While
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()
            dtmerger.Merge(dtable1)
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadwalletreport("WesterUnionRefund")
            End If

        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " WesterUnionRefund")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                WesterUnionRefund()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub WesterUnionPayment()
        Try
            dtable = dtableWU()
            dtable.Clear()
            dtable1 = dtableWU()
            dtable1.Clear()
            dtmerger = dtableWU()
            dtmerger.Clear()

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select
            Con.OpenCon("KPBillsPayment")
            strquery = String.Format("call kpbillspayment.WUpayment('{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))

            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                While dr.Read()
                    datarow = dtable.NewRow()
                    clsreport.ID = clsreport.ID + 1
                    datarow("ID") = clsreport.ID
                    datarow("sendoutdate") = UCase(If(Not IsDBNull(dr.Item("sendoutdate")) And CType(dr.Item("sendoutdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("sendoutdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("referenceno") = UCase(If(Not IsDBNull(dr.Item("referenceno")), Trim(dr.Item("referenceno")), "-"))
                    datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
                    datarow("accountno") = UCase(If(Not IsDBNull(dr.Item("accountno")), Trim(dr.Item("accountno")), "-"))
                    datarow("accountname") = UCase(If(Not IsDBNull(dr.Item("accountname")), Trim(dr.Item("accountname")), "-"))
                    datarow("mtcn") = UCase(If(Not IsDBNull(dr.Item("mtcn")), Trim(dr.Item("mtcn")), "-"))
                    datarow("merchantname") = UCase(If(Not IsDBNull(dr.Item("merchantname")), Trim(dr.Item("merchantname")), "-"))
                    datarow("merchantamount") = UCase(If(Not IsDBNull(dr.Item("merchantamount")), CType(Trim(dr.Item("merchantamount")), System.Decimal), 0))
                    datarow("amount") = UCase(If(Not IsDBNull(dr.Item("amount")), CType(Trim(dr.Item("amount")), System.Decimal), 0))
                    datarow("resource") = UCase(If(Not IsDBNull(dr.Item("resource")), Trim(dr.Item("resource")), "-"))
                    datarow("branchname") = UCase(If(Not IsDBNull(dr.Item("branchname")), Trim(dr.Item("branchname")), "-"))
                    datarow("regionname") = UCase(If(Not IsDBNull(dr.Item("regionname")), Trim(dr.Item("regionname")), "-"))
                    datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), Trim(dr.Item("charge")), "-"))
                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()
                    dtable1.Merge(dtable)
                End While
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()
            dtmerger.Merge(dtable1)
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadwalletreport("WesterUnionPayment")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " WesterUnionPayment")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                WesterUnionPayment()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub walletcancelso()
        Try
            dtable = GetMobileDatatable()
            dtable = GetMobileDatatable()
            dtable1 = GetMobileDatatable()
            dtable1.Clear()
            dtmerger = GetMobileDatatable()
            dtmerger.Clear()

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select
            'wallet emp

            If ReportType = 10 Then
                Con.OpenCon("KPMLWalletEmp")
                strquery = String.Format("call kpmobile.HOgetWalletCSO('{0}','{1}','{2}','{3}','{4}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), "mlw002%", walletEmpkey)
            Else
                Con.OpenCon("KPMLWallet")
                'strquery = String.Format("call KPWalletReportsSP.HOgetWalletCSO('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                strquery = String.Format("call HOgetWalletCSO('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
            End If
_bpconnect:
            If expresstrap = 1 Then
                Con.OpenCon("KPBillsPayment")

                If ReportType = 10 Then
                    strquery = String.Format("call kpbillspayment.HOgetWalletBPCSEmp('{0}','{1}','{2}','{3}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), "mlm%")
                Else
                    strquery = String.Format("call kpbillspayment.HOgetWalletBPCS('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                End If
            End If
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                While dr.Read()
                    datarow = dtable.NewRow()
                    clsreport.ID = clsreport.ID + 1
                    datarow("ID") = clsreport.ID
                    datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-"))
                    datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                    datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                    datarow("sobranch") = UCase(If(Not IsDBNull(dr.Item("sobranch")), Trim(dr.Item("sobranch")), "-"))
                    datarow("pobranch") = UCase(If(Not IsDBNull(dr.Item("pobranch")), Trim(dr.Item("pobranch")), "-"))
                    datarow("partnername") = UCase(If(Not IsDBNull(dr.Item("partnername")), Trim(dr.Item("partnername")), "-"))
                    datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                    datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                    datarow("commission") = UCase(If(Not IsDBNull(dr.Item("commission")), CType(Trim(dr.Item("commission")), System.Decimal), 0))
                    datarow("accountid") = UCase(If(Not IsDBNull(dr.Item("accountid")), Trim(dr.Item("accountid")), "-"))
                    datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
                    datarow("fullname") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), "-"))
                    datarow("operator") = UCase(If(Not IsDBNull(dr.Item("operator")), Trim(dr.Item("operator")), "-"))
                    datarow("cancelreason") = UCase(If(Not IsDBNull(dr.Item("cancelreason")), Trim(dr.Item("cancelreason")), "-"))
                    datarow("cancelleddate") = UCase(If(Not IsDBNull(dr.Item("cancelleddate")) And CType(dr.Item("cancelleddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("cancelleddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("oldkptn") = UCase(If(Not IsDBNull(dr.Item("oldkptn")), Trim(dr.Item("oldkptn")), "-"))
                    datarow("cancelledbyoperator") = UCase(If(Not IsDBNull(dr.Item("cancelledbyoperator")), Trim(dr.Item("cancelledbyoperator")), "-"))
                    datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                    datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
                    datarow("branchcode") = UCase(If(Not IsDBNull(dr.Item("branchcode")), Trim(dr.Item("branchcode")), "-"))
                    datarow("zonecode") = UCase(If(Not IsDBNull(dr.Item("zonecode")), Trim(dr.Item("zonecode")), "-"))
                    datarow("flag") = UCase(If(Not IsDBNull(dr.Item("flag")), Trim(dr.Item("flag")), "-"))
                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()
                    dtable1.Merge(dtable)
                End While
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()
            If expresstrap = 0 Then
                expresstrap = 1
                GoTo _bpconnect
            End If

            dtmerger.Merge(dtable1)
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadwalletreport("WalletCancelSendout")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletcancelso")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                walletcancelso()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub walletcancelpo()
        Try
            dtable = GetMobileDatatable()
            dtable = GetMobileDatatable()
            dtable1 = GetMobileDatatable()
            dtable1.Clear()
            dtmerger = GetMobileDatatable()
            dtmerger.Clear()

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select
            'wallet emp
            If ReportType = 10 Then
                Con.OpenCon("KPMLWalletEmp")
                strquery = String.Format("call kpmobile.HOgetWalletCPO('{0}','{1}','{2}','{3}','{4}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), "mlw002%", walletEmpkey)
            Else
                Con.OpenCon("KPMLWallet")
                'strquery = String.Format("call KPWalletReportsSP.HOgetWalletCPO('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                strquery = String.Format("call HOgetWalletCPO('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
            End If
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                While dr.Read()
                    datarow = dtable.NewRow()
                    clsreport.ID = clsreport.ID + 1
                    datarow("ID") = clsreport.ID
                    datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-"))
                    datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                    datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                    datarow("sobranch") = UCase(If(Not IsDBNull(dr.Item("sobranch")), Trim(dr.Item("sobranch")), "-"))
                    datarow("pobranch") = UCase(If(Not IsDBNull(dr.Item("pobranch")), Trim(dr.Item("pobranch")), "-"))
                    datarow("partnername") = UCase(If(Not IsDBNull(dr.Item("partnername")), Trim(dr.Item("partnername")), "-"))
                    datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                    datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                    datarow("commission") = UCase(If(Not IsDBNull(dr.Item("commission")), CType(Trim(dr.Item("commission")), System.Decimal), 0))
                    datarow("accountid") = UCase(If(Not IsDBNull(dr.Item("accountid")), Trim(dr.Item("accountid")), "-"))
                    datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
                    datarow("fullname") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), "-"))
                    datarow("operator") = UCase(If(Not IsDBNull(dr.Item("operator")), Trim(dr.Item("operator")), "-"))
                    datarow("cancelreason") = UCase(If(Not IsDBNull(dr.Item("cancelreason")), Trim(dr.Item("cancelreason")), "-"))
                    datarow("cancelleddate") = UCase(If(Not IsDBNull(dr.Item("cancelleddate")) And CType(dr.Item("cancelleddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("cancelleddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("oldkptn") = UCase(If(Not IsDBNull(dr.Item("oldkptn")), Trim(dr.Item("oldkptn")), "-"))
                    datarow("cancelledbyoperator") = UCase(If(Not IsDBNull(dr.Item("cancelledbyoperator")), Trim(dr.Item("cancelledbyoperator")), "-"))
                    datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                    datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
                    datarow("branchcode") = UCase(If(Not IsDBNull(dr.Item("branchcode")), Trim(dr.Item("branchcode")), "-"))
                    datarow("zonecode") = UCase(If(Not IsDBNull(dr.Item("zonecode")), Trim(dr.Item("zonecode")), "-"))
                    datarow("flag") = UCase(If(Not IsDBNull(dr.Item("flag")), Trim(dr.Item("flag")), "-"))
                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()
                    dtable1.Merge(dtable)
                End While
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()

            dtmerger.Merge(dtable1)
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadwalletreport("WalletCancelPayout")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletcancelpo")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                walletcancelpo()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub walletunclaimed()
        Try
            dtable = GetMobileDatatable()
            dtable = GetMobileDatatable()
            dtable1 = GetMobileDatatable()
            dtable1.Clear()
            dtmerger = GetMobileDatatable()
            dtmerger.Clear()

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select
            'wallet emp
            If ReportType = 10 Then
                Con.OpenCon("KPMLWalletEmp")
                strquery = String.Format("call kpmobile.HOgetWalletUnclaimed('{0}','{1}','{2}','{3}','{4}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), "mlw002%", walletEmpkey)
            Else
                Con.OpenCon("KPMLWallet")
                'strquery = String.Format("call KPWalletReportsSP.HOgetWalletUnclaimed('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                strquery = String.Format("call HOgetWalletUnclaimed('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
            End If
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                While dr.Read()
                    datarow = dtable.NewRow()
                    clsreport.ID = clsreport.ID + 1
                    datarow("ID") = clsreport.ID
                    datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-"))
                    datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                    datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                    datarow("sobranch") = UCase(If(Not IsDBNull(dr.Item("sobranch")), Trim(dr.Item("sobranch")), "-"))
                    datarow("pobranch") = UCase(If(Not IsDBNull(dr.Item("pobranch")), Trim(dr.Item("pobranch")), "-"))
                    datarow("partnername") = UCase(If(Not IsDBNull(dr.Item("partnername")), Trim(dr.Item("partnername")), "-"))
                    datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                    datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                    datarow("commission") = UCase(If(Not IsDBNull(dr.Item("commission")), CType(Trim(dr.Item("commission")), System.Decimal), 0))
                    datarow("accountid") = UCase(If(Not IsDBNull(dr.Item("accountid")), Trim(dr.Item("accountid")), "-"))
                    datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
                    datarow("fullname") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), "-"))
                    datarow("operator") = UCase(If(Not IsDBNull(dr.Item("operator")), Trim(dr.Item("operator")), "-"))
                    datarow("cancelreason") = UCase(If(Not IsDBNull(dr.Item("cancelreason")), Trim(dr.Item("cancelreason")), "-"))
                    datarow("cancelleddate") = UCase(If(Not IsDBNull(dr.Item("cancelleddate")) And CType(dr.Item("cancelleddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("cancelleddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("oldkptn") = UCase(If(Not IsDBNull(dr.Item("oldkptn")), Trim(dr.Item("oldkptn")), "-"))
                    datarow("cancelledbyoperator") = UCase(If(Not IsDBNull(dr.Item("cancelledbyoperator")), Trim(dr.Item("cancelledbyoperator")), "-"))
                    datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                    datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
                    datarow("branchcode") = UCase(If(Not IsDBNull(dr.Item("branchcode")), Trim(dr.Item("branchcode")), "-"))
                    datarow("zonecode") = UCase(If(Not IsDBNull(dr.Item("zonecode")), Trim(dr.Item("zonecode")), "-"))
                    datarow("flag") = UCase(If(Not IsDBNull(dr.Item("flag")), Trim(dr.Item("flag")), "-"))
                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()
                    dtable1.Merge(dtable)
                End While
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()

            dtmerger.Merge(dtable1)
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadwalletreport("WalletUnclaimed")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletunclaimed")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                walletunclaimed()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub walletloading()
        Try
            dtable = GetMobileDatatable()
            dtable = GetMobileDatatable()
            dtable1 = GetMobileDatatable()
            dtable1.Clear()
            dtmerger = GetMobileDatatable()
            dtmerger.Clear()

            Dim walletflag As String = String.Empty

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select


            If _datefrom = _dateto And Not _datefrom = DateTime.Today() And ReportType <> 10 Then
                pregenwalletloading()
            Else

                While _datefrom <= _dateto
                    If ReportType = 10 Then
                        If userrole = "KP-PAYROLL" Or userrole = "KP-HRMDPayroll" Then
                            Con.OpenCon("KPMLWalletEmp")
                        Else
                            Con.OpenCon("KPUsers")
                        End If
                    Else
                        If userrole = "KP-PAYROLL" Or userrole = "KP-HRMDPayroll" Then
                            Con.OpenCon("KPMLWallet")
                        Else
                            Con.OpenCon("KPUsers")
                        End If
                    End If
                    Using Con.GetCon()
                        'wallet emp
                        If ReportType = 10 Then
                            'strquery = String.Format("call kpdomestic.HOgetWalletLoadingEmp('{0}','{1}','{2}','{3}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), "mlm%")
                            If userrole = "KP-PAYROLL" Then
                                strquery = String.Format("call kpmobile.HOgetWalletLoadingEmpPayroll('{0}','{1}','{2}','{3}','{4}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _datefrom.ToString("yyyy-MM-dd"), "mlw002%", walletEmpkey)
                                walletflag = "walletloadbatch"
                            ElseIf userrole = "KP-HRMDPayroll" Then
                                strquery = String.Format("call kpmobile.HOgetWalletLoadingHRMDEmp('{0}','{1}','{2}','{3}','{4}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _datefrom.ToString("yyyy-MM-dd"), "mlw002%", walletEmpkey)
                                walletflag = "walletloadbatch"
                            Else
                                strquery = String.Format("call kpdomestic.HOgetWalletLoadingEmp('{0}','{1}','{2}','{3}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _datefrom.ToString("yyyy-MM-dd"), "mlw002%")
                                walletflag = "walletload"
                            End If
                        Else
                            If userrole = "KP-PAYROLL" Then
                                'strquery = String.Format("call KPWalletReportsSP.HOgetWalletLoadingPayroll('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _datefrom.ToString("yyyy-MM-dd"))
                                strquery = String.Format("call HOgetWalletLoadingPayroll('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _datefrom.ToString("yyyy-MM-dd"))
                                walletflag = "walletloadbatch"
                            ElseIf userrole = "KP-HRMDPayroll" Then
                                'strquery = String.Format("call KPWalletReportsSP.HOgetWalletLoadingHRMDPayroll('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _datefrom.ToString("yyyy-MM-dd"))
                                strquery = String.Format("call HOgetWalletLoadingHRMDPayroll('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _datefrom.ToString("yyyy-MM-dd"))
                                walletflag = "walletloadbatch"
                            Else
                                strquery = String.Format("call kpdomestic.HOgetWalletLoading('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _datefrom.ToString("yyyy-MM-dd"))
                                walletflag = "walletload"
                            End If
                            'strquery = String.Format("call kpdomestic.HOgetWalletLoading('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                        End If
                        cmd = New MySqlCommand(strquery, Con.GetCon())
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        If dr.HasRows Then
                            dtable.Load(dr)
                            dtmerger.Merge(dtable)
                        End If
                        'While dr.Read()
                        '    datarow = dtable.NewRow()
                        '    clsreport.ID = clsreport.ID + 1
                        '    datarow("ID") = clsreport.ID
                        '    datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                        '    datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-"))
                        '    datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                        '    datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                        '    datarow("sobranch") = UCase(If(Not IsDBNull(dr.Item("sobranch")), Trim(dr.Item("sobranch")), "-"))
                        '    datarow("pobranch") = UCase(If(Not IsDBNull(dr.Item("pobranch")), Trim(dr.Item("pobranch")), "-"))
                        '    datarow("partnername") = UCase(If(Not IsDBNull(dr.Item("partnername")), Trim(dr.Item("partnername")), "-"))
                        '    datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                        '    datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                        '    datarow("commission") = UCase(If(Not IsDBNull(dr.Item("commission")), CType(Trim(dr.Item("commission")), System.Decimal), 0))
                        '    datarow("accountid") = UCase(If(Not IsDBNull(dr.Item("accountid")), Trim(dr.Item("accountid")), "-"))
                        '    datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
                        '    datarow("fullname") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), "-"))
                        '    datarow("operator") = UCase(If(Not IsDBNull(dr.Item("operator")), Trim(dr.Item("operator")), "-"))
                        '    datarow("cancelreason") = UCase(If(Not IsDBNull(dr.Item("cancelreason")), Trim(dr.Item("cancelreason")), "-"))
                        '    datarow("cancelleddate") = UCase(If(Not IsDBNull(dr.Item("cancelleddate")) And CType(dr.Item("cancelleddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("cancelleddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                        '    datarow("oldkptn") = UCase(If(Not IsDBNull(dr.Item("oldkptn")), Trim(dr.Item("oldkptn")), "-"))
                        '    datarow("cancelledbyoperator") = UCase(If(Not IsDBNull(dr.Item("cancelledbyoperator")), Trim(dr.Item("cancelledbyoperator")), "-"))
                        '    datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                        '    datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
                        '    datarow("branchcode") = UCase(If(Not IsDBNull(dr.Item("branchcode")), Trim(dr.Item("branchcode")), "-"))
                        '    datarow("zonecode") = UCase(If(Not IsDBNull(dr.Item("zonecode")), Trim(dr.Item("zonecode")), "-"))
                        '    datarow("flag") = UCase(If(Not IsDBNull(dr.Item("flag")), Trim(dr.Item("flag")), "-"))
                        '    dtable.Rows.Add(datarow)
                        '    dtable.AcceptChanges()
                        '    dtable1.Merge(dtable)
                        'End While
                        dr.Close()
                        cmd = Nothing
                    End Using
                    _datefrom = _datefrom.AddDays(1)
                    Con.CloseCon()
                End While

            End If



            dtmerger.Merge(dtable1)
            getfullnamewallet(dtmerger, walletflag)
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                'getoperatormobilebillspay(dtmerger, "WalletLoading")
                loadwalletreport("WalletLoading")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletloading")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                walletloading()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try

    End Sub
    Private Sub pregenwalletloading()

        If drpTransactionTypelist.SelectedIndex = 78 Or drpTransactionTypelist.SelectedIndex = 79 Then
            ini.Inifile("C:\\kpconfig\\ReportsTeamConfigForWALLETUSERS.ini")
        Else
            ini.Inifile("C:\\kpconfig\\ReportsTeamConfig.ini")
        End If
        Dim poreportpath As String
        Try
            If rb.Text = "PDFF" Then
                If userrole.ToUpper() = "KP-PAYROLL" Then
                    poreportpath = ini.iniDataRead("ReportPath", "SrvPathW") + "PDF\WLRpPayroll" + Convert.ToDateTime(txtDate.Text).ToString("yyyyMMdd") + ".pdf"
                ElseIf userrole.ToUpper() = "KP-HRMDPAYROLL" Then
                    poreportpath = ini.iniDataRead("ReportPath", "SrvPathW") + "PDF\WLRpHrmd" + Convert.ToDateTime(txtDate.Text).ToString("yyyyMMdd") + ".pdf"
                ElseIf userrole.ToUpper() = "KP-SECCOM" Then
                    poreportpath = ini.iniDataRead("ReportPath", "SrvPathW") + "PDF\MLWTRpSEC" + Convert.ToDateTime(txtDate.Text).ToString("yyyyMMdd") + ".pdf"
                ElseIf userrole.ToUpper() = "KP-CAD" And eloadni = True Then
                    poreportpath = ini.iniDataRead("ReportPath", "SrvPathW") + "PDF\MLEloadCorp" + Convert.ToDateTime(txtDate.Text).ToString("yyyyMMdd") + ".pdf"
                    'ElseIf userrole.ToUpper() = "KP-CAD" And Session("username") = "PERA94005055" And drpTransactionTypelist.SelectedIndex = 78 Then
                    '    poreportpath = ini.iniDataRead("ReportPath", "SrvPath") + "PDF\MLWalletUserSummary" + Convert.ToDateTime(txtDate.Text).ToString("yyyyMMdd") + drpLeterStart.Text + ".pdf"
                    'ElseIf userrole.ToUpper() = "KP-CAD" And Session("username") = "PERA94005055" And drpTransactionTypelist.SelectedIndex = 79 Then
                    '    poreportpath = ini.iniDataRead("ReportPath", "SrvPath") + "PDF\MLWalletUserEndingBalance" + Convert.ToDateTime(txtDate.Text).ToString("yyyyMMdd") + drpLeterStart.Text + ".pdf"
                Else
                    poreportpath = ini.iniDataRead("ReportPath", "SrvPathW") + "PDF\WLRp" + Convert.ToDateTime(txtDate.Text).ToString("yyyyMMdd") + ".pdf"
                End If
            Else
                If userrole.ToUpper() = "KP-PAYROLL" Then
                    poreportpath = ini.iniDataRead("ReportPath", "SrvPathW") + "Excel\WLRePayroll" + Convert.ToDateTime(txtDate.Text).ToString("yyyyMMdd") + ".xls"
                ElseIf userrole.ToUpper() = "KP-HRMDPAYROLL" Then
                    poreportpath = ini.iniDataRead("ReportPath", "SrvPathW") + "Excel\WLReHrmd" + Convert.ToDateTime(txtDate.Text).ToString("yyyyMMdd") + ".xls"
                ElseIf userrole.ToUpper() = "KP-SECCOM" Then
                    poreportpath = ini.iniDataRead("ReportPath", "SrvPathW") + "Excel\MLWTReSEC" + Convert.ToDateTime(txtDate.Text).ToString("yyyyMMdd") + ".xls"
                ElseIf userrole.ToUpper() = "KP-CAD" And eloadni = True Then
                    poreportpath = ini.iniDataRead("ReportPath", "SrvPathW") + "Excel\MLEloadCorp" + Convert.ToDateTime(txtDate.Text).ToString("yyyyMMdd") + ".xls"
                    'ElseIf userrole.ToUpper() = "KP-CAD" And Session("username") = "PERA94005055" And drpTransactionTypelist.SelectedIndex = 78 Then
                    '    poreportpath = ini.iniDataRead("ReportPath", "SrvPath") + "Excel\MLWalletUserSummary" + Convert.ToDateTime(txtDate.Text).ToString("yyyyMMdd") + drpLeterStart.Text + ".pdf"
                    'ElseIf userrole.ToUpper() = "KP-CAD" And Session("username") = "PERA94005055" And drpTransactionTypelist.SelectedIndex = 79 Then
                    '    poreportpath = ini.iniDataRead("ReportPath", "SrvPath") + "Excel\MLWalletUserEndingBalance" + Convert.ToDateTime(txtDate.Text).ToString("yyyyMMdd") + drpLeterStart.Text + ".pdf"
                Else
                    poreportpath = ini.iniDataRead("ReportPath", "SrvPathW") + "Excel\WLRe" + Convert.ToDateTime(txtDate.Text).ToString("yyyyMMdd") + ".xls"
                End If

            End If
            Dim file As System.IO.FileInfo = New System.IO.FileInfo(poreportpath) '-- if the file exists on the server
            If file.Exists Then
                Response.Clear()
                Response.ClearHeaders()
                Response.ClearContent()
                Response.AddHeader("Content-Disposition", "attachment; filename=" + file.Name)
                Response.AddHeader("Content-Length", file.Length.ToString())
                Response.ContentType = "text/plain"
                Response.Flush()
                Response.TransmitFile(file.FullName)
                Response.End()
            Else
                GetMessage("No Record Found.")
            End If

        Catch ex As Exception
            kplog.Error(ex.ToString() + " pregenwalletloading")
            'GetMessage(ex.ToString())
            GetMessage("Unable to generate report. Please call admin support.")
        End Try
    End Sub
    Public Sub walletkppo(ByVal flag As Integer)
        Try
            dtable = GetMobileDatatable()
            dtable = GetMobileDatatable()
            dtable1 = GetMobileDatatable()
            dtable1.Clear()
            dtmerger = GetMobileDatatable()
            dtmerger.Clear()

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select
            While _datefrom <= _dateto
                'wallet emp
                If ReportType = 10 Then
                    Con.OpenCon("KPMLWalletEmp")
                    If flag = 0 Then
                        strquery = String.Format("call kpmobile.HOgetWalletSOkpPO('{0}','{1}','{2}','{3}','{4}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), "mlw002%", walletEmpkey)
                    Else
                        strquery = String.Format("call kpmobile.HOgetWalletkpSO('{0}','{1}','{2}','{3}','{4}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), "mlw002%", walletEmpkey)
                    End If
                Else
                    Con.OpenCon("KPMLWallet")
                    If flag = 0 Then
                        'strquery = String.Format("call KPWalletReportsSP.HOgetWalletSOkpPO('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                        strquery = String.Format("call HOgetWalletSOkpPO('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                    Else
                        'strquery = String.Format("call KPWalletReportsSP.HOgetWalletkpSO('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                        strquery = String.Format("call HOgetWalletkpSO('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                    End If
                End If

                'Using Con.GetCon()
                '    cmd = New MySqlCommand(strquery, Con.GetCon())
                '    cmd.CommandTimeout = 0
                '    dr = cmd.ExecuteReader
                '    If dr.HasRows Then
                '        dtable.Load(dr)
                '        dtmerger.Merge(dtable)
                '    End If
                'End Using

                Using Con.GetCon()
                    cmd = New MySqlCommand("SET net_write_timeout=99999; SET net_read_timeout=99999;", Con.GetCon())
                    cmd.ExecuteNonQuery()
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader()
                    If dr.HasRows Then
                        dtable.Load(dr)
                        dtmerger.Merge(dtable)
                    End If
                    dr.Close()
                    cmd = Nothing
                    kplog.Info("Done Load to dtable")
                End Using
                _datefrom = _datefrom.AddDays(1)
                Con.CloseCon()
            End While
            'Using Con.GetCon()
            '    cmd = New MySqlCommand(strquery, Con.GetCon())
            '    cmd.CommandTimeout = 0
            '    dr = cmd.ExecuteReader
            '    While dr.Read()
            '        datarow = dtable.NewRow()
            '        clsreport.ID = clsreport.ID + 1
            '        datarow("ID") = clsreport.ID
            '        datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
            '        If flag = 0 Then
            '            datarow("claimeddate") = UCase(If(Not IsDBNull(dr.Item("claimeddate")) And CType(dr.Item("claimeddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("claimeddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
            '        End If
            '        datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-"))

            '        datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
            '        datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
            '        datarow("sobranch") = UCase(If(Not IsDBNull(dr.Item("sobranch")), Trim(dr.Item("sobranch")), "-"))
            '        datarow("pobranch") = UCase(If(Not IsDBNull(dr.Item("pobranch")), Trim(dr.Item("pobranch")), "-"))
            '        datarow("partnername") = UCase(If(Not IsDBNull(dr.Item("partnername")), Trim(dr.Item("partnername")), "-"))
            '        datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
            '        datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
            '        datarow("commission") = UCase(If(Not IsDBNull(dr.Item("commission")), CType(Trim(dr.Item("commission")), System.Decimal), 0))
            '        datarow("accountid") = UCase(If(Not IsDBNull(dr.Item("accountid")), Trim(dr.Item("accountid")), "-"))
            '        datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
            '        datarow("fullname") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), "-"))
            '        datarow("operator") = UCase(If(Not IsDBNull(dr.Item("operator")), Trim(dr.Item("operator")), "-"))
            '        datarow("cancelreason") = UCase(If(Not IsDBNull(dr.Item("cancelreason")), Trim(dr.Item("cancelreason")), "-"))
            '        datarow("cancelleddate") = UCase(If(Not IsDBNull(dr.Item("cancelleddate")) And CType(dr.Item("cancelleddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("cancelleddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
            '        datarow("oldkptn") = UCase(If(Not IsDBNull(dr.Item("oldkptn")), Trim(dr.Item("oldkptn")), "-"))
            '        datarow("cancelledbyoperator") = UCase(If(Not IsDBNull(dr.Item("cancelledbyoperator")), Trim(dr.Item("cancelledbyoperator")), "-"))
            '        datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
            '        datarow("senderwalletno") = UCase(If(Not IsDBNull(dr.Item("senderwalletno")), Trim(dr.Item("senderwalletno")), "-"))
            '        datarow("receiverwalletno") = UCase(If(Not IsDBNull(dr.Item("receiverwalletno")), Trim(dr.Item("receiverwalletno")), "-"))
            '        datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
            '        datarow("branchcode") = UCase(If(Not IsDBNull(dr.Item("branchcode")), Trim(dr.Item("branchcode")), "-"))
            '        datarow("zonecode") = UCase(If(Not IsDBNull(dr.Item("zonecode")), Trim(dr.Item("zonecode")), "-"))
            '        datarow("flag") = UCase(If(Not IsDBNull(dr.Item("flag")), Trim(dr.Item("flag")), "-"))
            '        'datarow("recvrwalletid") = UCase(If(Not IsDBNull(dr.Item("recvrwalletid")), Trim(dr.Item("recvrwalletid")), "-"))

            '        dtable.Rows.Add(datarow)
            '        dtable.AcceptChanges()
            '        dtable1.Merge(dtable)
            '    End While
            '    dr.Close()
            '    cmd = Nothing
            'End Using
            'Con.CloseCon()

            'dtmerger.Merge(dtable1)
            If flag = 0 Then
                getrcvrwalletid1(dtmerger)
                getbranchname(dtmerger)
                getbranchoperator(dtmerger, "walletkppo")
                getfullnamewallet(dtmerger, "operator")
            Else
                getrcvrwalletid1(dtmerger)
            End If

            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                If flag = 0 Then
                    loadwalletreport("WalletKPPayout")
                Else
                    loadwalletreport("WalletKPSendout")
                End If
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletkppo")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                walletkppo(flag)
            Else
                'GetMessage(Con.GetCon.ConnectionString.ToString())
                'GetMessage(ex.ToString() + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try

    End Sub
    Public Sub walletcashout()

        Try
            dtable = GetMobileDatatable()
            dtable = GetMobileDatatable()
            dtable1 = GetMobileDatatable()
            dtable1.Clear()
            dtmerger = GetMobileDatatable()
            dtmerger.Clear()

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select
            'wallet emp
            If ReportType = 10 Then
                Con.OpenCon("KPMLWalletEmp")
                strquery = String.Format("call kpmobile.HOgetCashout('{0}','{1}','{2}','{3}','{4}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), "mlw002%", walletEmpkey)
            Else
                Con.OpenCon("KPMLWallet")
                'strquery = String.Format("call KPWalletReportsSP.HOgetCashout('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                strquery = String.Format("call HOgetCashout('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
            End If

            Using Con.GetCon()
                cmd = New MySqlCommand("SET net_write_timeout=99999; SET net_read_timeout=99999;", Con.GetCon())
                cmd.ExecuteNonQuery()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader()
                If dr.HasRows Then
                    dtable.Load(dr)
                    dtmerger.Merge(dtable)
                End If
                dr.Close()
                cmd = Nothing
                kplog.Info("Done Load to dtable")
            End Using

            'Using Con.GetCon()

            '    cmd = New MySqlCommand(strquery, Con.GetCon())
            '    cmd.CommandTimeout = 0
            '    dr = cmd.ExecuteReader
            '    While dr.Read()
            '        datarow = dtable.NewRow()
            '        clsreport.ID = clsreport.ID + 1
            '        datarow("ID") = clsreport.ID
            '        datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
            '        datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-"))
            '        datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
            '        datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
            '        datarow("sobranch") = UCase(If(Not IsDBNull(dr.Item("sobranch")), Trim(dr.Item("sobranch")), "-"))
            '        datarow("pobranch") = UCase(If(Not IsDBNull(dr.Item("pobranch")), Trim(dr.Item("pobranch")), "-"))
            '        datarow("partnername") = UCase(If(Not IsDBNull(dr.Item("partnername")), Trim(dr.Item("partnername")), "-"))
            '        datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
            '        datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
            '        datarow("commission") = UCase(If(Not IsDBNull(dr.Item("commission")), CType(Trim(dr.Item("commission")), System.Decimal), 0))
            '        datarow("accountid") = UCase(If(Not IsDBNull(dr.Item("accountid")), Trim(dr.Item("accountid")), "-"))
            '        datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
            '        datarow("fullname") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), "-"))
            '        datarow("operator") = UCase(If(Not IsDBNull(dr.Item("operator")), Trim(dr.Item("operator")), "-"))
            '        datarow("cancelreason") = UCase(If(Not IsDBNull(dr.Item("cancelreason")), Trim(dr.Item("cancelreason")), "-"))
            '        datarow("cancelleddate") = UCase(If(Not IsDBNull(dr.Item("cancelleddate")) And CType(dr.Item("cancelleddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("cancelleddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
            '        datarow("oldkptn") = UCase(If(Not IsDBNull(dr.Item("oldkptn")), Trim(dr.Item("oldkptn")), "-"))
            '        datarow("cancelledbyoperator") = UCase(If(Not IsDBNull(dr.Item("cancelledbyoperator")), Trim(dr.Item("cancelledbyoperator")), "-"))
            '        datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
            '        datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
            '        datarow("branchcode") = UCase(If(Not IsDBNull(dr.Item("branchcode")), Trim(dr.Item("branchcode")), "-"))
            '        datarow("zonecode") = UCase(If(Not IsDBNull(dr.Item("zonecode")), Trim(dr.Item("zonecode")), "-"))
            '        datarow("flag") = UCase(If(Not IsDBNull(dr.Item("flag")), Trim(dr.Item("flag")), "-"))
            '        dtable.Rows.Add(datarow)
            '        dtable.AcceptChanges()
            '        dtable1.Merge(dtable)
            '    End While
            '    dr.Close()
            '    cmd = Nothing
            'End Using
            Con.CloseCon()

            'dtmerger.Merge(dtable1)
            'GetOperatorAndBranch(dtmerger, "pobranch")
            'getfullnamewallet(dtmerger, "operator")
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadwalletreport("WalletCashout")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletcashout")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                walletcashout()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub walletbillspay()
        Try
            dtable = GetMobileDatatable()
            dtable = GetMobileDatatable()
            dtable1 = GetMobileDatatable()
            dtable1.Clear()
            dtmerger = GetMobileDatatable()
            dtmerger.Clear()

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select
            Con.OpenCon("KPBillsPayment")
            Using Con.GetCon()
                'wallet emp
                If ReportType = 10 Then
                    strquery = String.Format("call kpbillspayment.HOgetWalletBillspayEmp('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                Else
                    strquery = String.Format("call kpbillspayment.HOgetWalletBillspay('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))

                End If
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                While dr.Read()
                    datarow = dtable.NewRow()
                    clsreport.ID = clsreport.ID + 1
                    datarow("ID") = clsreport.ID
                    datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-"))
                    datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                    datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                    datarow("sobranch") = UCase(If(Not IsDBNull(dr.Item("sobranch")), Trim(dr.Item("sobranch")), "-"))
                    datarow("pobranch") = UCase(If(Not IsDBNull(dr.Item("pobranch")), Trim(dr.Item("pobranch")), "-"))
                    datarow("partnername") = UCase(If(Not IsDBNull(dr.Item("partnername")), Trim(dr.Item("partnername")), "-"))
                    datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                    datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                    datarow("commission") = UCase(If(Not IsDBNull(dr.Item("commission")), CType(Trim(dr.Item("commission")), System.Decimal), 0))
                    datarow("accountid") = UCase(If(Not IsDBNull(dr.Item("accountid")), Trim(dr.Item("accountid")), "-"))
                    datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
                    datarow("fullname") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), "-"))
                    datarow("operator") = UCase(If(Not IsDBNull(dr.Item("operator")), Trim(dr.Item("operator")), "-"))
                    datarow("cancelreason") = UCase(If(Not IsDBNull(dr.Item("cancelreason")), Trim(dr.Item("cancelreason")), "-"))
                    datarow("cancelleddate") = UCase(If(Not IsDBNull(dr.Item("cancelleddate")) And CType(dr.Item("cancelleddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("cancelleddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("oldkptn") = UCase(If(Not IsDBNull(dr.Item("oldkptn")), Trim(dr.Item("oldkptn")), "-"))
                    datarow("cancelledbyoperator") = UCase(If(Not IsDBNull(dr.Item("cancelledbyoperator")), Trim(dr.Item("cancelledbyoperator")), "-"))
                    datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                    datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
                    datarow("branchcode") = UCase(If(Not IsDBNull(dr.Item("branchcode")), Trim(dr.Item("branchcode")), "-"))
                    datarow("zonecode") = UCase(If(Not IsDBNull(dr.Item("zonecode")), Trim(dr.Item("zonecode")), "-"))
                    'datarow("conveniencefee") = UCase(If(Not IsDBNull(dr.Item("conveniencefee")), CType(Trim(dr.Item("conveniencefee")), System.Decimal), "0.00"))
                    datarow("flag") = UCase(If(Not IsDBNull(dr.Item("flag")), Trim(dr.Item("flag")), "-"))
                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()
                    dtable1.Merge(dtable)
                End While
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()

            dtmerger.Merge(dtable1)
            getwalletid(dtmerger)
            getwalletfee(dtmerger)
            getfullname(dtmerger)
            'getfullnamewallet(dtmerger, "operator")

            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadwalletreport("WalletBillspayment")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletbillspay")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                walletbillspay()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try

    End Sub
    Public Sub walletcustomerbal()
        dtable = GetWalletCustBalanceDataTable()
        dtable = GetWalletCustBalanceDataTable()
        dtable1 = GetWalletCustBalanceDataTable()
        dtable1.Clear()
        dtmerger = GetWalletCustBalanceDataTable()
        dtmerger.Clear()
        Dim view As New DataView()

        Try
            Dim fl As Integer = 0
            Dim isfound As Integer = 0
            Dim walletnomin As Integer = 1
            Dim walletnomax As Integer = 0
            Dim walletnum As String = Nothing
            Dim tblwalletno As String = Nothing
            Dim dtableW As New DataTable
            Dim min As Integer = 0
            Dim max As Integer = 0
            Dim smin As String = String.Empty
            Dim smax As String = String.Empty

            Dim _origdatefrom As DateTime
            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select
            _origdatefrom = _datefrom

            Try
                'CASHOUT
                dtable.Clear()
                dtable1.Clear()

                While _datefrom <= _dateto
                    'wallet emp
                    If ReportType = 10 Then
                        Con.OpenCon("KPMLWalletEmp")
                        strquery = String.Format("CALL `kpmobile`.HOgetCashoutSummary1('','{0}','{1}','{2}','{3}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), "mlw002%", walletEmpkey)
                    Else
                        Con.OpenCon("KPMLWallet")
                        'strquery = String.Format("CALL `KPWalletReportsSP`.HOgetCashoutSummary1('','{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                        strquery = String.Format("CALL HOgetCashoutSummary1('','{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                    End If
                    Using Con.GetCon()
                        cmd = New MySqlCommand(strquery, Con.GetCon())
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        While dr.Read()
                            datarow = dtable.NewRow()
                            clsreport.ID = clsreport.ID + 1
                            datarow("ID") = clsreport.ID
                            datarow("walletno") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                            datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
                            datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                            datarow("customername") = UCase(If(Not IsDBNull(dr.Item("customername")), Trim(dr.Item("customername")), "-"))
                            datarow("cashouttxncount") = UCase(If(Not IsDBNull(dr.Item("txncount")), CType(Trim(dr.Item("txncount")), System.Int32), 0))
                            datarow("cashoutprincipal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                            datarow("cashoutcharge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                            dtable.Rows.Add(datarow)
                            dtable.AcceptChanges()
                            dtable1.Merge(dtable)
                        End While
                        dr.Close()
                        cmd = Nothing
                    End Using
                    Con.CloseCon()
                    _datefrom = _datefrom.AddDays(1)
                    Con.CloseCon()
                End While
                'getfullnamewallet(dtable1, "custid")
                dtmerger.Clear()
                dtmerger.Merge(dtable1)
            Catch ex As Exception
                kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletcustomerbal1")
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End Try


            Try
                'Beginning Balance
                dtable.Clear()
                dtable1.Clear()
                'wallet emp
                If ReportType = 10 Then
                    Con.OpenCon("KPMLWalletEmp")
                Else
                    Con.OpenCon("KPMLWallet")

                End If
                Using Con.GetCon()
                    'strquery = " CALL `kpmobile`.HOgetWalletBeginBal()"
                    'strquery = String.Format("CALL `KPWalletReportsSP`.HOgetWalletBeginBal('{0}')", walletEmpkey)
                    strquery = String.Format("CALL HOgetWalletBeginBal('{0}')", walletEmpkey)

                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    While dr.Read()
                        datarow = dtable.NewRow()
                        clsreport.ID = clsreport.ID + 1
                        datarow("ID") = clsreport.ID
                        datarow("walletno") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                        datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
                        datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                        datarow("customername") = UCase(If(Not IsDBNull(dr.Item("customername")), Trim(dr.Item("customername")), "-"))
                        datarow("beginningbal") = UCase(If(Not IsDBNull(dr.Item("beginningbal")), CType(Trim(dr.Item("beginningbal")), System.Decimal), 0))
                        dtable.Rows.Add(datarow)
                        dtable.AcceptChanges()
                        dtable1.Merge(dtable)
                    End While
                    dr.Close()
                    cmd = Nothing
                End Using
                Con.CloseCon()
                'getfullnamewallet(dtable1, "custname")


                view = New DataView(dtable1)
                view.Sort = "customername ASC"

                dtable.Clear()
                dtable2.Clear()
                Dim counter1 As Integer = dtmerger.Rows.Count
                Dim counter2 As Integer = dtable1.Rows.Count
                Dim flag1 As Integer = 0
                If counter1 >= counter2 Then 'cashout is bigger
                    dtable.Merge(dtmerger)
                    dtable2.Merge(dtable1)
                Else 'beginning balance is bigger
                    dtable2.Merge(dtmerger)
                    dtable.Merge(dtable1)
                    flag1 = 1
                End If

                For Each row As DataRow In dtable2.Rows 'less
                    Dim xloop As Integer = 0
                    Dim flag As Integer = 0
                    For Each row1 As DataRow In dtable.Rows ' big
                        Dim a = UCase(If((Not IsDBNull(row.Item("walletno")) And Not IsDBNull(row1.Item("walletno"))) And (row.Item("walletno") <> String.Empty And row1.Item("walletno") <> String.Empty), Trim(row.Item("walletno")), Trim(row.Item("username"))))
                        Dim b = UCase(If((Not IsDBNull(row.Item("walletno")) And Not IsDBNull(row1.Item("walletno"))) And (row.Item("walletno") <> String.Empty And row1.Item("walletno") <> String.Empty), Trim(row1.Item("walletno")), Trim(row1.Item("username"))))
                        If a = b Then
                            dtable.Rows(xloop).BeginEdit()
                            dtable(xloop)("custid") = UCase(If(Not IsDBNull(row.Item("custid")) And row.Item("custid") <> String.Empty, Trim(row.Item("custid")), Trim(row1.Item("custid"))))
                            dtable(xloop)("walletno") = UCase(If(Not IsDBNull(row.Item("walletno")) And row.Item("walletno") <> String.Empty, Trim(row.Item("walletno")), Trim(row1.Item("walletno"))))
                            dtable(xloop)("username") = UCase(If(Not IsDBNull(row.Item("username")) And row.Item("username") <> String.Empty, Trim(row.Item("username")), Trim(row1.Item("username"))))
                            dtable(xloop)("customername") = UCase(If(Not IsDBNull(row.Item("customername")) And row.Item("customername") <> String.Empty, Trim(row.Item("customername")), Trim(row1.Item("customername"))))
                            If flag1 = 0 Then
                                dtable(xloop)("beginningbal") = UCase(If(Not IsDBNull(row.Item("beginningbal")), CType(Trim(row.Item("beginningbal")), System.Decimal), 0))
                            Else
                                dtable(xloop)("cashouttxncount") = UCase(If(Not IsDBNull(row.Item("cashouttxncount")), CType(Trim(row.Item("cashouttxncount")), System.Int32), 0))
                                dtable(xloop)("cashoutprincipal") = UCase(If(Not IsDBNull(row.Item("cashoutprincipal")), CType(Trim(row.Item("cashoutprincipal")), System.Decimal), 0))
                                dtable(xloop)("cashoutcharge") = UCase(If(Not IsDBNull(row.Item("cashoutcharge")), CType(Trim(row.Item("cashoutcharge")), System.Decimal), 0))
                            End If
                            dtable.Rows(xloop).EndEdit()
                            dtable.AcceptChanges()
                            flag = 1
                            GoTo contloop5
                        End If
                        xloop = xloop + 1
                    Next
contloop5:
                    If flag = 0 Then
                        datarow = dtable.NewRow()
                        datarow("ID") = Trim(row.Item("ID"))
                        datarow("walletno") = UCase(If(Not IsDBNull(row.Item("walletno")), Trim(row.Item("walletno")), "-"))
                        datarow("username") = UCase(If(Not IsDBNull(row.Item("username")), Trim(row.Item("username")), "-"))
                        datarow("custid") = UCase(If(Not IsDBNull(row.Item("custid")), Trim(row.Item("custid")), "-"))
                        datarow("customername") = UCase(If(Not IsDBNull(row.Item("customername")), Trim(row.Item("customername")), "-"))
                        If flag1 = 0 Then
                            datarow("beginningbal") = UCase(If(Not IsDBNull(row.Item("beginningbal")), CType(Trim(row.Item("beginningbal")), System.Decimal), 0))
                        Else
                            datarow("cashouttxncount") = UCase(If(Not IsDBNull(row.Item("cashouttxncount")), CType(Trim(row.Item("cashouttxncount")), System.Int32), 0))
                            datarow("cashoutprincipal") = UCase(If(Not IsDBNull(row.Item("cashoutprincipal")), CType(Trim(row.Item("cashoutprincipal")), System.Decimal), 0))
                            datarow("cashoutcharge") = UCase(If(Not IsDBNull(row.Item("cashoutcharge")), CType(Trim(row.Item("cashoutcharge")), System.Decimal), 0))
                        End If
                        dtable.Rows.Add(datarow)
                        dtable.AcceptChanges()
                    End If
                Next
                dtmerger.Clear()
                dtmerger.Merge(dtable)
            Catch ex As Exception
                kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletcustomerbal2")
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End Try

            view = New DataView(dtmerger)
            view.Sort = "customername ASC"

            _datefrom = _origdatefrom
            Try
                'LOADING
                dtable.Clear()
                dtable1.Clear()
                Con.OpenCon("KPUsers")
                Using Con.GetCon()
                    'walletemp
                    If ReportType = 10 Then
                        strquery = String.Format("CALL `kpdomestic`.HOgetWalletLoadingSummaryEmp('','{0}','{1}','{2}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), "mlm%")
                    Else
                        strquery = String.Format("CALL `kpdomestic`.HOgetWalletLoadingSummary('','{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))

                    End If
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    While dr.Read()
                        datarow = dtable.NewRow()
                        clsreport.ID = clsreport.ID + 1
                        datarow("ID") = clsreport.ID
                        datarow("walletno") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                        datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
                        datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                        datarow("customername") = UCase(If(Not IsDBNull(dr.Item("customername")), Trim(dr.Item("customername")), "-"))
                        datarow("loadtxncount") = UCase(If(Not IsDBNull(dr.Item("txncount")), CType(Trim(dr.Item("txncount")), System.Int32), 0))
                        datarow("loadprincipal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                        dtable.Rows.Add(datarow)
                        dtable.AcceptChanges()
                        dtable1.Merge(dtable)
                    End While
                    dr.Close()
                    cmd = Nothing
                End Using
                Con.CloseCon()
                getfullnamewallet(dtable1, "custid")

                dtable.Clear()
                dtable2.Clear()
                Dim counter1 As Integer = dtmerger.Rows.Count
                Dim counter2 As Integer = dtable1.Rows.Count
                Dim flag1 As Integer = 0
                If counter1 >= counter2 Then 'cashout is bigger
                    dtable.Merge(dtmerger)
                    dtable2.Merge(dtable1)
                Else 'loading is bigger
                    dtable2.Merge(dtmerger)
                    dtable.Merge(dtable1)
                    flag1 = 1
                End If

                For Each row As DataRow In dtable2.Rows 'less
                    Dim xloop As Integer = 0
                    Dim flag As Integer = 0
                    For Each row1 As DataRow In dtable.Rows ' big
                        Dim a = UCase(If((Not IsDBNull(row.Item("custid")) And Not IsDBNull(row1.Item("custid"))) And (row.Item("custid") <> String.Empty And row1.Item("custid") <> String.Empty), Trim(row.Item("custid")), Trim(row.Item("username"))))
                        Dim b = UCase(If((Not IsDBNull(row.Item("custid")) And Not IsDBNull(row1.Item("custid"))) And (row.Item("custid") <> String.Empty And row1.Item("custid") <> String.Empty), Trim(row1.Item("custid")), Trim(row1.Item("username"))))
                        If a = b Then
                            dtable.Rows(xloop).BeginEdit()
                            dtable(xloop)("custid") = UCase(If(Not IsDBNull(row.Item("custid")) And row.Item("custid") <> String.Empty, Trim(row.Item("custid")), Trim(row1.Item("custid"))))
                            dtable(xloop)("walletno") = UCase(If(Not IsDBNull(row.Item("walletno")) And row.Item("walletno") <> String.Empty, Trim(row.Item("walletno")), Trim(row1.Item("walletno"))))
                            dtable(xloop)("username") = UCase(If(Not IsDBNull(row.Item("username")) And row.Item("username") <> String.Empty, Trim(row.Item("username")), Trim(row1.Item("username"))))
                            dtable(xloop)("customername") = UCase(If(Not IsDBNull(row.Item("customername")) And row.Item("customername") <> String.Empty, Trim(row.Item("customername")), Trim(row1.Item("customername"))))
                            If flag1 = 0 Then
                                dtable(xloop)("loadtxncount") = UCase(If(Not IsDBNull(row.Item("loadtxncount")), CType(Trim(row.Item("loadtxncount")), System.Int32), 0))
                                dtable(xloop)("loadprincipal") = UCase(If(Not IsDBNull(row.Item("loadprincipal")), CType(Trim(row.Item("loadprincipal")), System.Decimal), 0))
                            Else
                                dtable(xloop)("beginningbal") = UCase(If(Not IsDBNull(row.Item("beginningbal")), CType(Trim(row.Item("beginningbal")), System.Int32), 0))
                                dtable(xloop)("cashouttxncount") = UCase(If(Not IsDBNull(row.Item("cashouttxncount")), CType(Trim(row.Item("cashouttxncount")), System.Int32), 0))
                                dtable(xloop)("cashoutprincipal") = UCase(If(Not IsDBNull(row.Item("cashoutprincipal")), CType(Trim(row.Item("cashoutprincipal")), System.Decimal), 0))
                                dtable(xloop)("cashoutcharge") = UCase(If(Not IsDBNull(row.Item("cashoutcharge")), CType(Trim(row.Item("cashoutcharge")), System.Decimal), 0))
                            End If
                            dtable.Rows(xloop).EndEdit()
                            dtable.AcceptChanges()
                            flag = 1
                            GoTo contloop
                        End If
                        xloop = xloop + 1
                    Next
contloop:
                    If flag = 0 Then
                        datarow = dtable.NewRow()
                        datarow("ID") = Trim(row.Item("ID"))
                        datarow("walletno") = UCase(If(Not IsDBNull(row.Item("walletno")), Trim(row.Item("walletno")), "-"))
                        datarow("username") = UCase(If(Not IsDBNull(row.Item("username")), Trim(row.Item("username")), "-"))
                        datarow("custid") = UCase(If(Not IsDBNull(row.Item("custid")), Trim(row.Item("custid")), "-"))
                        datarow("customername") = UCase(If(Not IsDBNull(row.Item("customername")), Trim(row.Item("customername")), "-"))
                        If flag1 = 0 Then
                            datarow("loadtxncount") = UCase(If(Not IsDBNull(row.Item("loadtxncount")), CType(Trim(row.Item("loadtxncount")), System.Int32), 0))
                            datarow("loadprincipal") = UCase(If(Not IsDBNull(row.Item("loadprincipal")), CType(Trim(row.Item("loadprincipal")), System.Decimal), 0))
                        Else
                            datarow("beginningbal") = UCase(If(Not IsDBNull(row.Item("beginningbal")), CType(Trim(row.Item("beginningbal")), System.Int32), 0))
                            datarow("cashouttxncount") = UCase(If(Not IsDBNull(row.Item("cashouttxncount")), CType(Trim(row.Item("cashouttxncount")), System.Int32), 0))
                            datarow("cashoutprincipal") = UCase(If(Not IsDBNull(row.Item("cashoutprincipal")), CType(Trim(row.Item("cashoutprincipal")), System.Decimal), 0))
                            datarow("cashoutcharge") = UCase(If(Not IsDBNull(row.Item("cashoutcharge")), CType(Trim(row.Item("cashoutcharge")), System.Decimal), 0))
                        End If
                        dtable.Rows.Add(datarow)
                        dtable.AcceptChanges()
                    End If
                Next
                dtmerger.Clear()
                dtmerger.Merge(dtable)
            Catch ex As Exception
                kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletcustomerbal3")
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End Try

            view = New DataView(dtmerger)
            view.Sort = "customername ASC"

            _datefrom = _origdatefrom
            Try
                'BILLSPAY
                dtable.Clear()
                dtable1.Clear()
                Con.OpenCon("KPBillsPayment")
                Using Con.GetCon()
                    'wallet emp
                    If ReportType = 10 Then
                        strquery = String.Format("CALL `kpbillspayment`.HOgetWalletBillspaySummaryEmp('','{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                    Else
                        strquery = String.Format("CALL `kpbillspayment`.HOgetWalletBillspaySummary('','{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                    End If
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    While dr.Read()
                        datarow = dtable.NewRow()
                        clsreport.ID = clsreport.ID + 1
                        datarow("ID") = clsreport.ID
                        datarow("walletno") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                        datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
                        datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                        datarow("customername") = UCase(If(Not IsDBNull(dr.Item("customername")), Trim(dr.Item("customername")), "-"))
                        datarow("billspaytxncount") = UCase(If(Not IsDBNull(dr.Item("txncount")), CType(Trim(dr.Item("txncount")), System.Int32), 0))
                        datarow("billspayprincipal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                        datarow("billspaycharge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                        datarow("adjbillspaytxncount") = UCase(If(Not IsDBNull(dr.Item("adjtxncount")), CType(Trim(dr.Item("adjtxncount")), System.Int32), 0))
                        datarow("adjbillspayprincipal") = UCase(If(Not IsDBNull(dr.Item("adjprincipal")), CType(Trim(dr.Item("adjprincipal")), System.Decimal), 0))
                        datarow("adjbillspaycharge") = UCase(If(Not IsDBNull(dr.Item("adjcharge")), CType(Trim(dr.Item("adjcharge")), System.Decimal), 0))
                        dtable.Rows.Add(datarow)
                        dtable.AcceptChanges()
                        dtable1.Merge(dtable)
                    End While
                    dr.Close()
                    cmd = Nothing
                End Using
                Con.CloseCon()
                getfullnamewallet(dtable1, "username")

                dtable.Clear()
                dtable2.Clear()
                Dim counter1 As Integer = dtmerger.Rows.Count
                Dim counter2 As Integer = dtable1.Rows.Count
                Dim flag1 As Integer = 0
                If counter1 >= counter2 Then 'cashout+loading is bigger
                    dtable.Merge(dtmerger)
                    dtable2.Merge(dtable1)
                Else 'billspay is bigger
                    dtable2.Merge(dtmerger)
                    dtable.Merge(dtable1)
                    flag1 = 1
                End If

                For Each row As DataRow In dtable2.Rows 'less
                    Dim xloop As Integer = 0
                    Dim flag As Integer = 0
                    For Each row1 As DataRow In dtable.Rows ' big
                        Dim a = UCase(If((Not IsDBNull(row.Item("custid")) And Not IsDBNull(row1.Item("custid"))) And (row.Item("custid") <> String.Empty And row1.Item("custid") <> String.Empty), Trim(row.Item("custid")), Trim(row.Item("username"))))
                        Dim b = UCase(If((Not IsDBNull(row.Item("custid")) And Not IsDBNull(row1.Item("custid"))) And (row.Item("custid") <> String.Empty And row1.Item("custid") <> String.Empty), Trim(row1.Item("custid")), Trim(row1.Item("username"))))
                        If a = b Then
                            dtable.Rows(xloop).BeginEdit()
                            dtable(xloop)("custid") = UCase(If(Not IsDBNull(row.Item("custid")) And row.Item("custid") <> String.Empty, Trim(row.Item("custid")), Trim(row1.Item("custid"))))
                            dtable(xloop)("walletno") = UCase(If(Not IsDBNull(row.Item("walletno")) And row.Item("walletno") <> String.Empty, Trim(row.Item("walletno")), Trim(row1.Item("walletno"))))
                            dtable(xloop)("username") = UCase(If(Not IsDBNull(row.Item("username")) And row.Item("username") <> String.Empty, Trim(row.Item("username")), Trim(row1.Item("username"))))
                            dtable(xloop)("customername") = UCase(If(Not IsDBNull(row.Item("customername")) And row.Item("customername") <> String.Empty, Trim(row.Item("customername")), Trim(row1.Item("customername"))))
                            If flag1 = 0 Then
                                dtable(xloop)("billspaytxncount") = UCase(If(Not IsDBNull(row.Item("billspaytxncount")), CType(Trim(row.Item("billspaytxncount")), System.Int32), 0))
                                dtable(xloop)("billspayprincipal") = UCase(If(Not IsDBNull(row.Item("billspayprincipal")), CType(Trim(row.Item("billspayprincipal")), System.Decimal), 0))
                                dtable(xloop)("billspaycharge") = UCase(If(Not IsDBNull(row.Item("billspaycharge")), CType(Trim(row.Item("billspaycharge")), System.Decimal), 0))
                                dtable(xloop)("adjbillspaytxncount") = UCase(If(Not IsDBNull(row.Item("adjbillspaytxncount")), CType(Trim(row.Item("adjbillspaytxncount")), System.Int32), 0))
                                dtable(xloop)("adjbillspayprincipal") = UCase(If(Not IsDBNull(row.Item("adjbillspayprincipal")), CType(Trim(row.Item("adjbillspayprincipal")), System.Decimal), 0))
                                dtable(xloop)("adjbillspaycharge") = UCase(If(Not IsDBNull(row.Item("adjbillspaycharge")), CType(Trim(row.Item("adjbillspaycharge")), System.Decimal), 0))
                            Else
                                dtable(xloop)("beginningbal") = UCase(If(Not IsDBNull(row.Item("beginningbal")), CType(Trim(row.Item("beginningbal")), System.Int32), 0))
                                dtable(xloop)("cashouttxncount") = UCase(If(Not IsDBNull(row.Item("cashouttxncount")), CType(Trim(row.Item("cashouttxncount")), System.Int32), 0))
                                dtable(xloop)("cashoutprincipal") = UCase(If(Not IsDBNull(row.Item("cashoutprincipal")), CType(Trim(row.Item("cashoutprincipal")), System.Decimal), 0))
                                dtable(xloop)("cashoutcharge") = UCase(If(Not IsDBNull(row.Item("cashoutcharge")), CType(Trim(row.Item("cashoutcharge")), System.Decimal), 0))
                                dtable(xloop)("loadtxncount") = UCase(If(Not IsDBNull(row.Item("loadtxncount")), CType(Trim(row.Item("loadtxncount")), System.Int32), 0))
                                dtable(xloop)("loadprincipal") = UCase(If(Not IsDBNull(row.Item("loadprincipal")), CType(Trim(row.Item("loadprincipal")), System.Decimal), 0))
                            End If
                            dtable.Rows(xloop).EndEdit()
                            dtable.AcceptChanges()
                            flag = 1
                            GoTo contloop1
                        End If
                        xloop = xloop + 1
                    Next
contloop1:
                    If flag = 0 Then
                        datarow = dtable.NewRow()
                        datarow("ID") = Trim(row.Item("ID"))
                        datarow("walletno") = UCase(If(Not IsDBNull(row.Item("walletno")), Trim(row.Item("walletno")), "-"))
                        datarow("username") = UCase(If(Not IsDBNull(row.Item("username")), Trim(row.Item("username")), "-"))
                        datarow("custid") = UCase(If(Not IsDBNull(row.Item("custid")), Trim(row.Item("custid")), "-"))
                        datarow("customername") = UCase(If(Not IsDBNull(row.Item("customername")), Trim(row.Item("customername")), "-"))
                        If flag1 = 0 Then
                            datarow("billspaytxncount") = UCase(If(Not IsDBNull(row.Item("billspaytxncount")), CType(Trim(row.Item("billspaytxncount")), System.Int32), 0))
                            datarow("billspayprincipal") = UCase(If(Not IsDBNull(row.Item("billspayprincipal")), CType(Trim(row.Item("billspayprincipal")), System.Decimal), 0))
                            datarow("billspaycharge") = UCase(If(Not IsDBNull(row.Item("billspaycharge")), CType(Trim(row.Item("billspaycharge")), System.Decimal), 0))
                            datarow("adjbillspaytxncount") = UCase(If(Not IsDBNull(row.Item("adjbillspaytxncount")), CType(Trim(row.Item("adjbillspaytxncount")), System.Int32), 0))
                            datarow("adjbillspayprincipal") = UCase(If(Not IsDBNull(row.Item("adjbillspayprincipal")), CType(Trim(row.Item("adjbillspayprincipal")), System.Decimal), 0))
                            datarow("adjbillspaycharge") = UCase(If(Not IsDBNull(row.Item("adjbillspaycharge")), CType(Trim(row.Item("adjbillspaycharge")), System.Decimal), 0))
                        Else
                            datarow("beginningbal") = UCase(If(Not IsDBNull(row.Item("beginningbal")), CType(Trim(row.Item("beginningbal")), System.Int32), 0))
                            datarow("cashouttxncount") = UCase(If(Not IsDBNull(row.Item("cashouttxncount")), CType(Trim(row.Item("cashouttxncount")), System.Int32), 0))
                            datarow("cashoutprincipal") = UCase(If(Not IsDBNull(row.Item("cashoutprincipal")), CType(Trim(row.Item("cashoutprincipal")), System.Decimal), 0))
                            datarow("cashoutcharge") = UCase(If(Not IsDBNull(row.Item("cashoutcharge")), CType(Trim(row.Item("cashoutcharge")), System.Decimal), 0))
                            datarow("loadtxncount") = UCase(If(Not IsDBNull(row.Item("loadtxncount")), CType(Trim(row.Item("loadtxncount")), System.Int32), 0))
                            datarow("loadprincipal") = UCase(If(Not IsDBNull(row.Item("loadprincipal")), CType(Trim(row.Item("loadprincipal")), System.Decimal), 0))
                        End If
                        dtable.Rows.Add(datarow)
                        dtable.AcceptChanges()
                    End If
                Next
                dtmerger.Clear()
                dtmerger.Merge(dtable)
            Catch ex As Exception
                kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletcustomerbal4")
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End Try

            view = New DataView(dtmerger)
            view.Sort = "customername ASC"

            _datefrom = _origdatefrom
            Try
                dtable.Clear()
                dtable1.Clear()
                While _datefrom <= _dateto
                    'wallet emp
                    If ReportType = 10 Then
                        Con.OpenCon("KPMLWalletEmp")
                        strquery = String.Format("CALL `kpmobile`.HOgetWalletSOSummaryEmp('','{0}','{1}','{2}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), "mlm%")
                    Else
                        Con.OpenCon("KPMLWallet")
                        'strquery = String.Format("CALL `KPWalletReportsSP`.HOgetWalletSOSummary('','{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                        strquery = String.Format("CALL HOgetWalletSOSummary('','{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                    End If
                    Using Con.GetCon()
                        cmd = New MySqlCommand(strquery, Con.GetCon())
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        While dr.Read()
                            datarow = dtable.NewRow()
                            clsreport.ID = clsreport.ID + 1
                            datarow("ID") = clsreport.ID
                            datarow("walletno") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                            datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
                            datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                            datarow("customername") = UCase(If(Not IsDBNull(dr.Item("customername")), Trim(dr.Item("customername")), "-"))
                            datarow("walletsotxncount") = UCase(If(Not IsDBNull(dr.Item("txncount")), CType(Trim(dr.Item("txncount")), System.Int32), 0))
                            datarow("walletsoprincipal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                            datarow("walletsocharge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                            datarow("adjwalletsotxncount") = UCase(If(Not IsDBNull(dr.Item("adjtxncount")), CType(Trim(dr.Item("adjtxncount")), System.Int32), 0))
                            datarow("adjwalletsoprincipal") = UCase(If(Not IsDBNull(dr.Item("adjprincipal")), CType(Trim(dr.Item("adjprincipal")), System.Decimal), 0))
                            datarow("adjwalletsocharge") = UCase(If(Not IsDBNull(dr.Item("adjcharge")), CType(Trim(dr.Item("adjcharge")), System.Decimal), 0))
                            dtable.Rows.Add(datarow)
                            dtable.AcceptChanges()
                            dtable1.Merge(dtable)
                        End While
                        dr.Close()
                        cmd = Nothing
                    End Using
                    Con.CloseCon()
                    _datefrom = _datefrom.AddDays(1)
                End While
                'getfullnamewallet(dtable1, "custid")

                dtable.Clear()
                dtable2.Clear()
                Dim counter1 As Integer = dtmerger.Rows.Count
                Dim counter2 As Integer = dtable1.Rows.Count
                Dim flag1 As Integer = 0
                If counter1 >= counter2 Then 'cashout+loading+billspay is bigger
                    dtable.Merge(dtmerger)
                    dtable2.Merge(dtable1)
                Else 'wallet so is bigger
                    dtable2.Merge(dtmerger)
                    dtable.Merge(dtable1)
                    flag1 = 1
                End If

                For Each row As DataRow In dtable2.Rows 'less
                    Dim xloop As Integer = 0
                    Dim flag As Integer = 0
                    For Each row1 As DataRow In dtable.Rows ' big
                        Dim a = UCase(If((Not IsDBNull(row.Item("walletno")) And Not IsDBNull(row1.Item("walletno"))) And (row.Item("walletno") <> String.Empty And row1.Item("walletno") <> String.Empty), Trim(row.Item("walletno")), Trim(row.Item("username"))))
                        Dim b = UCase(If((Not IsDBNull(row.Item("walletno")) And Not IsDBNull(row1.Item("walletno"))) And (row.Item("walletno") <> String.Empty And row1.Item("walletno") <> String.Empty), Trim(row1.Item("walletno")), Trim(row1.Item("username"))))
                        If a = b Then
                            dtable.Rows(xloop).BeginEdit()
                            dtable(xloop)("custid") = UCase(If(Not IsDBNull(row.Item("custid")) And row.Item("custid") <> String.Empty, Trim(row.Item("custid")), Trim(row1.Item("custid"))))
                            dtable(xloop)("walletno") = UCase(If(Not IsDBNull(row.Item("walletno")) And row.Item("walletno") <> String.Empty, Trim(row.Item("walletno")), Trim(row1.Item("walletno"))))
                            dtable(xloop)("username") = UCase(If(Not IsDBNull(row.Item("username")) And row.Item("username") <> String.Empty, Trim(row.Item("username")), Trim(row1.Item("username"))))
                            dtable(xloop)("customername") = UCase(If(Not IsDBNull(row.Item("customername")) And row.Item("customername") <> String.Empty, Trim(row.Item("customername")), Trim(row1.Item("customername"))))
                            If flag1 = 0 Then
                                dtable(xloop)("walletsotxncount") = UCase(If(Not IsDBNull(row.Item("walletsotxncount")), CType(Trim(row.Item("walletsotxncount")), System.Int32), 0))
                                dtable(xloop)("walletsoprincipal") = UCase(If(Not IsDBNull(row.Item("walletsoprincipal")), CType(Trim(row.Item("walletsoprincipal")), System.Decimal), 0))
                                dtable(xloop)("walletsocharge") = UCase(If(Not IsDBNull(row.Item("walletsocharge")), CType(Trim(row.Item("walletsocharge")), System.Decimal), 0))
                                dtable(xloop)("adjwalletsotxncount") = UCase(If(Not IsDBNull(row.Item("adjwalletsotxncount")), CType(Trim(row.Item("adjwalletsotxncount")), System.Int32), 0))
                                dtable(xloop)("adjwalletsoprincipal") = UCase(If(Not IsDBNull(row.Item("adjwalletsoprincipal")), CType(Trim(row.Item("adjwalletsoprincipal")), System.Decimal), 0))
                                dtable(xloop)("adjwalletsocharge") = UCase(If(Not IsDBNull(row.Item("adjwalletsocharge")), CType(Trim(row.Item("adjwalletsocharge")), System.Decimal), 0))
                            Else
                                dtable(xloop)("beginningbal") = UCase(If(Not IsDBNull(row.Item("beginningbal")), CType(Trim(row.Item("beginningbal")), System.Int32), 0))
                                dtable(xloop)("cashouttxncount") = UCase(If(Not IsDBNull(row.Item("cashouttxncount")), CType(Trim(row.Item("cashouttxncount")), System.Int32), 0))
                                dtable(xloop)("cashoutprincipal") = UCase(If(Not IsDBNull(row.Item("cashoutprincipal")), CType(Trim(row.Item("cashoutprincipal")), System.Decimal), 0))
                                dtable(xloop)("cashoutcharge") = UCase(If(Not IsDBNull(row.Item("cashoutcharge")), CType(Trim(row.Item("cashoutcharge")), System.Decimal), 0))
                                dtable(xloop)("loadtxncount") = UCase(If(Not IsDBNull(row.Item("loadtxncount")), CType(Trim(row.Item("loadtxncount")), System.Int32), 0))
                                dtable(xloop)("loadprincipal") = UCase(If(Not IsDBNull(row.Item("loadprincipal")), CType(Trim(row.Item("loadprincipal")), System.Decimal), 0))
                                dtable(xloop)("billspaytxncount") = UCase(If(Not IsDBNull(row.Item("billspaytxncount")), CType(Trim(row.Item("billspaytxncount")), System.Int32), 0))
                                dtable(xloop)("billspayprincipal") = UCase(If(Not IsDBNull(row.Item("billspayprincipal")), CType(Trim(row.Item("billspayprincipal")), System.Decimal), 0))
                                dtable(xloop)("billspaycharge") = UCase(If(Not IsDBNull(row.Item("billspaycharge")), CType(Trim(row.Item("billspaycharge")), System.Decimal), 0))
                                dtable(xloop)("adjbillspaytxncount") = UCase(If(Not IsDBNull(row.Item("adjbillspaytxncount")), CType(Trim(row.Item("adjbillspaytxncount")), System.Int32), 0))
                                dtable(xloop)("adjbillspayprincipal") = UCase(If(Not IsDBNull(row.Item("adjbillspayprincipal")), CType(Trim(row.Item("adjbillspayprincipal")), System.Decimal), 0))
                                dtable(xloop)("adjbillspaycharge") = UCase(If(Not IsDBNull(row.Item("adjbillspaycharge")), CType(Trim(row.Item("adjbillspaycharge")), System.Decimal), 0))
                            End If
                            dtable.Rows(xloop).EndEdit()
                            dtable.AcceptChanges()
                            flag = 1
                            GoTo contloop2
                        End If
                        xloop = xloop + 1
                    Next
contloop2:
                    If flag = 0 Then
                        datarow = dtable.NewRow()
                        datarow("ID") = Trim(row.Item("ID"))
                        datarow("walletno") = UCase(If(Not IsDBNull(row.Item("walletno")), Trim(row.Item("walletno")), "-"))
                        datarow("username") = UCase(If(Not IsDBNull(row.Item("username")), Trim(row.Item("username")), "-"))
                        datarow("custid") = UCase(If(Not IsDBNull(row.Item("custid")), Trim(row.Item("custid")), "-"))
                        datarow("customername") = UCase(If(Not IsDBNull(row.Item("customername")), Trim(row.Item("customername")), "-"))
                        If flag1 = 0 Then
                            datarow("walletsotxncount") = UCase(If(Not IsDBNull(row.Item("walletsotxncount")), CType(Trim(row.Item("walletsotxncount")), System.Int32), 0))
                            datarow("walletsoprincipal") = UCase(If(Not IsDBNull(row.Item("walletsoprincipal")), CType(Trim(row.Item("walletsoprincipal")), System.Decimal), 0))
                            datarow("walletsocharge") = UCase(If(Not IsDBNull(row.Item("walletsocharge")), CType(Trim(row.Item("walletsocharge")), System.Decimal), 0))
                            datarow("adjwalletsotxncount") = UCase(If(Not IsDBNull(row.Item("adjwalletsotxncount")), CType(Trim(row.Item("adjwalletsotxncount")), System.Int32), 0))
                            datarow("adjwalletsoprincipal") = UCase(If(Not IsDBNull(row.Item("adjwalletsoprincipal")), CType(Trim(row.Item("adjwalletsoprincipal")), System.Decimal), 0))
                            datarow("adjwalletsocharge") = UCase(If(Not IsDBNull(row.Item("adjwalletsocharge")), CType(Trim(row.Item("adjwalletsocharge")), System.Decimal), 0))
                        Else
                            datarow("beginningbal") = UCase(If(Not IsDBNull(row.Item("beginningbal")), CType(Trim(row.Item("beginningbal")), System.Int32), 0))
                            datarow("cashouttxncount") = UCase(If(Not IsDBNull(row.Item("cashouttxncount")), CType(Trim(row.Item("cashouttxncount")), System.Int32), 0))
                            datarow("cashoutprincipal") = UCase(If(Not IsDBNull(row.Item("cashoutprincipal")), CType(Trim(row.Item("cashoutprincipal")), System.Decimal), 0))
                            datarow("cashoutcharge") = UCase(If(Not IsDBNull(row.Item("cashoutcharge")), CType(Trim(row.Item("cashoutcharge")), System.Decimal), 0))
                            datarow("loadtxncount") = UCase(If(Not IsDBNull(row.Item("loadtxncount")), CType(Trim(row.Item("loadtxncount")), System.Int32), 0))
                            datarow("loadprincipal") = UCase(If(Not IsDBNull(row.Item("loadprincipal")), CType(Trim(row.Item("loadprincipal")), System.Decimal), 0))
                            datarow("billspaytxncount") = UCase(If(Not IsDBNull(row.Item("billspaytxncount")), CType(Trim(row.Item("billspaytxncount")), System.Int32), 0))
                            datarow("billspayprincipal") = UCase(If(Not IsDBNull(row.Item("billspayprincipal")), CType(Trim(row.Item("billspayprincipal")), System.Decimal), 0))
                            datarow("billspaycharge") = UCase(If(Not IsDBNull(row.Item("billspaycharge")), CType(Trim(row.Item("billspaycharge")), System.Decimal), 0))
                            datarow("adjbillspaytxncount") = UCase(If(Not IsDBNull(row.Item("adjbillspaytxncount")), CType(Trim(row.Item("adjbillspaytxncount")), System.Int32), 0))
                            datarow("adjbillspayprincipal") = UCase(If(Not IsDBNull(row.Item("adjbillspayprincipal")), CType(Trim(row.Item("adjbillspayprincipal")), System.Decimal), 0))
                            datarow("adjbillspaycharge") = UCase(If(Not IsDBNull(row.Item("adjbillspaycharge")), CType(Trim(row.Item("adjbillspaycharge")), System.Decimal), 0))
                        End If
                        dtable.Rows.Add(datarow)
                        dtable.AcceptChanges()
                    End If
                Next
                dtmerger.Clear()
                dtmerger.Merge(dtable)
            Catch ex As Exception
                kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletcustomerbal5")
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End Try

            view = New DataView(dtmerger)
            view.Sort = "customername ASC"

            _datefrom = _origdatefrom
            Try
                'WALLET SO KP PO
                dtable.Clear()
                dtable1.Clear()
                While _datefrom <= _dateto
                    'wallet emp
                    If ReportType = 10 Then
                        Con.OpenCon("KPMLWalletEmp")
                        strquery = String.Format("CALL `kpmobile`.HOgetWalletSOkpPOSummaryEmp('','{0}','{1}','{2}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), "mlm%")
                    Else
                        Con.OpenCon("KPMLWallet")
                        'strquery = String.Format("CALL `KPWalletReportsSP`.HOgetWalletSOkpPOSummary('','{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                        strquery = String.Format("CALL HOgetWalletSOkpPOSummary('','{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                    End If
                    Using Con.GetCon()
                        cmd = New MySqlCommand(strquery, Con.GetCon())
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        While dr.Read()
                            datarow = dtable.NewRow()
                            clsreport.ID = clsreport.ID + 1
                            datarow("ID") = clsreport.ID
                            datarow("walletno") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                            datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
                            datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                            datarow("customername") = UCase(If(Not IsDBNull(dr.Item("customername")), Trim(dr.Item("customername")), "-"))
                            datarow("walletsokppotxncount") = UCase(If(Not IsDBNull(dr.Item("txncount")), CType(Trim(dr.Item("txncount")), System.Int32), 0))
                            datarow("walletsokppoprincipal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                            datarow("walletsokppocharge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                            datarow("adjwalletsokppotxncount") = UCase(If(Not IsDBNull(dr.Item("adjtxncount")), CType(Trim(dr.Item("adjtxncount")), System.Int32), 0))
                            datarow("adjwalletsokppoprincipal") = UCase(If(Not IsDBNull(dr.Item("adjprincipal")), CType(Trim(dr.Item("adjprincipal")), System.Decimal), 0))
                            datarow("adjwalletsokppocharge") = UCase(If(Not IsDBNull(dr.Item("adjcharge")), CType(Trim(dr.Item("adjcharge")), System.Decimal), 0))
                            dtable.Rows.Add(datarow)
                            dtable.AcceptChanges()
                            dtable1.Merge(dtable)
                        End While
                        dr.Close()
                        cmd = Nothing
                    End Using
                    Con.CloseCon()
                    _datefrom = _datefrom.AddDays(1)
                End While

                dtable.Clear()
                dtable2.Clear()
                Dim counter1 As Integer = dtmerger.Rows.Count
                Dim counter2 As Integer = dtable1.Rows.Count
                Dim flag1 As Integer = 0
                If counter1 >= counter2 Then 'cashout+loading+billspay+walletso is bigger
                    dtable.Merge(dtmerger)
                    dtable2.Merge(dtable1)
                Else 'wallet so kp po is bigger
                    dtable2.Merge(dtmerger)
                    dtable.Merge(dtable1)
                    flag1 = 1
                End If

                For Each row As DataRow In dtable2.Rows 'less
                    Dim xloop As Integer = 0
                    Dim flag As Integer = 0
                    For Each row1 As DataRow In dtable.Rows ' big
                        Dim a = UCase(If((Not IsDBNull(row.Item("walletno")) And Not IsDBNull(row1.Item("walletno"))) And (row.Item("walletno") <> String.Empty And row1.Item("walletno") <> String.Empty), Trim(row.Item("walletno")), Trim(row.Item("username"))))
                        Dim b = UCase(If((Not IsDBNull(row.Item("walletno")) And Not IsDBNull(row1.Item("walletno"))) And (row.Item("walletno") <> String.Empty And row1.Item("walletno") <> String.Empty), Trim(row1.Item("walletno")), Trim(row1.Item("username"))))
                        If a = b Then
                            dtable.Rows(xloop).BeginEdit()
                            dtable(xloop)("custid") = UCase(If(Not IsDBNull(row.Item("custid")) And row.Item("custid") <> String.Empty, Trim(row.Item("custid")), Trim(row1.Item("custid"))))
                            dtable(xloop)("walletno") = UCase(If(Not IsDBNull(row.Item("walletno")) And row.Item("walletno") <> String.Empty, Trim(row.Item("walletno")), Trim(row1.Item("walletno"))))
                            dtable(xloop)("username") = UCase(If(Not IsDBNull(row.Item("username")) And row.Item("username") <> String.Empty, Trim(row.Item("username")), Trim(row1.Item("username"))))
                            dtable(xloop)("customername") = UCase(If(Not IsDBNull(row.Item("customername")) And row.Item("customername") <> String.Empty, Trim(row.Item("customername")), Trim(row1.Item("customername"))))
                            If flag1 = 0 Then
                                dtable(xloop)("walletsokppotxncount") = UCase(If(Not IsDBNull(row.Item("walletsokppotxncount")), CType(Trim(row.Item("walletsokppotxncount")), System.Int32), 0))
                                dtable(xloop)("walletsokppoprincipal") = UCase(If(Not IsDBNull(row.Item("walletsokppoprincipal")), CType(Trim(row.Item("walletsokppoprincipal")), System.Decimal), 0))
                                dtable(xloop)("walletsokppocharge") = UCase(If(Not IsDBNull(row.Item("walletsokppocharge")), CType(Trim(row.Item("walletsokppocharge")), System.Decimal), 0))
                                dtable(xloop)("adjwalletsokppotxncount") = UCase(If(Not IsDBNull(row.Item("adjwalletsokppotxncount")), CType(Trim(row.Item("adjwalletsokppotxncount")), System.Int32), 0))
                                dtable(xloop)("adjwalletsokppoprincipal") = UCase(If(Not IsDBNull(row.Item("adjwalletsokppoprincipal")), CType(Trim(row.Item("adjwalletsokppoprincipal")), System.Decimal), 0))
                                dtable(xloop)("adjwalletsokppocharge") = UCase(If(Not IsDBNull(row.Item("adjwalletsokppocharge")), CType(Trim(row.Item("adjwalletsokppocharge")), System.Decimal), 0))
                            Else
                                dtable(xloop)("beginningbal") = UCase(If(Not IsDBNull(row.Item("beginningbal")), CType(Trim(row.Item("beginningbal")), System.Int32), 0))
                                dtable(xloop)("cashouttxncount") = UCase(If(Not IsDBNull(row.Item("cashouttxncount")), CType(Trim(row.Item("cashouttxncount")), System.Int32), 0))
                                dtable(xloop)("cashoutprincipal") = UCase(If(Not IsDBNull(row.Item("cashoutprincipal")), CType(Trim(row.Item("cashoutprincipal")), System.Decimal), 0))
                                dtable(xloop)("cashoutcharge") = UCase(If(Not IsDBNull(row.Item("cashoutcharge")), CType(Trim(row.Item("cashoutcharge")), System.Decimal), 0))
                                dtable(xloop)("loadtxncount") = UCase(If(Not IsDBNull(row.Item("loadtxncount")), CType(Trim(row.Item("loadtxncount")), System.Int32), 0))
                                dtable(xloop)("loadprincipal") = UCase(If(Not IsDBNull(row.Item("loadprincipal")), CType(Trim(row.Item("loadprincipal")), System.Decimal), 0))
                                dtable(xloop)("billspaytxncount") = UCase(If(Not IsDBNull(row.Item("billspaytxncount")), CType(Trim(row.Item("billspaytxncount")), System.Int32), 0))
                                dtable(xloop)("billspayprincipal") = UCase(If(Not IsDBNull(row.Item("billspayprincipal")), CType(Trim(row.Item("billspayprincipal")), System.Decimal), 0))
                                dtable(xloop)("billspaycharge") = UCase(If(Not IsDBNull(row.Item("billspaycharge")), CType(Trim(row.Item("billspaycharge")), System.Decimal), 0))
                                dtable(xloop)("adjbillspaytxncount") = UCase(If(Not IsDBNull(row.Item("adjbillspaytxncount")), CType(Trim(row.Item("adjbillspaytxncount")), System.Int32), 0))
                                dtable(xloop)("adjbillspayprincipal") = UCase(If(Not IsDBNull(row.Item("adjbillspayprincipal")), CType(Trim(row.Item("adjbillspayprincipal")), System.Decimal), 0))
                                dtable(xloop)("adjbillspaycharge") = UCase(If(Not IsDBNull(row.Item("adjbillspaycharge")), CType(Trim(row.Item("adjbillspaycharge")), System.Decimal), 0))
                                dtable(xloop)("walletsotxncount") = UCase(If(Not IsDBNull(row.Item("walletsotxncount")), CType(Trim(row.Item("walletsotxncount")), System.Int32), 0))
                                dtable(xloop)("walletsoprincipal") = UCase(If(Not IsDBNull(row.Item("walletsoprincipal")), CType(Trim(row.Item("walletsoprincipal")), System.Decimal), 0))
                                dtable(xloop)("walletsocharge") = UCase(If(Not IsDBNull(row.Item("walletsocharge")), CType(Trim(row.Item("walletsocharge")), System.Decimal), 0))
                                dtable(xloop)("adjwalletsotxncount") = UCase(If(Not IsDBNull(row.Item("adjwalletsotxncount")), CType(Trim(row.Item("adjwalletsotxncount")), System.Int32), 0))
                                dtable(xloop)("adjwalletsoprincipal") = UCase(If(Not IsDBNull(row.Item("adjwalletsoprincipal")), CType(Trim(row.Item("adjwalletsoprincipal")), System.Decimal), 0))
                                dtable(xloop)("adjwalletsocharge") = UCase(If(Not IsDBNull(row.Item("adjwalletsocharge")), CType(Trim(row.Item("adjwalletsocharge")), System.Decimal), 0))
                            End If
                            dtable.Rows(xloop).EndEdit()
                            dtable.AcceptChanges()
                            flag = 1
                            GoTo contloop3
                        End If
                        xloop = xloop + 1
                    Next
contloop3:
                    If flag = 0 Then
                        datarow = dtable.NewRow()
                        datarow("ID") = Trim(row.Item("ID"))
                        datarow("walletno") = UCase(If(Not IsDBNull(row.Item("walletno")), Trim(row.Item("walletno")), "-"))
                        datarow("username") = UCase(If(Not IsDBNull(row.Item("username")), Trim(row.Item("username")), "-"))
                        datarow("custid") = UCase(If(Not IsDBNull(row.Item("custid")), Trim(row.Item("custid")), "-"))
                        datarow("customername") = UCase(If(Not IsDBNull(row.Item("customername")), Trim(row.Item("customername")), "-"))
                        If flag1 = 0 Then
                            datarow("walletsokppotxncount") = UCase(If(Not IsDBNull(row.Item("walletsokppotxncount")), CType(Trim(row.Item("walletsokppotxncount")), System.Int32), 0))
                            datarow("walletsokppoprincipal") = UCase(If(Not IsDBNull(row.Item("walletsokppoprincipal")), CType(Trim(row.Item("walletsokppoprincipal")), System.Decimal), 0))
                            datarow("walletsokppocharge") = UCase(If(Not IsDBNull(row.Item("walletsokppocharge")), CType(Trim(row.Item("walletsokppocharge")), System.Decimal), 0))
                            datarow("adjwalletsokppotxncount") = UCase(If(Not IsDBNull(row.Item("adjwalletsokppotxncount")), CType(Trim(row.Item("adjwalletsokppotxncount")), System.Int32), 0))
                            datarow("adjwalletsokppoprincipal") = UCase(If(Not IsDBNull(row.Item("adjwalletsokppoprincipal")), CType(Trim(row.Item("adjwalletsokppoprincipal")), System.Decimal), 0))
                            datarow("adjwalletsokppocharge") = UCase(If(Not IsDBNull(row.Item("adjwalletsokppocharge")), CType(Trim(row.Item("adjwalletsokppocharge")), System.Decimal), 0))
                        Else
                            datarow("beginningbal") = UCase(If(Not IsDBNull(row.Item("beginningbal")), CType(Trim(row.Item("beginningbal")), System.Int32), 0))
                            datarow("cashouttxncount") = UCase(If(Not IsDBNull(row.Item("cashouttxncount")), CType(Trim(row.Item("cashouttxncount")), System.Int32), 0))
                            datarow("cashoutprincipal") = UCase(If(Not IsDBNull(row.Item("cashoutprincipal")), CType(Trim(row.Item("cashoutprincipal")), System.Decimal), 0))
                            datarow("cashoutcharge") = UCase(If(Not IsDBNull(row.Item("cashoutcharge")), CType(Trim(row.Item("cashoutcharge")), System.Decimal), 0))
                            datarow("loadtxncount") = UCase(If(Not IsDBNull(row.Item("loadtxncount")), CType(Trim(row.Item("loadtxncount")), System.Int32), 0))
                            datarow("loadprincipal") = UCase(If(Not IsDBNull(row.Item("loadprincipal")), CType(Trim(row.Item("loadprincipal")), System.Decimal), 0))
                            datarow("billspaytxncount") = UCase(If(Not IsDBNull(row.Item("billspaytxncount")), CType(Trim(row.Item("billspaytxncount")), System.Int32), 0))
                            datarow("billspayprincipal") = UCase(If(Not IsDBNull(row.Item("billspayprincipal")), CType(Trim(row.Item("billspayprincipal")), System.Decimal), 0))
                            datarow("billspaycharge") = UCase(If(Not IsDBNull(row.Item("billspaycharge")), CType(Trim(row.Item("billspaycharge")), System.Decimal), 0))
                            datarow("adjbillspaytxncount") = UCase(If(Not IsDBNull(row.Item("adjbillspaytxncount")), CType(Trim(row.Item("adjbillspaytxncount")), System.Int32), 0))
                            datarow("adjbillspayprincipal") = UCase(If(Not IsDBNull(row.Item("adjbillspayprincipal")), CType(Trim(row.Item("adjbillspayprincipal")), System.Decimal), 0))
                            datarow("adjbillspaycharge") = UCase(If(Not IsDBNull(row.Item("adjbillspaycharge")), CType(Trim(row.Item("adjbillspaycharge")), System.Decimal), 0))
                            datarow("walletsotxncount") = UCase(If(Not IsDBNull(row.Item("walletsotxncount")), CType(Trim(row.Item("walletsotxncount")), System.Int32), 0))
                            datarow("walletsoprincipal") = UCase(If(Not IsDBNull(row.Item("walletsoprincipal")), CType(Trim(row.Item("walletsoprincipal")), System.Decimal), 0))
                            datarow("walletsocharge") = UCase(If(Not IsDBNull(row.Item("walletsocharge")), CType(Trim(row.Item("walletsocharge")), System.Decimal), 0))
                            datarow("adjwalletsotxncount") = UCase(If(Not IsDBNull(row.Item("adjwalletsotxncount")), CType(Trim(row.Item("adjwalletsotxncount")), System.Int32), 0))
                            datarow("adjwalletsoprincipal") = UCase(If(Not IsDBNull(row.Item("adjwalletsoprincipal")), CType(Trim(row.Item("adjwalletsoprincipal")), System.Decimal), 0))
                            datarow("adjwalletsocharge") = UCase(If(Not IsDBNull(row.Item("adjwalletsocharge")), CType(Trim(row.Item("adjwalletsocharge")), System.Decimal), 0))
                        End If
                        dtable.Rows.Add(datarow)
                        dtable.AcceptChanges()
                    End If
                Next
                dtmerger.Clear()
                dtmerger.Merge(dtable)
            Catch ex As Exception
                kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletcustomerbal6")
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End Try

            view = New DataView(dtmerger)
            view.Sort = "customername ASC"

            _datefrom = _origdatefrom
            Try
                'WALLET ELOAD
                dtable.Clear()
                dtable1.Clear()
                Con.OpenCon("MLEload")
                Using Con.GetCon()
                    'wallet emp
                    If ReportType = 10 Then
                        strquery = String.Format("CALL `ELoadTransactions`.HOgetWalletEloadSummaryEmp('','{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                    Else
                        strquery = String.Format("CALL `ELoadTransactions`.HOgetWalletEloadSummary('','{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))

                    End If
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    While dr.Read()
                        datarow = dtable.NewRow()
                        clsreport.ID = clsreport.ID + 1
                        datarow("ID") = clsreport.ID
                        datarow("walletno") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                        datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
                        datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                        datarow("customername") = UCase(If(Not IsDBNull(dr.Item("customername")), Trim(dr.Item("customername")), "-"))
                        datarow("walleteloadtxncount") = UCase(If(Not IsDBNull(dr.Item("txncount")), CType(Trim(dr.Item("txncount")), System.Int32), 0))
                        datarow("walleteloadprincipal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                        datarow("walleteloadcharge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                        dtable.Rows.Add(datarow)
                        dtable.AcceptChanges()
                        dtable1.Merge(dtable)
                    End While
                    dr.Close()
                    cmd = Nothing
                End Using
                Con.CloseCon()
                getfullnamewallet(dtable1, "username")

                dtable.Clear()
                dtable2.Clear()
                Dim counter1 As Integer = dtmerger.Rows.Count
                Dim counter2 As Integer = dtable1.Rows.Count
                Dim flag1 As Integer = 0
                If counter1 >= counter2 Then 'cashout+loading+billspay+walletso+walletsokppo is bigger
                    dtable.Merge(dtmerger)
                    dtable2.Merge(dtable1)
                Else 'wallet eload po is bigger
                    dtable2.Merge(dtmerger)
                    dtable.Merge(dtable1)
                    flag1 = 1
                End If

                For Each row As DataRow In dtable2.Rows 'less
                    Dim xloop As Integer = 0
                    Dim flag As Integer = 0
                    For Each row1 As DataRow In dtable.Rows ' big
                        Dim a = UCase(If((Not IsDBNull(row.Item("custid")) And Not IsDBNull(row1.Item("custid"))) And (row.Item("custid") <> String.Empty And row1.Item("custid") <> String.Empty), Trim(row.Item("custid")), Trim(row.Item("username"))))
                        Dim b = UCase(If((Not IsDBNull(row.Item("custid")) And Not IsDBNull(row1.Item("custid"))) And (row.Item("custid") <> String.Empty And row1.Item("custid") <> String.Empty), Trim(row1.Item("custid")), Trim(row1.Item("username"))))
                        If a = b Then
                            dtable.Rows(xloop).BeginEdit()
                            dtable(xloop)("custid") = UCase(If(Not IsDBNull(row.Item("custid")) And row.Item("custid") <> String.Empty, Trim(row.Item("custid")), Trim(row1.Item("custid"))))
                            dtable(xloop)("walletno") = UCase(If(Not IsDBNull(row.Item("walletno")) And row.Item("walletno") <> String.Empty, Trim(row.Item("walletno")), Trim(row1.Item("walletno"))))
                            dtable(xloop)("username") = UCase(If(Not IsDBNull(row.Item("username")) And row.Item("username") <> String.Empty, Trim(row.Item("username")), Trim(row1.Item("username"))))
                            dtable(xloop)("customername") = UCase(If(Not IsDBNull(row.Item("customername")) And row.Item("customername") <> String.Empty, Trim(row.Item("customername")), Trim(row1.Item("customername"))))
                            If flag1 = 0 Then
                                dtable(xloop)("walleteloadtxncount") = UCase(If(Not IsDBNull(row.Item("walleteloadtxncount")), CType(Trim(row.Item("walleteloadtxncount")), System.Int32), 0))
                                dtable(xloop)("walleteloadprincipal") = UCase(If(Not IsDBNull(row.Item("walleteloadprincipal")), CType(Trim(row.Item("walleteloadprincipal")), System.Decimal), 0))
                                dtable(xloop)("walleteloadcharge") = UCase(If(Not IsDBNull(row.Item("walleteloadcharge")), CType(Trim(row.Item("walleteloadcharge")), System.Decimal), 0))
                            Else
                                dtable(xloop)("beginningbal") = UCase(If(Not IsDBNull(row.Item("beginningbal")), CType(Trim(row.Item("beginningbal")), System.Int32), 0))
                                dtable(xloop)("cashouttxncount") = UCase(If(Not IsDBNull(row.Item("cashouttxncount")), CType(Trim(row.Item("cashouttxncount")), System.Int32), 0))
                                dtable(xloop)("cashoutprincipal") = UCase(If(Not IsDBNull(row.Item("cashoutprincipal")), CType(Trim(row.Item("cashoutprincipal")), System.Decimal), 0))
                                dtable(xloop)("cashoutcharge") = UCase(If(Not IsDBNull(row.Item("cashoutcharge")), CType(Trim(row.Item("cashoutcharge")), System.Decimal), 0))
                                dtable(xloop)("loadtxncount") = UCase(If(Not IsDBNull(row.Item("loadtxncount")), CType(Trim(row.Item("loadtxncount")), System.Int32), 0))
                                dtable(xloop)("loadprincipal") = UCase(If(Not IsDBNull(row.Item("loadprincipal")), CType(Trim(row.Item("loadprincipal")), System.Decimal), 0))
                                dtable(xloop)("billspaytxncount") = UCase(If(Not IsDBNull(row.Item("billspaytxncount")), CType(Trim(row.Item("billspaytxncount")), System.Int32), 0))
                                dtable(xloop)("billspayprincipal") = UCase(If(Not IsDBNull(row.Item("billspayprincipal")), CType(Trim(row.Item("billspayprincipal")), System.Decimal), 0))
                                dtable(xloop)("billspaycharge") = UCase(If(Not IsDBNull(row.Item("billspaycharge")), CType(Trim(row.Item("billspaycharge")), System.Decimal), 0))
                                dtable(xloop)("adjbillspaytxncount") = UCase(If(Not IsDBNull(row.Item("adjbillspaytxncount")), CType(Trim(row.Item("adjbillspaytxncount")), System.Int32), 0))
                                dtable(xloop)("adjbillspayprincipal") = UCase(If(Not IsDBNull(row.Item("adjbillspayprincipal")), CType(Trim(row.Item("adjbillspayprincipal")), System.Decimal), 0))
                                dtable(xloop)("adjbillspaycharge") = UCase(If(Not IsDBNull(row.Item("adjbillspaycharge")), CType(Trim(row.Item("adjbillspaycharge")), System.Decimal), 0))
                                dtable(xloop)("walletsotxncount") = UCase(If(Not IsDBNull(row.Item("walletsotxncount")), CType(Trim(row.Item("walletsotxncount")), System.Int32), 0))
                                dtable(xloop)("walletsoprincipal") = UCase(If(Not IsDBNull(row.Item("walletsoprincipal")), CType(Trim(row.Item("walletsoprincipal")), System.Decimal), 0))
                                dtable(xloop)("walletsocharge") = UCase(If(Not IsDBNull(row.Item("walletsocharge")), CType(Trim(row.Item("walletsocharge")), System.Decimal), 0))
                                dtable(xloop)("adjwalletsotxncount") = UCase(If(Not IsDBNull(row.Item("adjwalletsotxncount")), CType(Trim(row.Item("adjwalletsotxncount")), System.Int32), 0))
                                dtable(xloop)("adjwalletsoprincipal") = UCase(If(Not IsDBNull(row.Item("adjwalletsoprincipal")), CType(Trim(row.Item("adjwalletsoprincipal")), System.Decimal), 0))
                                dtable(xloop)("adjwalletsocharge") = UCase(If(Not IsDBNull(row.Item("adjwalletsocharge")), CType(Trim(row.Item("adjwalletsocharge")), System.Decimal), 0))
                                dtable(xloop)("walletsokppotxncount") = UCase(If(Not IsDBNull(row.Item("walletsokppotxncount")), CType(Trim(row.Item("walletsokppotxncount")), System.Int32), 0))
                                dtable(xloop)("walletsokppoprincipal") = UCase(If(Not IsDBNull(row.Item("walletsokppoprincipal")), CType(Trim(row.Item("walletsokppoprincipal")), System.Decimal), 0))
                                dtable(xloop)("walletsokppocharge") = UCase(If(Not IsDBNull(row.Item("walletsokppocharge")), CType(Trim(row.Item("walletsokppocharge")), System.Decimal), 0))
                                dtable(xloop)("adjwalletsokppotxncount") = UCase(If(Not IsDBNull(row.Item("adjwalletsokppotxncount")), CType(Trim(row.Item("adjwalletsokppotxncount")), System.Int32), 0))
                                dtable(xloop)("adjwalletsokppoprincipal") = UCase(If(Not IsDBNull(row.Item("adjwalletsokppoprincipal")), CType(Trim(row.Item("adjwalletsokppoprincipal")), System.Decimal), 0))
                                dtable(xloop)("adjwalletsokppocharge") = UCase(If(Not IsDBNull(row.Item("adjwalletsokppocharge")), CType(Trim(row.Item("adjwalletsokppocharge")), System.Decimal), 0))
                            End If
                            dtable.Rows(xloop).EndEdit()
                            dtable.AcceptChanges()
                            flag = 1
                            GoTo contloop4
                        End If
                        xloop = xloop + 1
                    Next
contloop4:
                    If flag = 0 Then
                        datarow = dtable.NewRow()
                        datarow("ID") = Trim(row.Item("ID"))
                        datarow("walletno") = UCase(If(Not IsDBNull(row.Item("walletno")), Trim(row.Item("walletno")), "-"))
                        datarow("username") = UCase(If(Not IsDBNull(row.Item("username")), Trim(row.Item("username")), "-"))
                        datarow("custid") = UCase(If(Not IsDBNull(row.Item("custid")), Trim(row.Item("custid")), "-"))
                        datarow("customername") = UCase(If(Not IsDBNull(row.Item("customername")), Trim(row.Item("customername")), "-"))
                        If flag1 = 0 Then
                            datarow("walleteloadtxncount") = UCase(If(Not IsDBNull(row.Item("walleteloadtxncount")), CType(Trim(row.Item("walleteloadtxncount")), System.Int32), 0))
                            datarow("walleteloadprincipal") = UCase(If(Not IsDBNull(row.Item("walleteloadprincipal")), CType(Trim(row.Item("walleteloadprincipal")), System.Decimal), 0))
                            datarow("walleteloadcharge") = UCase(If(Not IsDBNull(row.Item("walleteloadcharge")), CType(Trim(row.Item("walleteloadcharge")), System.Decimal), 0))
                        Else
                            datarow("beginningbal") = UCase(If(Not IsDBNull(row.Item("beginningbal")), CType(Trim(row.Item("beginningbal")), System.Int32), 0))
                            datarow("cashouttxncount") = UCase(If(Not IsDBNull(row.Item("cashouttxncount")), CType(Trim(row.Item("cashouttxncount")), System.Int32), 0))
                            datarow("cashoutprincipal") = UCase(If(Not IsDBNull(row.Item("cashoutprincipal")), CType(Trim(row.Item("cashoutprincipal")), System.Decimal), 0))
                            datarow("cashoutcharge") = UCase(If(Not IsDBNull(row.Item("cashoutcharge")), CType(Trim(row.Item("cashoutcharge")), System.Decimal), 0))
                            datarow("loadtxncount") = UCase(If(Not IsDBNull(row.Item("loadtxncount")), CType(Trim(row.Item("loadtxncount")), System.Int32), 0))
                            datarow("loadprincipal") = UCase(If(Not IsDBNull(row.Item("loadprincipal")), CType(Trim(row.Item("loadprincipal")), System.Decimal), 0))
                            datarow("billspaytxncount") = UCase(If(Not IsDBNull(row.Item("billspaytxncount")), CType(Trim(row.Item("billspaytxncount")), System.Int32), 0))
                            datarow("billspayprincipal") = UCase(If(Not IsDBNull(row.Item("billspayprincipal")), CType(Trim(row.Item("billspayprincipal")), System.Decimal), 0))
                            datarow("billspaycharge") = UCase(If(Not IsDBNull(row.Item("billspaycharge")), CType(Trim(row.Item("billspaycharge")), System.Decimal), 0))
                            datarow("adjbillspaytxncount") = UCase(If(Not IsDBNull(row.Item("adjbillspaytxncount")), CType(Trim(row.Item("adjbillspaytxncount")), System.Int32), 0))
                            datarow("adjbillspayprincipal") = UCase(If(Not IsDBNull(row.Item("adjbillspayprincipal")), CType(Trim(row.Item("adjbillspayprincipal")), System.Decimal), 0))
                            datarow("adjbillspaycharge") = UCase(If(Not IsDBNull(row.Item("adjbillspaycharge")), CType(Trim(row.Item("adjbillspaycharge")), System.Decimal), 0))
                            datarow("walletsotxncount") = UCase(If(Not IsDBNull(row.Item("walletsotxncount")), CType(Trim(row.Item("walletsotxncount")), System.Int32), 0))
                            datarow("walletsoprincipal") = UCase(If(Not IsDBNull(row.Item("walletsoprincipal")), CType(Trim(row.Item("walletsoprincipal")), System.Decimal), 0))
                            datarow("walletsocharge") = UCase(If(Not IsDBNull(row.Item("walletsocharge")), CType(Trim(row.Item("walletsocharge")), System.Decimal), 0))
                            datarow("adjwalletsotxncount") = UCase(If(Not IsDBNull(row.Item("adjwalletsotxncount")), CType(Trim(row.Item("adjwalletsotxncount")), System.Int32), 0))
                            datarow("adjwalletsoprincipal") = UCase(If(Not IsDBNull(row.Item("adjwalletsoprincipal")), CType(Trim(row.Item("adjwalletsoprincipal")), System.Decimal), 0))
                            datarow("adjwalletsocharge") = UCase(If(Not IsDBNull(row.Item("adjwalletsocharge")), CType(Trim(row.Item("adjwalletsocharge")), System.Decimal), 0))
                            datarow("walletsokppotxncount") = UCase(If(Not IsDBNull(row.Item("walletsokppotxncount")), CType(Trim(row.Item("walletsokppotxncount")), System.Int32), 0))
                            datarow("walletsokppoprincipal") = UCase(If(Not IsDBNull(row.Item("walletsokppoprincipal")), CType(Trim(row.Item("walletsokppoprincipal")), System.Decimal), 0))
                            datarow("walletsokppocharge") = UCase(If(Not IsDBNull(row.Item("walletsokppocharge")), CType(Trim(row.Item("walletsokppocharge")), System.Decimal), 0))
                            datarow("adjwalletsokppotxncount") = UCase(If(Not IsDBNull(row.Item("adjwalletsokppotxncount")), CType(Trim(row.Item("adjwalletsokppotxncount")), System.Int32), 0))
                            datarow("adjwalletsokppoprincipal") = UCase(If(Not IsDBNull(row.Item("adjwalletsokppoprincipal")), CType(Trim(row.Item("adjwalletsokppoprincipal")), System.Decimal), 0))
                            datarow("adjwalletsokppocharge") = UCase(If(Not IsDBNull(row.Item("adjwalletsokppocharge")), CType(Trim(row.Item("adjwalletsokppocharge")), System.Decimal), 0))
                        End If
                        dtable.Rows.Add(datarow)
                        dtable.AcceptChanges()
                    End If
                Next
                dtmerger.Clear()
                dtmerger.Merge(dtable)
            Catch ex As Exception
                kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletcustomerbal7")
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End Try

            view = New DataView(dtmerger)
            view.Sort = "customername ASC"

            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadwalletreport("WalletCustomerBalance")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletcustomerbalmain")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                walletcustomerbal()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub

    Private Function checkingWalletID(ByVal walletid As String)
        Try
            If (walletid.Substring(4, 3) = "002") Then
                Dim wallet As Integer = Convert.ToString(walletid.Substring(7, 10))
                Dim temp As Integer = wallet Mod 100
                Dim DBstart As Integer
                Dim DBlast As Integer
                If (temp = 0) Then
                    DBstart = wallet - 99
                    DBlast = wallet
                Else
                    DBstart = (wallet - temp) + 1
                    DBlast = DBstart + 99
                End If
                Return "wallet" & DBstart.ToString() & "_" & DBlast.ToString()
            Else
                Dim wallet As Integer = Convert.ToString(walletid.Substring(4, 10))
                Dim temp As Integer = wallet Mod 100
                Dim DBstart As Integer
                Dim DBlast As Integer
                If (temp = 0) Then

                    DBstart = wallet - 99
                    DBlast = wallet
                Else
                    DBstart = (wallet - temp) + 1
                    DBlast = DBstart + 99
                End If
                Return "wallet" & DBstart.ToString() & "_" & DBlast.ToString()
            End If
        Catch ex As Exception
            kplog.Fatal(ex.Message)
            Return "error wallet"
        End Try
    End Function
    'checking of wallet Database for Ledger
    Public Function walletUserconf(ByVal walletid As String)
        'open connection kpforms.walleuserconif'
        'identify what the ip address
        Try
            Dim wallet As Integer = Convert.ToInt32(walletid.Substring(4, 10))
            Dim DBWallet As String = checkingWalletID(walletid)
            Con.OpenCon("KPMLWallet")
            Using Con.GetCon()
                Dim strqueryW As String = String.Empty
                strqueryW = "SELECT `DBIP`, `User`, CONVERT(AES_DECRYPT(`Password`,'" + Keyloger + "'), CHAR) AS Pass, `Pool`, `Tout`, `Min`, `Max`, `Port` FROM kpforms.walletuserconf WHERE WalletFrom <= '" + wallet.ToString() + "'AND WalletTo >= '" + wallet.ToString() + "';"
                cmd = New MySqlCommand(strqueryW, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                If (dr.HasRows) Then
                    dr.Read()
                    Dim dbip As String = dr("DBIP").ToString()
                    Dim user As String = dr("User").ToString()
                    Dim pass As String = dr("Pass").ToString()
                    Dim pool As String = dr("Pool").ToString()
                    Dim tout As Int32 = Convert.ToInt32(dr("Tout").ToString())
                    Dim min As Int32 = Convert.ToInt32(dr("Min").ToString())
                    Dim max As Int32 = Convert.ToInt32(dr("Max").ToString())
                    Dim port As Int32 = Convert.ToInt32(dr("Port").ToString())
                    dr.Close()
                    Con.CloseCon()
                    opencon = New DBwallet(dbip, "kpwalletReports", user, pass, pool, max, min, tout)
                End If

            End Using
            Return opencon
        Catch ex As Exception
            kplog.Fatal(ex.Message)
            Return "error wallet"
        End Try
    End Function
    ' express summary report
    Public Sub express_summary()
        dtmerger = GetExpressSummaryDataTable()
        dtmerger.Clear()
        Dim xloop As Int64 = 0


        Dim view As New DataView()

        Try
            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select


            Dim dtexpressagent As DataTable = New DataTable()
            Try
                getconnections()
                cmd = New MySqlCommand("CALL `kpOFW`.`HOcorporate_MLExpress2`();", Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                If dr.HasRows() Then
                    dtexpressagent.Load(dr)
                End If
                dr.Close()
            Catch ex As Exception
                kplog.Error(ex.ToString() + Con.GetCon.ConnectionString())
            End Try

            Dim dtbeginbal As DataTable = New DataTable()
            Dim dtfrom = _datefrom.AddDays(-1)
            For Each brow2 As DataRow In dtexpressagent.Rows
                Try
                    'Beginning Balance
                    'Con.OpenCon("KPWalletSplitB")
                    Con.OpenCon("KPMLWallet")
                    'databasewallet = walletUserconf(brow2.Item("accountno"))
                    'Dim conn As MySqlConnection = databasewallet.getConnection

                    Using Con.GetCon()
                        'strquery = String.Format(" CALL `KPWalletReportsSP`.HOgetExpressBeginBal2('{0}','{1}','{2}','{3}','{4}')", brow2.Item("accountno"), dtfrom.ToString("yyyy-MM-dd"), brow2.Item("username"), brow2.Item("custid"), brow2.Item("fullname"))
                        strquery = String.Format(" CALL HOgetExpressBeginBal2('{0}','{1}','{2}','{3}','{4}')", brow2.Item("accountno"), dtfrom.ToString("yyyy-MM-dd"), brow2.Item("username"), brow2.Item("custid"), brow2.Item("fullname"))
                        kplog.Info(strquery)
                        cmd = New MySqlCommand(strquery, Con.GetCon())
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        If dr.HasRows() Then
                            dtbeginbal.Load(dr)
                        End If
                        dr.Close()
                        cmd = Nothing
                        Con.GetCon.Close()

                    End Using

                    'Using Con.GetCon()
                    '    'change connection due to split modify by RC
                    '    'strquery = String.Format(" CALL `kpmobile`.HOgetExpressBeginBal2('{0}','{1}','{2}','{3}','{4}')", brow2.Item("accountno"), dtfrom.ToString("yyyy-MM-dd"), brow2.Item("username"), brow2.Item("custid"), brow2.Item("fullname"))
                    '    strquery = String.Format(" CALL `kpwalletReports`.HOgetExpressBeginBal2('{0}','{1}','{2}','{3}','{4}')", brow2.Item("accountno"), dtfrom.ToString("yyyy-MM-dd"), brow2.Item("username"), brow2.Item("custid"), brow2.Item("fullname"))
                    '    kplog.Info("here")
                    '    kplog.Info(cmd.CommandText.ToString())
                    'cmd = New MySqlCommand(strquery, C)
                    '    cmd.CommandTimeout = 0
                    '    dr = cmd.ExecuteReader
                    '    If dr.HasRows() Then
                    '        dtbeginbal.Load(dr)
                    '    End If
                    '    dr.Close()
                    '    cmd = Nothing
                    'End Using
                    'Con.CloseCon()
                Catch ex As Exception
                    kplog.Error(ex.ToString() + Con.GetCon.ConnectionString())
                End Try
            Next
            kplog.Info(dtbeginbal.Rows.Count.ToString())

            Try

                xloop = 0
                For Each row As DataRow In dtbeginbal.Rows
                    datarow = dtmerger.NewRow()
                    datarow("ID") = xloop
                    datarow("walletno") = row("walletno").ToString()
                    datarow("username") = row("username").ToString()
                    datarow("custid") = row("custid").ToString()
                    datarow("customername") = row("customername").ToString()
                    datarow("beginningbal") = row("beginningbal").ToString()
                    dtmerger.Rows.Add(datarow)
                    dtmerger.AcceptChanges()
                    xloop = xloop + 1
                Next
            Catch ex As Exception
                kplog.Error(ex.ToString() + Con.GetCon.ConnectionString())
            End Try
            'getfullnamewallet(dtmerger, "custid")
            Dim dtwalletload As DataTable = New DataTable()
            For Each row As DataRow In dtmerger.Rows
                Try
                    Dim walletno = row.Item("walletno").ToString()
                    'LOADING
                    Con.OpenCon("KPMLWallet")
                    'Con.OpenCon("KPUsers")
                    'databasewallet = walletUserconf(walletno)
                    'Dim conn As MySqlConnection = databasewallet.getConnection
                    Using Con.GetCon()
                        'strquery = String.Format("CALL `KPWalletReportsSP`.`HOgetExpressLoading`('{0}','{1}','{2}')", walletno, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                        strquery = String.Format("CALL HOgetExpressLoading('{0}','{1}','{2}')", walletno, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                        kplog.Info(strquery)
                        cmd = New MySqlCommand(strquery, Con.GetCon())
                        dr = cmd.ExecuteReader
                        If dr.HasRows() Then
                            dtwalletload.Load(dr)
                        End If
                        dr.Close()
                        cmd = Nothing
                        Con.GetCon.Close()
                    End Using



                    'Con.OpenCon("KPWalletSplitB") 'for new connection due to spit
                    'Using Con.GetCon()


                    '    strquery = String.Format("CALL `kpwalletReports`.`HOgetExpressLoading`('{0}','{1}','{2}')", walletno, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                    '    'strquery = String.Format("CALL `kpdomestic`.HOgetWalletLoadingSummary('','{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                    '    cmd = New MySqlCommand(strquery, Con.GetCon())
                    '    cmd.CommandTimeout = 0
                    '    dr = cmd.ExecuteReader
                    '    If dr.HasRows() Then
                    '        dtwalletload.Load(dr)
                    '    End If
                    '    dr.Close()
                    '    cmd = Nothing
                    'End Using
                    'Con.CloseCon()
                Catch ex As Exception
                    kplog.Error(ex.ToString() + Con.GetCon.ConnectionString())
                End Try
            Next

            Try
                xloop = 0
                For Each row As DataRow In dtmerger.Rows
                    Dim custname = row("customername").ToString().Trim().ToLower()
                    Dim walletno = row("walletno").ToString().Trim().ToLower()
                    For Each row1 As DataRow In dtwalletload.Rows
                        If walletno = row1.Item("walletno").ToString().Trim().ToLower() Then
                            dtmerger.Rows(xloop).BeginEdit()
                            dtmerger(xloop)("loadtxncount") = row1.Item("txncount").ToString()
                            dtmerger(xloop)("loadprincipal") = row1.Item("principal").ToString()
                            dtmerger.Rows(xloop).EndEdit()
                            dtmerger.AcceptChanges()
                        End If
                    Next
                    xloop = xloop + 1
                Next
            Catch ex As Exception
                kplog.Error(ex.ToString() + Con.GetCon.ConnectionString())
            End Try

            Dim dtexpressbp As DataTable = New DataTable()
            Try
                'BILLSPAY
                'kppartnersExpress federated
                Con.OpenCon("KPMLWallet")
                Using Con.GetCon()
                    strquery = String.Format("CALL `KPPartnersExpress`.`HOgetExpressBillspaySummary`('','{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    If dr.HasRows() Then
                        dtexpressbp.Load(dr)
                    End If
                    dr.Close()
                    cmd = Nothing
                End Using
                Con.CloseCon()
            Catch ex As Exception
                kplog.Error(ex.ToString() + Con.GetCon.ConnectionString())
            End Try

            Try
                xloop = 0
                For Each row As DataRow In dtmerger.Rows
                    Dim walletno = row("walletno").ToString().Trim().ToLower()
                    Dim username = row("username").ToString().Trim().ToLower()
                    For Each row1 As DataRow In dtexpressbp.Rows
                        If walletno = row1.Item("walletno").ToString().Trim().ToLower() And username = row1.Item("username").ToString().Trim().ToLower() Then
                            dtmerger.Rows(xloop).BeginEdit()
                            dtmerger(xloop)("billspaytxncount") = row1.Item("txncount").ToString()
                            dtmerger(xloop)("billspayprincipal") = row1.Item("principal").ToString()
                            dtmerger(xloop)("billspaycharge") = row1.Item("charge").ToString()
                            dtmerger(xloop)("billspaycomm") = row1.Item("commission").ToString()
                            dtmerger.Rows(xloop).EndEdit()
                            dtmerger.AcceptChanges()
                        End If
                    Next
                    xloop = xloop + 1
                Next
            Catch ex As Exception
                kplog.Error(ex.ToString() + Con.GetCon.ConnectionString())
            End Try

            Dim dtwalletso As DataTable = New DataTable()
            Try
                'WALLET SO
                Con.OpenCon("KPMLWallet")
                Using Con.GetCon()
                    'strquery = String.Format("CALL `KPWalletReportsSP`.HOgetWalletSOSummary('','{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                    strquery = String.Format("CALL HOgetWalletSOSummary('','{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    If dr.HasRows() Then
                        dtwalletso.Load(dr)
                    End If
                    dr.Close()
                    cmd = Nothing
                End Using
                Con.CloseCon()
            Catch ex As Exception
                kplog.Error(ex.ToString() + Con.GetCon.ConnectionString())
            End Try

            Try
                xloop = 0
                For Each row As DataRow In dtmerger.Rows
                    Dim walletno = row("walletno").ToString().Trim().ToLower()
                    Dim username = row("username").ToString().Trim().ToLower()
                    Dim custid = row("custid").ToString().Trim().ToLower()
                    For Each row1 As DataRow In dtwalletso.Rows
                        If walletno = row1.Item("walletno").ToString().Trim().ToLower() And username = row1.Item("username").ToString().Trim().ToLower() Then
                            dtmerger.Rows(xloop).BeginEdit()
                            dtmerger(xloop)("walletsotxncount") = row1.Item("txncount").ToString()
                            dtmerger(xloop)("walletsoprincipal") = row1.Item("principal").ToString()
                            dtmerger(xloop)("walletsocharge") = row1.Item("charge").ToString()
                            dtmerger.Rows(xloop).EndEdit()
                            dtmerger.AcceptChanges()
                        End If
                    Next
                    xloop = xloop + 1
                Next
            Catch ex As Exception
                kplog.Error(ex.ToString() + Con.GetCon.ConnectionString())
            End Try


            Dim dtexpressso As DataTable = New DataTable()
            Try
                'EXPRESS SO KP PO
                Con.OpenCon("KPMLExpress")
                Using Con.GetCon()
                    strquery = String.Format("CALL `kpOFWLogs`.`HOgetExpressSOSummary`('','{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    If dr.HasRows() Then
                        dtexpressso.Load(dr)
                    End If
                    dr.Close()
                    cmd = Nothing
                End Using
                Con.CloseCon()
            Catch ex As Exception
                kplog.Error(ex.ToString() + Con.GetCon.ConnectionString())
            End Try

            Try
                xloop = 0
                For Each row As DataRow In dtmerger.Rows
                    Dim walletno = row("walletno").ToString().Trim().ToLower()
                    Dim username = row("username").ToString().Trim().ToLower()
                    Dim custid = row("custid").ToString().Trim().ToLower()
                    For Each row1 As DataRow In dtexpressso.Rows
                        If walletno = row1.Item("walletno").ToString().Trim().ToLower() And username = row1.Item("username").ToString().Trim().ToLower() Then
                            dtmerger.Rows(xloop).BeginEdit()
                            dtmerger(xloop)("walletsokppotxncount") = row1.Item("txncount").ToString()
                            dtmerger(xloop)("walletsokppoprincipal") = row1.Item("principal").ToString()
                            dtmerger(xloop)("walletsokppocharge") = row1.Item("charge").ToString()
                            dtmerger(xloop)("walletsokppocomm") = row1.Item("commission").ToString()
                            dtmerger.Rows(xloop).EndEdit()
                            dtmerger.AcceptChanges()
                        End If
                    Next
                    xloop = xloop + 1
                Next
            Catch ex As Exception
                kplog.Error(ex.ToString() + Con.GetCon.ConnectionString())
            End Try

            Dim dtexpresseload As DataTable = New DataTable()
            Try
                'Express ELOAD
                Con.OpenCon("KPMLWallet")
                Using Con.GetCon()
                    strquery = String.Format("CALL `KPPartnersExpress`.`HOgetExpressEloadSummary`('','{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    If dr.HasRows() Then
                        dtexpresseload.Load(dr)
                    End If
                    dr.Close()
                    cmd = Nothing
                End Using
                Con.CloseCon()
            Catch ex As Exception
                kplog.Error(ex.ToString() + Con.GetCon.ConnectionString())
            End Try

            Try
                xloop = 0
                For Each row As DataRow In dtmerger.Rows
                    Dim walletno = row("walletno").ToString().Trim().ToLower()
                    Dim username = row("username").ToString().Trim().ToLower()
                    Dim custid = row("custid").ToString().Trim().ToLower()
                    For Each row1 As DataRow In dtexpresseload.Rows
                        If walletno = row1.Item("walletno").ToString().Trim().ToLower() And username = row1.Item("username").ToString().Trim().ToLower() Then
                            dtmerger.Rows(xloop).BeginEdit()
                            dtmerger(xloop)("walleteloadtxncount") = row1.Item("txncount").ToString()
                            dtmerger(xloop)("walleteloadprincipal") = row1.Item("principal").ToString()
                            dtmerger(xloop)("walleteloadcharge") = row1.Item("charge").ToString()
                            dtmerger(xloop)("walleteloadcomm") = row1.Item("commission").ToString()
                            dtmerger.Rows(xloop).EndEdit()
                            dtmerger.AcceptChanges()
                        End If
                    Next
                    xloop = xloop + 1
                Next
            Catch ex As Exception
                kplog.Error(ex.ToString() + Con.GetCon.ConnectionString())
            End Try


            Dim dtexpressapi As DataTable = New DataTable()
            Try
                'EXPRESS API
                Con.OpenCon("KPMLWallet")
                Using Con.GetCon()
                    strquery = String.Format("CALL `KPPartnersExpress`.`HOgetExpressAPISummary`('','{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    If dr.HasRows() Then
                        dtexpressapi.Load(dr)
                    End If
                    dr.Close()
                    cmd = Nothing
                End Using
                Con.CloseCon()
            Catch ex As Exception
                kplog.Error(ex.ToString() + Con.GetCon.ConnectionString())
            End Try

            Try
                xloop = 0
                For Each row As DataRow In dtmerger.Rows
                    Dim walletno = row("walletno").ToString().Trim().ToLower()
                    Dim username = row("username").ToString().Trim().ToLower()
                    Dim custid = row("custid").ToString().Trim().ToLower()
                    For Each row1 As DataRow In dtexpressapi.Rows
                        If walletno = row1.Item("walletno").ToString().Trim().ToLower() And username = row1.Item("username").ToString().Trim().ToLower() Then
                            dtmerger.Rows(xloop).BeginEdit()
                            dtmerger(xloop)("walletcorptxncount") = row1.Item("txncount").ToString()
                            dtmerger(xloop)("walletcorpprincipal") = row1.Item("principal").ToString()
                            dtmerger(xloop)("walletcorpcharge") = row1.Item("charge").ToString()
                            dtmerger(xloop)("walletcorpcomm") = row1.Item("commission").ToString()
                            dtmerger.Rows(xloop).EndEdit()
                            dtmerger.AcceptChanges()
                        End If
                    Next
                    xloop = xloop + 1
                Next
            Catch ex As Exception
                kplog.Error(ex.ToString() + Con.GetCon.ConnectionString())
            End Try


            Dim dtexpressdompo As DataTable = New DataTable()
            For Each row As DataRow In dtmerger.Rows
                Try
                    Dim walletno = row.Item("walletno").ToString()
                    'EXPRESS DOMESTIC PAYOUT
                    'databasewallet = walletUserconf(walletno)
                    'Dim conn As MySqlConnection = databasewallet.getConnection
                    Con.OpenCon("KPMLWallet")
                    Using Con.GetCon()

                        'strquery = String.Format("CALL `KPWalletReportsSP`.`HOgetExpressDomestic`('{0}','{1}','{2}')", walletno, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                        strquery = String.Format("CALL HOgetExpressDomestic('{0}','{1}','{2}')", walletno, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                        kplog.Info(strquery)
                        cmd = New MySqlCommand(strquery, Con.GetCon())
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        If dr.HasRows() Then
                            dtexpressdompo.Load(dr)
                        End If
                        dr.Close()
                        cmd = Nothing
                        Con.GetCon().Close()

                    End Using
                    'Con.OpenCon("KPWalletSplitB") ' new connection due to split database
                    'Using Con.GetCon()
                    '    strquery = String.Format("CALL `kpwalletReports`.`HOgetExpressDomestic`('{0}','{1}','{2}')", walletno, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                    '    'strquery = String.Format("CALL `kpmobile`.`HOgetExpressDomestic`('{0}','{1}','{2}')", walletno, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                    '    'strquery = String.Format("CALL `kpdomestic`.`HOgetExpressDomSummary`('{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                    '    cmd = New MySqlCommand(strquery, Con.GetCon())
                    '    cmd.CommandTimeout = 0
                    '    dr = cmd.ExecuteReader
                    '    If dr.HasRows() Then
                    '        dtexpressdompo.Load(dr)
                    '    End If
                    '    dr.Close()
                    '    cmd = Nothing
                    'End Using
                    'Con.CloseCon()
                Catch ex As Exception
                    kplog.Error(ex.ToString() + Con.GetCon.ConnectionString())
                End Try
            Next

            Try
                xloop = 0
                For Each row As DataRow In dtmerger.Rows
                    Dim walletno = row("walletno").ToString().Trim()
                    Dim username = row("username").ToString().Trim()
                    Dim custid = row("custid").ToString().Trim()
                    For Each row1 As DataRow In dtexpressdompo.Rows
                        If walletno = row1.Item("walletno").ToString().Trim() Then
                            dtmerger.Rows(xloop).BeginEdit()
                            dtmerger(xloop)("walletdomtxncount") = row1.Item("txncount").ToString()
                            dtmerger(xloop)("walletdomprincipal") = row1.Item("principal").ToString()
                            dtmerger(xloop)("walletdomcharge") = row1.Item("charge").ToString()
                            dtmerger(xloop)("walletdomcomm") = row1.Item("commission").ToString()
                            dtmerger.Rows(xloop).EndEdit()
                            dtmerger.AcceptChanges()
                        End If
                    Next
                    xloop = xloop + 1
                Next
            Catch ex As Exception
                kplog.Error(ex.ToString() + Con.GetCon.ConnectionString())
            End Try


            view = New DataView(dtmerger)
            view.Sort = "customername ASC"

            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadwalletreport("ExpressSummary")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " express_summarymain")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                walletcustomerbal()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    'express eload
    Public Sub expresseload()

        'Dim _datefrom As String = ""
        'Dim _dateto As String = ""
        'Dim period As Integer = drpPeriod.Text

        Dim _datefrom As DateTime
        Dim _dateto As DateTime
        Dim period As Integer = drpPeriod.Text

        dtmerger.Clear()


        Try

            Select Case period
                '    Case 1 'DAILY
                '        _datefrom = txtDate.Text
                '        _dateto = txtDate.Text
                '    Case 2 'MONTHLY
                '        Dim firstday = String.Format("{0}-{1}-{2}", drpYear.Text, drpMonth.Text.PadLeft(2, "0"), "01")
                '        Dim lastday = String.Format("{0}-{1}-{2}", drpYear.Text, drpMonth.Text.PadLeft(2, "0"), _monthnoofdays)
                '        _datefrom = firstday
                '        _dateto = lastday
                '    Case 3 'RANGE
                '        _datefrom = txtdateFrom.Text
                '        _dateto = txtdateTo.Text
                'End Select

                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select
            'getconnections()
            'cmd = New MySqlCommand("CALL `kpOFW`.`HOcorporate_MLExpress`();", Con.GetCon())
            'cmd.CommandTimeout = 0
            'dr = cmd.ExecuteReader
            'If dr.HasRows() Then
            '    dtable.Load(dr)
            'End If
            'dr.Close()

            'Response.Write("<script>window.open('" & System.Configuration.ConfigurationManager.AppSettings("EloadUrl") & _
            '                   "?reporttype=" & ReportType & "&extype=" & rb.Text & "&transtype=" & drpTransactionTypelist.Text & "&UserRole=" & userrole & "&datefrom=" & _
            '                   _datefrom & "&dateto=" & _dateto & "&emailadd=" & emailadd & "&partnername=" & _
            '                   partnername & "&partnerid=" & drppartnerid.Text & _
            '                    "&period=" & period & "&userfullname=" & Session("UserFullname") & " ','_blank')</script>")

            'Dim walletno As Int64 = Convert.ToInt64(integtype)
            'databasewallet = walletUserconf(walletno)
            'Dim conn As MySqlConnection = databasewallet.getConnection
	Con.OpenCon("KPMLWallet")

            Using Con.GetCon()
                strquery = String.Format("CALL `KPPartnersExpress`.`HOgetExpressEload`('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                If dr.HasRows() Then
                    dt.Load(dr)
                End If
                dr.Close()

            End Using
            Con.GetCOn.Close()
            'Con.OpenCon("KPWalletSplitB")
            'Using Con.GetCon()
            '    strquery = String.Format("CALL `KPPartnersExpress`.`HOgetExpressEload`('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
            '    cmd = New MySqlCommand(strquery, Con.GetCon())
            '    cmd.CommandTimeout = 0
            '    dr = cmd.ExecuteReader
            '    If dr.HasRows() Then
            '        dt.Load(dr)
            '    End If
            '    dr.Close()
            'End Using
            'Con.CloseCon()

            If dt.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                getnetowrkname(dt)
                dtmerger = dt
                loadwalletreport("ExpressEload")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " expresseload")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    'ML Express Cancelled Billspayment Report
    Public Sub ExpressCancelledBillspayment()
        Dim _datefrom As DateTime
        Dim _dateto As DateTime
        Dim period As Integer = drpPeriod.Text
        dtable = expressCBtable()
        dtable.Clear()
        dtable1 = expressCBtable()
        dtable1.Clear()
        dtmerger = expressCBtable()
        dtmerger.Clear()

        Try
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select
            Con.OpenCon("KPBillsPayment")
            strquery = String.Format("CALL `kpbillspayment`.`HOExpressCBP`('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))

            'Using Con.GetCon()
            '    strquery = String.Format("CALL `kpbillspayment`.`HOExpressCBP`('{0}','{1}','{2}')", partnerID, _datefrom, _dateto)
            '    cmd = New MySqlCommand(strquery, Con.GetCon())
            '    cmd.CommandTimeout = 0
            '    dr = cmd.ExecuteReader
            '    If dr.HasRows() Then
            '        dt.Load(dr)
            '    End If
            '    dr.Close()
            'End Using

            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                While dr.Read()
                    datarow = dtable.NewRow()
                    datarow("ControlNo") = UCase(If(Not IsDBNull(dr.Item("ControlNo")), Trim(dr.Item("ControlNo")), "-"))
                    datarow("SenderName") = UCase(If(Not IsDBNull(dr.Item("SenderName")), Trim(dr.Item("SenderName")), "-"))
                    datarow("TransDate") = UCase(If(Not IsDBNull(dr.Item("TransDate")) And CType(dr.Item("TransDate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("TransDate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("ReceiverName") = UCase(If(Not IsDBNull(dr.Item("ReceiverName")), Trim(dr.Item("ReceiverName")), "-"))
                    datarow("DateCancelled") = UCase(If(Not IsDBNull(dr.Item("DateCancelled")) And CType(dr.Item("DateCancelled"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("DateCancelled"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("KPTN") = UCase(If(Not IsDBNull(dr.Item("KPTN")), Trim(dr.Item("KPTN")), "-"))
                    datarow("Amount") = UCase(If(Not IsDBNull(dr.Item("Amount")), CType(Trim(dr.Item("Amount")), System.Decimal), 0))
                    datarow("Charge") = UCase(If(Not IsDBNull(dr.Item("Charge")), CType(Trim(dr.Item("Charge")), System.Decimal), 0))
                    datarow("Referenceno") = UCase(If(Not IsDBNull(dr.Item("Referenceno")), Trim(dr.Item("Referenceno")), "-"))
                    datarow("Othercharge") = UCase(If(Not IsDBNull(dr.Item("Othercharge")), Trim(dr.Item("Othercharge")), "-"))
                    datarow("Operator") = UCase(If(Not IsDBNull(dr.Item("Operator")), Trim(dr.Item("Operator")), "-"))
                    datarow("Reason") = UCase(If(Not IsDBNull(dr.Item("Reason")), Trim(dr.Item("Reason")), "-"))
                    datarow("Currency") = UCase(If(Not IsDBNull(dr.Item("Currency")), Trim(dr.Item("Currency")), "-"))
                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()
                    dtable1.Merge(dtable)
                End While
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()
            dtmerger.Merge(dtable1)
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadwalletreport("Cancelled-SendoutBPX")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " ExpressCancelledBillspayment")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    Private Function expressCBtable() As DataTable
        Dim dt As DataTable = New DataTable
        Dim id As New DataColumn("ID", GetType(System.Int32))
        id.AutoIncrement = True
        id.AutoIncrementSeed = 1
        id.AutoIncrementStep = 1
        dt.Columns.Add(id)
        dt.Columns.Add(New DataColumn("ControlNo", GetType(System.String)))
        dt.Columns.Add(New DataColumn("SenderName", GetType(System.String)))
        dt.Columns.Add(New DataColumn("TransDate", GetType(System.String)))
        dt.Columns.Add(New DataColumn("ReceiverName", GetType(System.String)))
        dt.Columns.Add(New DataColumn("DateCancelled", GetType(System.String)))
        dt.Columns.Add(New DataColumn("KPTN", GetType(System.String)))
        dt.Columns.Add(New DataColumn("Amount", GetType(System.String)))
        dt.Columns.Add(New DataColumn("Charge", GetType(System.String)))
        dt.Columns.Add(New DataColumn("Referenceno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("Othercharge", GetType(System.String)))
        dt.Columns.Add(New DataColumn("Operator", GetType(System.String)))
        dt.Columns.Add(New DataColumn("Reason", GetType(System.String)))
        dt.Columns.Add(New DataColumn("Currency", GetType(System.String)))
        dt.PrimaryKey = New DataColumn() {id}
        Return dt
    End Function
    'ML Wallet Cancelled Billspayment Report
    Public Sub WalletCancelledBillspayment()
        Dim _datefrom As DateTime
        Dim _dateto As DateTime
        Dim period As Integer = drpPeriod.Text
        dtable = walletCBtable()
        dtable.Clear()
        dtable1 = walletCBtable()
        dtable1.Clear()
        dtmerger = walletCBtable()
        dtmerger.Clear()
        Try
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select
            Con.OpenCon("KPBillsPayment")
            kplog.Info("Connection Open at " + Con.GetCon.DataSource.ToString() + " " + Con.GetCon.Database.ToString())
            strquery = String.Format("CALL `kpbillspayment`.`HOWalletCBP`('{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))


            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                While dr.Read()
                    datarow = dtable.NewRow()
                    datarow("Transdate") = UCase(If(Not IsDBNull(dr.Item("Transdate")) And CType(dr.Item("Transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("Transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("CancelledDate") = UCase(If(Not IsDBNull(dr.Item("CancelledDate")) And CType(dr.Item("CancelledDate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("CancelledDate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("ReceiverName") = UCase(If(Not IsDBNull(dr.Item("ReceiverName")), Trim(dr.Item("ReceiverName")), "-"))
                    datarow("SenderName") = UCase(If(Not IsDBNull(dr.Item("SenderName")), Trim(dr.Item("SenderName")), "-"))
                    datarow("BillspayPartners") = UCase(If(Not IsDBNull(dr.Item("BillspayPartners")), Trim(dr.Item("BillspayPartners")), "-"))
                    datarow("NoofTransaction") = UCase(If(Not IsDBNull(dr.Item("NoofTransaction")), Trim(dr.Item("NoofTransaction")), "-"))
                    datarow("Currency") = UCase(If(Not IsDBNull(dr.Item("Currency")), Trim(dr.Item("Currency")), "-"))
                    datarow("Principal") = UCase(If(Not IsDBNull(dr.Item("Principal")), CType(Trim(dr.Item("Principal")), System.Decimal), 0))
                    datarow("Charge") = UCase(If(Not IsDBNull(dr.Item("Charge")), CType(Trim(dr.Item("Charge")), System.Decimal), 0))
                    datarow("Commission") = UCase(If(Not IsDBNull(dr.Item("Commission")), CType(Trim(dr.Item("Commission")), System.Decimal), 0))
                    datarow("ConvenienceFee") = UCase(If(Not IsDBNull(dr.Item("ConvenienceFee")), CType(Trim(dr.Item("ConvenienceFee")), System.Decimal), 0))
                    datarow("ReferenceNo") = UCase(If(Not IsDBNull(dr.Item("ReferenceNo")), Trim(dr.Item("ReferenceNo")), "-"))
                    datarow("Operator") = UCase(If(Not IsDBNull(dr.Item("Operator")), Trim(dr.Item("Operator")), "-"))
                    datarow("CancelledbyOperator") = UCase(If(Not IsDBNull(dr.Item("CancelledbyOperator")), Trim(dr.Item("CancelledbyOperator")), "-"))
                    datarow("CancelReason") = UCase(If(Not IsDBNull(dr.Item("CancelReason")), Trim(dr.Item("CancelReason")), "-"))
                    datarow("accountid") = UCase(If(Not IsDBNull(dr.Item("AccountID")), Trim(dr.Item("AccountID")), "-"))
                    datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("KPTN")), Trim(dr.Item("KPTN")), "-"))
                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()
                    dtable1.Merge(dtable)
                End While
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()
            kplog.Info("Connection Closed in " + Con.GetCon.DataSource.ToString() + " " + Con.GetCon.Database.ToString())
            dtmerger.Merge(dtable1)

            getwalletid(dtmerger)
            getwalletfee(dtmerger)
            'getfullnamewallet(dtmerger, "operator")

            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadwalletreport("Cancelled-SendoutBPW")
            End If

        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " WalletCancelledBillspayment")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    Private Function walletCBtable() As DataTable
        Dim dt As DataTable = New DataTable
        Dim id As New DataColumn("ID", GetType(System.Int32))
        id.AutoIncrement = True
        id.AutoIncrementSeed = 1
        id.AutoIncrementStep = 1
        dt.Columns.Add(id)
        dt.Columns.Add(New DataColumn("Transdate", GetType(System.String)))
        dt.Columns.Add(New DataColumn("CancelledDate", GetType(System.String)))
        dt.Columns.Add(New DataColumn("ReceiverName", GetType(System.String)))
        dt.Columns.Add(New DataColumn("SenderName", GetType(System.String)))
        dt.Columns.Add(New DataColumn("BillspayPartners", GetType(System.String)))
        dt.Columns.Add(New DataColumn("NoofTransaction", GetType(System.String)))
        dt.Columns.Add(New DataColumn("Currency", GetType(System.String)))
        dt.Columns.Add(New DataColumn("Principal", GetType(System.String)))
        dt.Columns.Add(New DataColumn("Charge", GetType(System.String)))
        dt.Columns.Add(New DataColumn("Commission", GetType(System.String)))
        dt.Columns.Add(New DataColumn("ConvenienceFee", GetType(System.String)))
        dt.Columns.Add(New DataColumn("ReferenceNo", GetType(System.String)))
        dt.Columns.Add(New DataColumn("Operator", GetType(System.String)))
        dt.Columns.Add(New DataColumn("CancelledbyOperator", GetType(System.String)))
        dt.Columns.Add(New DataColumn("CancelReason", GetType(System.String)))
        dt.Columns.Add(New DataColumn("AccountID", GetType(System.String)))
        dt.Columns.Add(New DataColumn("KPTN", GetType(System.String)))
        dt.PrimaryKey = New DataColumn() {id}
        Return dt
    End Function
    'wallet transaction history
    Public Sub wallettranshistory()
        Try
            Dim counter As Integer = 0
            Dim min As Integer = 0
            Dim max As Integer = 0
            'Dim wtable1 As Integer
            Dim dbname As String = String.Empty
            'Dim intwallet As Integer
            Dim walletstr As String = String.Empty
            Dim tablename As String = String.Empty
            'Dim walletno As Integer
            Dim walletNum As String = String.Empty

            walletNum = SrchBox.Text

            Session("beginningbal") = 0
            dtable = GetMobileDatatable()
            dtable1 = GetMobileDatatable()
            dtable1.Clear()
            dtmerger = GetMobileDatatable()

            dtmerger.Clear()

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select
            Try
                'wallet emp
                If ReportType = 10 Then
                    Con.OpenCon("KPMLWalletEmp")
                    Using Con.GetCon()
                        strquery = String.Format("CALL `kpmobile`.`HOgetWalletBeginBalTH`('{0}','{1}')", walletNum, _datefrom.ToString("yyyy-MM-dd"))
                        kplog.Info(strquery)
                        cmd = New MySqlCommand(strquery, Con.GetCon())
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        If dr.Read() Then
                            Session("beginningbal") = dr.Item("beginningbalance")
                        End If
                        Dim test As String = Session("beginningbal")
                        dr.Close()
                        cmd = Nothing
                    End Using
                    Con.CloseCon()
                Else
                    'databasewallet = walletUserconf(partnerID)
                    'Dim conn As MySqlConnection = databasewallet.getConnection
                    'walletstr = partnerID
                    'intwallet = Convert.ToInt32(walletstr.Substring(walletstr.Length - 7))
                    'wtable1 = intwallet Mod 100
                    'If wtable1 = 0 Then
                    '    min = intwallet - 99
                    '    max = intwallet
                    'Else
                    '    min = (intwallet - wtable1) + 1
                    '    max = min + 99
                    'End If

                    'dbname = "wallet" + min.ToString() + "_" + max.ToString() + ""
                    'tablename = "walletno" + intwallet.ToString() + ""

                    Con.OpenCon("KPMLWallet")
                    Using Con.GetCon()
                        'strquery = String.Format("CALL `KPWalletReportsSP`.`HOgetWalletBeginBalTH2`('{0}','{1}','{2}')", partnerID, tablename, _datefrom.ToString("yyyy-MM-dd"))
                        strquery = String.Format("CALL HOgetWalletBeginBalTH3('{0}','{1}','{2}')", walletNum, tablename, _datefrom.ToString("yyyy-MM-dd"))
                        cmd = New MySqlCommand(strquery, Con.GetCon())
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        If dr.Read() Then
                            Session("beginningbal") = dr.Item("beginningbalance")
                        End If
                        Dim test As String = Session("beginningbal")
                        dr.Close()
                        cmd = Nothing
                    End Using
                    Con.GetCon.Close()
                End If

            Catch ex As Exception
                kplog.Error(ex.ToString())
            End Try

            Try
                'wallet emp
                If ReportType = 10 Then
                    Con.OpenCon("KPMLWalletEmp")
                    Using Con.GetCon()
                        strquery = String.Format("CALL `kpmobile`.`HOgetwalletTransHis2`('{0}','{1}','{2}')", walletNum, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                        cmd = New MySqlCommand(strquery, Con.GetCon())
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        dtable.Clear()
                        dtable.Load(dr)
                        dtable1.Merge(dtable)
                        dr.Close()
                        cmd = Nothing
                    End Using
                    Con.CloseCon()
                Else
                    'databasewallet = walletUserconf(partnerID)
                    'Dim conn As MySqlConnection = databasewallet.getConnection
                    'walletstr = partnerID
                    'intwallet = Convert.ToInt32(walletstr.Substring(walletstr.Length - 7))
                    'wtable1 = intwallet Mod 100
                    'If wtable1 = 0 Then
                    '    min = intwallet - 99
                    '    max = intwallet
                    'Else
                    '    min = (intwallet - wtable1) + 1
                    '    max = min + 99
                    'End If

                    'dbname = "wallet" + min.ToString() + "_" + max.ToString() + ""
                    'tablename = "walletno" + intwallet.ToString() + ""
                    Con.OpenCon("KPMLWallet")

                    Using Con.GetCon()
                        'strquery = String.Format("CALL `KPWalletReportsSP`.`HOgetwalletTransHis`('{0}','{1}','{2}','{3}')", partnerID, tablename, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                        strquery = String.Format("CALL HOgetwalletTransHis5('{0}','{1}','{2}','{3}')", walletNum, tablename, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                        kplog.Info(strquery)
                        cmd = New MySqlCommand(strquery, Con.GetCon)
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        dtable.Clear()
                        dtable.Load(dr)
                        dtable1.Merge(dtable)
                        'While dr.Read()
                        '    datarow = dtable.NewRow()
                        '    clsreport.ID = clsreport.ID + 1
                        '    datarow("ID") = clsreport.ID
                        '    datarow("walletno") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                        '    datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                        '    datarow("transtype") = UCase(If(Not IsDBNull(dr.Item("transtype")), Trim(dr.Item("transtype")), "-"))
                        '    datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-"))
                        '    datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                        '    datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                        '    datarow("balance") = UCase(If(Not IsDBNull(dr.Item("balance")), CType(Trim(dr.Item("balance")), System.Decimal), 0))
                        '    dtable.Rows.Add(datarow)
                        '    dtable.AcceptChanges()
                        '    dtable1.Merge(dtable)
                        'End While
                        dr.Close()
                        cmd = Nothing
                    End Using
                    Con.GetCon.Close()
                End If
            Catch ex As Exception
                kplog.Error(ex.ToString() + "table not exist")
            End Try

            dtmerger.Merge(dtable1)
            'getwalletid(dtmerger)
            'getfullnamewallet(dtmerger, "sendername")
            getrcvrname(dtmerger)
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
		SrchBox.Enabled = True
		SrchBox.Visible = True
            Else
                loadwalletreport("WalletTransHistory")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " wallettranshistory")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                wallettranshistory()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub

    Public Sub mlshopreport()
        Try

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select

            Con.OpenCon("MLOnline")
            Using Con.GetCon()
                strquery = String.Format("CALL `ecommercemerchants`.`MLshop`('{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                If dr.HasRows Then
                    dtable.Load(dr)
                    dtmerger.Merge(dtable)
                End If
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()

            getfullnamewallet(dtmerger, "walletno")
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadwalletreport("MLShop")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " mlshopreport")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                mlshopreport()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub

    'wallet customer list
    Public Sub Walletcustlist()
        dtable = GetCustListDT()
        dtable = GetCustListDT()
        dtable1 = GetCustListDT()
        dtable1.Clear()
        dtmerger = GetCustListDT()
        dtmerger.Clear()

        Try
            Dim fl As Integer = 0
            Dim isfound As Integer = 0
            Dim walletnomin As Integer = 1
            Dim walletnomax As Integer = 0
            Dim walletnum As String = Nothing
            Dim tblwalletno As String = Nothing
            Dim dtableW As New DataTable
            Dim min As Integer = 0
            Dim max As Integer = 0
            Dim smin As String = String.Empty
            Dim smax As String = String.Empty

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select
            Con.OpenCon("KPMLWallet")
            Using Con.GetCon()
                'strquery = "SELECT username FROM `kpmobile`.`mobileaccounts` where isactive=1"
                'strquery = String.Format("Call KPWalletReportsSP.getUsername")
                strquery = String.Format("Call getUsername")
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                dtableW.Load(dr)
                walletnomax = dtableW.Rows.Count
            End Using
            walletnomax = 5300
            min = CType((walletnomax / 100), Integer)
            If min = 0 Then
                min = 1
            Else
                min = min + 1
            End If
            For counter As Integer = 1 To min
                If counter > 1 Then
                    smin = CType((max + 1), String)
                Else
                    smin = CType(counter, String)
                End If
                max = counter * 100
                smax = CType(max, String)
                Try
Recursive1:
                    For i As Integer = walletnomin To max
                        fl = i
                        If isfound = 1 Then
                            walletnomin = CType(walletnum, Integer)
                            i = walletnomin
                            isfound = isfound + 1
                        ElseIf isfound > 1 Then
                            walletnomin += 1
                            i = walletnomin
                            isfound = 0
                        End If
                        If isfound = 0 Then
                            walletnum = CType(i, String)
                            tblwalletno = String.Format("wallet{0}_{1}.walletno{2}", smin, smax, walletnum)

                            Con.OpenCon("KPMLWallet")
                            Using Con.GetCon()
                                'strquery = String.Format("CALL `KPWalletReportsSP`.getcustomerlist('{0}','{1}','{2}')", tblwalletno, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                                strquery = String.Format("CALL getcustomerlist('{0}','{1}','{2}')", tblwalletno, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                                cmd = New MySqlCommand(strquery, Con.GetCon())
                                cmd.CommandTimeout = 0
                                dr = cmd.ExecuteReader
                                While dr.Read()
                                    datarow = dtable.NewRow()
                                    clsreport.ID = clsreport.ID + 1
                                    datarow("ID") = clsreport.ID
                                    datarow("customeridno") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                                    datarow("walletno") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                                    datarow("lastname") = UCase(If(Not IsDBNull(dr.Item("lastname")), Trim(dr.Item("lastname")), "-"))
                                    datarow("firstname") = UCase(If(Not IsDBNull(dr.Item("firstname")), Trim(dr.Item("firstname")), "-"))
                                    datarow("middlename") = UCase(If(Not IsDBNull(dr.Item("middlename")), Trim(dr.Item("middlename")), "-"))
                                    datarow("gender") = UCase(If(Not IsDBNull(dr.Item("gender")), Trim(dr.Item("gender")), "-"))
                                    datarow("birthdate") = UCase(If(Not IsDBNull(dr.Item("birthdate")), Trim(dr.Item("birthdate")), "-"))
                                    datarow("barangay") = UCase(If(Not IsDBNull(dr.Item("permanentaddress")), Trim(dr.Item("permanentaddress")), "-"))
                                    datarow("citymun") = UCase(If(Not IsDBNull(dr.Item("provincecity")), Trim(dr.Item("provincecity")), "-"))
                                    datarow("country") = UCase(If(Not IsDBNull(dr.Item("country")), Trim(dr.Item("country")), "-"))
                                    datarow("zipcode") = UCase(If(Not IsDBNull(dr.Item("zipcode")), Trim(dr.Item("zipcode")), "-"))
                                    datarow("mobileno") = UCase(If(Not IsDBNull(dr.Item("mobileno")), Trim(dr.Item("mobileno")), "-"))
                                    datarow("emailadd") = UCase(If(Not IsDBNull(dr.Item("emailaddress")), Trim(dr.Item("emailaddress")), "-"))
                                    datarow("natureofwork") = UCase(If(Not IsDBNull(dr.Item("natureofwork")), Trim(dr.Item("natureofwork")), "-"))
                                    datarow("nationality") = UCase(If(Not IsDBNull(dr.Item("nationality")), Trim(dr.Item("nationality")), "-"))
                                    dtable.Rows.Add(datarow)
                                    dtable.AcceptChanges()
                                    dtable1.Merge(dtable)
                                End While
                                dr.Close()
                                cmd = Nothing
                            End Using
                            Con.CloseCon()
                            walletnomin = i
                        End If
                    Next
                Catch ex As Exception
                    kplog.Error(ex.ToString())
                    isfound += 1
                    If walletnomax = fl Then
                        GoTo Recursive2
                    Else
                        GoTo Recursive1
                    End If
                End Try
            Next
Recursive2:
            dtmerger.Merge(dtable1)
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadwalletreport("WalletCustomerListSeccom")
            End If

        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " Walletcustlist")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                Walletcustlist()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    'wallet trans report
    Public Sub WalletTransReport()
        Try
            dtable = GetMobileDatatable()
            dtable = GetMobileDatatable()
            dtable1 = GetMobileDatatable()
            dtable1.Clear()
            dtmerger = GetMobileDatatable()
            dtmerger.Clear()

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text

            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                    'Case 2 'MONTHLY
                    '    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    '    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    '    _datefrom = Convert.ToDateTime(firstday)
                    '    _dateto = Convert.ToDateTime(lastday)
                    'Case 3 'RANGE
                    '    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    '    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select

            If _datefrom = _dateto And Not _datefrom = DateTime.Today() Then
                pregenwalletloading()
            Else

                strquery = String.Format("call kpdomestic.HOgetWalletLoadingWTR('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                'strquery1 = String.Format("call KPWalletReportsSP.HOgetWalletSOTransferWTR('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                strquery1 = String.Format("call HOgetWalletSOTransferWTR('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))

                wallettrans = 0
                If wallettrans = 0 Then
                    Con.OpenCon("KPUsers")
                    GoTo _readdata
                End If
_wallettrans:
                If wallettrans = 1 Then
                    Con.OpenCon("KPMLWallet")
                    strquery = strquery1
                    GoTo _readdata

                End If

_readdata:
                Using Con.GetCon()
                    cmd = New MySqlCommand("SET net_write_timeout=99999; SET net_read_timeout=99999;", Con.GetCon())
                    cmd.ExecuteNonQuery()
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader()
                    If dr.HasRows Then
                        dtable.Load(dr)
                        dtmerger.Merge(dtable)
                    End If
                    'While dr.Read()
                    '    datarow = dtable.NewRow()
                    '    clsreport.ID = clsreport.ID + 1
                    '    datarow("ID") = clsreport.ID
                    '    datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-"))
                    '    datarow("activitytype") = UCase(If(Not IsDBNull(dr.Item("activitytype")), Trim(dr.Item("activitytype")), "-"))
                    '    datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    '    datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                    '    datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                    '    datarow("currency") = UCase(If(Not IsDBNull(dr.Item("currency")), Trim(dr.Item("currency")), "-"))
                    '    datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                    '    datarow("sobranch") = UCase(If(Not IsDBNull(dr.Item("sobranch")), Trim(dr.Item("sobranch")), "-"))
                    '    datarow("sobcode") = UCase(If(Not IsDBNull(dr.Item("sobcode")), Trim(dr.Item("sobcode")), "-"))
                    '    datarow("sooperator") = UCase(If(Not IsDBNull(dr.Item("sooperator")), Trim(dr.Item("sooperator")), "-"))
                    '    datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                    '    datarow("claimeddate") = UCase(If(Not IsDBNull(dr.Item("claimeddate")) And CType(dr.Item("claimeddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("claimeddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    '    datarow("pobranch") = UCase(If(Not IsDBNull(dr.Item("pobranch")), Trim(dr.Item("pobranch")), "-"))
                    '    datarow("pobcode") = UCase(If(Not IsDBNull(dr.Item("pobcode")), Trim(dr.Item("pobcode")), "-"))
                    '    datarow("pooperator") = UCase(If(Not IsDBNull(dr.Item("pooperator")), Trim(dr.Item("pooperator")), "-"))
                    '    datarow("sendercontactno") = UCase(If(Not IsDBNull(dr.Item("sendercontactno")), Trim(dr.Item("sendercontactno")), "-"))
                    '    datarow("sendaddress") = UCase(If(Not IsDBNull(dr.Item("sendaddress")), Trim(dr.Item("sendaddress")), "-"))
                    '    datarow("receivercontactno") = UCase(If(Not IsDBNull(dr.Item("receivercontactno")), Trim(dr.Item("receivercontactno")), "-"))
                    '    datarow("idtype") = UCase(If(Not IsDBNull(dr.Item("idtype")), Trim(dr.Item("idtype")), "-"))
                    '    datarow("receiveridno") = UCase(If(Not IsDBNull(dr.Item("receiveridno")), Trim(dr.Item("receiveridno")), "-"))
                    '    datarow("receiveraddress") = UCase(If(Not IsDBNull(dr.Item("receiveraddress")), Trim(dr.Item("receiveraddress")), "-"))
                    '    datarow("walletno") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                    '    datarow("operatorid") = UCase(If(Not IsDBNull(dr.Item("operatorid")), Trim(dr.Item("operatorid")), "-"))
                    '    datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                    '    datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
                    '    datarow("branchcode") = UCase(If(Not IsDBNull(dr.Item("branchcode")), Trim(dr.Item("branchcode")), "-"))
                    '    datarow("zonecode") = UCase(If(Not IsDBNull(dr.Item("zonecode")), Trim(dr.Item("zonecode")), "-"))
                    '    dtable.Rows.Add(datarow)
                    '    dtable.AcceptChanges()
                    '    dtable1.Merge(dtable)
                    'End While
                    dr.Close()
                    cmd = Nothing
                    kplog.Info("Done Load to dtable1")
                End Using

                If wallettrans = 0 Then
                    wallettrans = 1
                    GoTo _wallettrans
                End If

                'Con.OpenCon("KPUsers")
                'Using Con.GetCon()
                '    strquery = String.Format("call kpdomestic.HOgetWalletLoadingWTR('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                '    cmd = New MySqlCommand(strquery, Con.GetCon())
                '    cmd.CommandTimeout = 0
                '    dr = cmd.ExecuteReader
                '    While dr.Read()
                '        datarow = dtable.NewRow()
                '        clsreport.ID = clsreport.ID + 1
                '        datarow("ID") = clsreport.ID
                '        datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-"))
                '        datarow("activitytype") = UCase(If(Not IsDBNull(dr.Item("activitytype")), Trim(dr.Item("activitytype")), "-"))
                '        datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                '        datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                '        datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                '        datarow("currency") = UCase(If(Not IsDBNull(dr.Item("currency")), Trim(dr.Item("currency")), "-"))
                '        datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                '        datarow("sobranch") = UCase(If(Not IsDBNull(dr.Item("sobranch")), Trim(dr.Item("sobranch")), "-"))
                '        datarow("sobcode") = UCase(If(Not IsDBNull(dr.Item("sobcode")), Trim(dr.Item("sobcode")), "-"))
                '        datarow("sooperator") = UCase(If(Not IsDBNull(dr.Item("sooperator")), Trim(dr.Item("sooperator")), "-"))
                '        datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                '        datarow("claimeddate") = UCase(If(Not IsDBNull(dr.Item("claimeddate")) And CType(dr.Item("claimeddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("claimeddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                '        datarow("pobranch") = UCase(If(Not IsDBNull(dr.Item("pobranch")), Trim(dr.Item("pobranch")), "-"))
                '        datarow("pobcode") = UCase(If(Not IsDBNull(dr.Item("pobcode")), Trim(dr.Item("pobcode")), "-"))
                '        datarow("pooperator") = UCase(If(Not IsDBNull(dr.Item("pooperator")), Trim(dr.Item("pooperator")), "-"))
                '        datarow("sendercontactno") = UCase(If(Not IsDBNull(dr.Item("sendercontactno")), Trim(dr.Item("sendercontactno")), "-"))
                '        datarow("sendaddress") = UCase(If(Not IsDBNull(dr.Item("sendaddress")), Trim(dr.Item("sendaddress")), "-"))
                '        datarow("receivercontactno") = UCase(If(Not IsDBNull(dr.Item("receivercontactno")), Trim(dr.Item("receivercontactno")), "-"))
                '        datarow("idtype") = UCase(If(Not IsDBNull(dr.Item("idtype")), Trim(dr.Item("idtype")), "-"))
                '        datarow("receiveridno") = UCase(If(Not IsDBNull(dr.Item("receiveridno")), Trim(dr.Item("receiveridno")), "-"))
                '        datarow("receiveraddress") = UCase(If(Not IsDBNull(dr.Item("receiveraddress")), Trim(dr.Item("receiveraddress")), "-"))
                '        datarow("walletno") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                '        datarow("operatorid") = UCase(If(Not IsDBNull(dr.Item("operatorid")), Trim(dr.Item("operatorid")), "-"))
                '        datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                '        datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
                '        datarow("branchcode") = UCase(If(Not IsDBNull(dr.Item("branchcode")), Trim(dr.Item("branchcode")), "-"))
                '        datarow("zonecode") = UCase(If(Not IsDBNull(dr.Item("zonecode")), Trim(dr.Item("zonecode")), "-"))
                '        dtable.Rows.Add(datarow)
                '        dtable.AcceptChanges()
                '        dtable1.Merge(dtable)
                '    End While
                '    dr.Close()
                '    cmd = Nothing
                'End Using
                'Con.CloseCon()

                'dtmerger.Merge(dtable1)

                'Try
                '    dtable.Clear()
                '    dtable1.Clear()
                '    Con.OpenCon("KPMLWallet")
                '    Using Con.GetCon()
                '        strquery = String.Format("call kpmobile.HOgetWalletSOTransferWTR('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                '        cmd = New MySqlCommand(strquery, Con.GetCon())
                '        cmd.CommandTimeout = 0
                '        dr = cmd.ExecuteReader
                '        While dr.Read()
                '            datarow = dtable.NewRow()
                '            clsreport.ID = clsreport.ID + 1
                '            datarow("ID") = clsreport.ID
                '            datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-"))
                '            datarow("activitytype") = UCase(If(Not IsDBNull(dr.Item("activitytype")), Trim(dr.Item("activitytype")), "-"))
                '            datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                '            datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                '            datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                '            datarow("currency") = UCase(If(Not IsDBNull(dr.Item("currency")), Trim(dr.Item("currency")), "-"))
                '            datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                '            datarow("sobranch") = UCase(If(Not IsDBNull(dr.Item("sobranch")), Trim(dr.Item("sobranch")), "-"))
                '            datarow("sobcode") = UCase(If(Not IsDBNull(dr.Item("sobcode")), Trim(dr.Item("sobcode")), "-"))
                '            datarow("sooperator") = UCase(If(Not IsDBNull(dr.Item("sooperator")), Trim(dr.Item("sooperator")), "-"))
                '            datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                '            datarow("claimeddate") = UCase(If(Not IsDBNull(dr.Item("claimeddate")) And CType(dr.Item("claimeddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("claimeddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                '            datarow("pobranch") = UCase(If(Not IsDBNull(dr.Item("pobranch")), Trim(dr.Item("pobranch")), "-"))
                '            datarow("pobcode") = UCase(If(Not IsDBNull(dr.Item("pobcode")), Trim(dr.Item("pobcode")), "-"))
                '            datarow("pooperator") = UCase(If(Not IsDBNull(dr.Item("pooperator")), Trim(dr.Item("pooperator")), "-"))
                '            datarow("sendercontactno") = UCase(If(Not IsDBNull(dr.Item("sendercontactno")), Trim(dr.Item("sendercontactno")), "-"))
                '            datarow("sendaddress") = UCase(If(Not IsDBNull(dr.Item("sendaddress")), Trim(dr.Item("sendaddress")), "-"))
                '            datarow("receivercontactno") = UCase(If(Not IsDBNull(dr.Item("receivercontactno")), Trim(dr.Item("receivercontactno")), "-"))
                '            datarow("idtype") = UCase(If(Not IsDBNull(dr.Item("idtype")), Trim(dr.Item("idtype")), "-"))
                '            datarow("receiveridno") = UCase(If(Not IsDBNull(dr.Item("receiveridno")), Trim(dr.Item("receiveridno")), "-"))
                '            datarow("receiveraddress") = UCase(If(Not IsDBNull(dr.Item("receiveraddress")), Trim(dr.Item("receiveraddress")), "-"))
                '            datarow("walletno") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                '            datarow("operatorid") = UCase(If(Not IsDBNull(dr.Item("operatorid")), Trim(dr.Item("operatorid")), "-"))
                '            datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                '            datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
                '            datarow("branchcode") = UCase(If(Not IsDBNull(dr.Item("branchcode")), Trim(dr.Item("branchcode")), "-"))
                '            datarow("zonecode") = UCase(If(Not IsDBNull(dr.Item("zonecode")), Trim(dr.Item("zonecode")), "-"))
                '            dtable.Rows.Add(datarow)
                '            dtable.AcceptChanges()
                '            dtable1.Merge(dtable)
                '        End While
                '        dr.Close()
                '        cmd = Nothing
                '    End Using
                '    Con.CloseCon()

                '    dtmerger.Merge(dtable1)
                '    getbranchname(dtmerger)
                '    getbranchoperator(dtmerger, "")
                '    getfullnamewallet(dtmerger, "seccomwalletload")

                'Catch ex As Exception
                '    kplog.Error(ex.ToString())
                'End Try
            End If
            'dtmerger.Merge(dtable1)
            'getbranchname(dtmerger)
            'getbranchoperator(dtmerger, "")
            getfullnamewallet(dtmerger, "seccomwalletload")

            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadwalletreport("WalletSeccomTransaction")
            End If

        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " WalletTransReport")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                walletloading()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub walleteload()
        Try
            eloadni = True
            dtable = GetMobileDatatable()
            dtable = GetMobileDatatable()
            dtable1 = GetMobileDatatable()
            dtable1.Clear()
            dtmerger = GetMobileDatatable()
            dtmerger.Clear()

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select

            'Response.Write("<script>window.open('" & System.Configuration.ConfigurationManager.AppSettings("EloadUrl") & _
            '                   "?reporttype=" & ReportType & "&extype=" & rb.Text & "&transtype=" & drpTransactionTypelist.Text & _
            '                   "&UserRole=" & userrole & "&datefrom=" & _datefrom & "&dateto=" & _dateto & "&emailadd=" & emailadd & _
            '                   "&partnername=" & partnername & "&partnerid=&period=" & period & "&userfullname=" & Session("UserFullname") & " ','_blank')</script>")
            Try
                If _datefrom = _dateto And Not _datefrom = DateTime.Today() And ReportType <> 10 Then
                    pregenwalletloading()
                    eloadni = False
                Else

                    While _datefrom <= _dateto
                        Con.OpenCon("MLEload")
                        Using Con.GetCon()

                            If ReportType = 10 Then
                                strquery = String.Format("call ELoadTransactions.HOgetWalletEloadEmp('','{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                            Else
                                strquery = String.Format("call ELoadTransactions.HOgetWalletEload('','{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))

                            End If
                            cmd = New MySqlCommand(strquery, Con.GetCon())
                            cmd.CommandTimeout = 0
                            dr = cmd.ExecuteReader
                            If dr.HasRows Then
                                dtable.Load(dr)
                                dtmerger.Merge(dtable)
                            End If
                            'While dr.Read()
                            '    datarow = dtable.NewRow()
                            '    clsreport.ID = clsreport.ID + 1
                            '    datarow("ID") = clsreport.ID
                            '    datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                            '    datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-"))
                            '    datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                            '    datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                            '    datarow("sobranch") = UCase(If(Not IsDBNull(dr.Item("sobranch")), Trim(dr.Item("sobranch")), "-"))
                            '    datarow("pobranch") = UCase(If(Not IsDBNull(dr.Item("pobranch")), Trim(dr.Item("pobranch")), "-"))
                            '    datarow("partnername") = UCase(If(Not IsDBNull(dr.Item("partnername")), Trim(dr.Item("partnername")), "-"))
                            '    datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                            '    datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                            '    datarow("commission") = UCase(If(Not IsDBNull(dr.Item("commission")), CType(Trim(dr.Item("commission")), System.Decimal), 0))
                            '    datarow("accountid") = UCase(If(Not IsDBNull(dr.Item("accountid")), Trim(dr.Item("accountid")), "-"))
                            '    datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
                            '    datarow("fullname") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), "-"))
                            '    datarow("operator") = UCase(If(Not IsDBNull(dr.Item("operator")), Trim(dr.Item("operator")), "-"))
                            '    datarow("cancelreason") = UCase(If(Not IsDBNull(dr.Item("cancelreason")), Trim(dr.Item("cancelreason")), "-"))
                            '    datarow("cancelleddate") = UCase(If(Not IsDBNull(dr.Item("cancelleddate")) And CType(dr.Item("cancelleddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("cancelleddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                            '    datarow("oldkptn") = UCase(If(Not IsDBNull(dr.Item("oldkptn")), Trim(dr.Item("oldkptn")), "-"))
                            '    datarow("cancelledbyoperator") = UCase(If(Not IsDBNull(dr.Item("cancelledbyoperator")), Trim(dr.Item("cancelledbyoperator")), "-"))
                            '    datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                            '    datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
                            '    datarow("branchcode") = UCase(If(Not IsDBNull(dr.Item("branchcode")), Trim(dr.Item("branchcode")), "-"))
                            '    datarow("zonecode") = UCase(If(Not IsDBNull(dr.Item("zonecode")), Trim(dr.Item("zonecode")), "-"))
                            '    datarow("flag") = UCase(If(Not IsDBNull(dr.Item("flag")), Trim(dr.Item("flag")), "-"))
                            '    datarow("network") = UCase(If(Not IsDBNull(dr.Item("network")), Trim(dr.Item("network")), "-"))
                            '    dtable.Rows.Add(datarow)
                            '    dtable.AcceptChanges()
                            '    dtable1.Merge(dtable)
                            'End While
                            dr.Close()
                            cmd = Nothing
                        End Using
                        _datefrom = _datefrom.AddDays(1)
                        Con.CloseCon()
                    End While
                End If
            Catch ex As Exception
            End Try

            dtmerger.Merge(dtable1)
            getwalletid(dtmerger)
            ElaodSname(dtmerger)
            'getfullnamewallet(dtmerger, "sendername")
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadwalletreport("WalletEload")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walleteload")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                walleteload()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub walletcashoutclaimed()

        Try
            dtable = GetMobileDatatable()
            dtable = GetMobileDatatable()
            dtable1 = GetMobileDatatable()
            dtable1.Clear()
            dtmerger = GetMobileDatatable()
            dtmerger.Clear()

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select
            While _datefrom <= _dateto
                'wallet emp
                If ReportType = 10 Then
                    Con.OpenCon("KPMLWalletEmp")
                    strquery = String.Format("call kpmobile.HOgetCashoutClaimed('{0}','{1}','{2}','{3}','{4}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), "mlw002%", walletEmpkey)
                Else
                    Con.OpenCon("KPMLWallet")
                    'strquery = String.Format("call KPWalletReportsSP.HOgetCashoutClaimed('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                    strquery = String.Format("call HOgetCashoutClaimed('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                End If

                Using Con.GetCon()
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    If dr.HasRows Then
                        dtable.Load(dr)
                        dtmerger.Merge(dtable)
                    End If
                End Using
                _datefrom = _datefrom.AddDays(1)
                Con.CloseCon()
            End While

            'Using Con.GetCon()
            '    cmd = New MySqlCommand(strquery, Con.GetCon())
            '    cmd.CommandTimeout = 0
            '    dr = cmd.ExecuteReader
            '    While dr.Read()
            '        datarow = dtable.NewRow()
            '        clsreport.ID = clsreport.ID + 1
            '        datarow("ID") = clsreport.ID
            '        datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
            '        datarow("claimeddate") = UCase(If(Not IsDBNull(dr.Item("claimeddate")) And CType(dr.Item("claimeddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("claimeddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
            '        datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-"))
            '        datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
            '        datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
            '        datarow("sobranch") = UCase(If(Not IsDBNull(dr.Item("sobranch")), Trim(dr.Item("sobranch")), "-"))
            '        datarow("pobranch") = UCase(If(Not IsDBNull(dr.Item("pobranch")), Trim(dr.Item("pobranch")), "-"))
            '        datarow("partnername") = UCase(If(Not IsDBNull(dr.Item("partnername")), Trim(dr.Item("partnername")), "-"))
            '        datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
            '        datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
            '        datarow("commission") = UCase(If(Not IsDBNull(dr.Item("commission")), CType(Trim(dr.Item("commission")), System.Decimal), 0))
            '        datarow("accountid") = UCase(If(Not IsDBNull(dr.Item("accountid")), Trim(dr.Item("accountid")), "-"))
            '        datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
            '        datarow("fullname") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), "-"))
            '        datarow("operator") = UCase(If(Not IsDBNull(dr.Item("operator")), Trim(dr.Item("operator")), "-"))
            '        datarow("operatorid") = UCase(If(Not IsDBNull(dr.Item("operatorid")), Trim(dr.Item("operatorid")), "-"))
            '        datarow("cancelreason") = UCase(If(Not IsDBNull(dr.Item("cancelreason")), Trim(dr.Item("cancelreason")), "-"))
            '        datarow("cancelleddate") = UCase(If(Not IsDBNull(dr.Item("cancelleddate")) And CType(dr.Item("cancelleddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("cancelleddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
            '        datarow("oldkptn") = UCase(If(Not IsDBNull(dr.Item("oldkptn")), Trim(dr.Item("oldkptn")), "-"))
            '        datarow("cancelledbyoperator") = UCase(If(Not IsDBNull(dr.Item("cancelledbyoperator")), Trim(dr.Item("cancelledbyoperator")), "-"))
            '        datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
            '        datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
            '        datarow("branchcode") = UCase(If(Not IsDBNull(dr.Item("branchcode")), Trim(dr.Item("branchcode")), "-"))
            '        datarow("zonecode") = UCase(If(Not IsDBNull(dr.Item("zonecode")), Trim(dr.Item("zonecode")), "-"))
            '        datarow("flag") = UCase(If(Not IsDBNull(dr.Item("flag")), Trim(dr.Item("flag")), "-"))
            '        dtable.Rows.Add(datarow)
            '        dtable.AcceptChanges()
            '        dtable1.Merge(dtable)
            '    End While
            '    dr.Close()
            '    cmd = Nothing
            'End Using
            'Con.CloseCon()

            dtmerger.Merge(dtable1)
            GetOperatorAndBranch(dtmerger, "pobranch")
            getfullnamewallet(dtmerger, "operator")
            getbranchoperator(dtmerger, "walletkppo")
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadwalletreport("WalletCashoutClaimed")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletcashoutclaimed")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                walletcashout()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub

    Public Sub walletpaymentsendout()
        Try
            dtable = GetMobileDatatable()
            dtable = GetMobileDatatable()
            dtable1 = GetMobileDatatable()
            dtable1.Clear()
            dtmerger = GetMobileDatatable()
            dtmerger.Clear()

            Dim walletNum As String = String.Empty
            walletNum = SrchBox.Text

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select
            'wallet emp
            If ReportType = 10 Then
                Con.OpenCon("KPMLWalletEmp")
                strquery = String.Format("call kpmobile.HOgetWalletPaymentSO('{0}','{1}','{2}','{3}','{4}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), "mlw002%", walletEmpkey)
            Else
                Con.OpenCon("KPMLWallet")
                'strquery = String.Format("call KPWalletReportsSP.HOgetWalletPaymentSO('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                strquery = String.Format("call HOgetWalletPaymentSO('{0}','{1}','{2}')", walletNum, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
            End If
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                While dr.Read()
                    datarow = dtable.NewRow()
                    clsreport.ID = clsreport.ID + 1
                    datarow("ID") = clsreport.ID
                    datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-"))
                    datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                    datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                    datarow("sobranch") = UCase(If(Not IsDBNull(dr.Item("sobranch")), Trim(dr.Item("sobranch")), "-"))
                    datarow("pobranch") = UCase(If(Not IsDBNull(dr.Item("pobranch")), Trim(dr.Item("pobranch")), "-"))
                    datarow("partnername") = UCase(If(Not IsDBNull(dr.Item("partnername")), Trim(dr.Item("partnername")), "-"))
                    datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                    datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                    datarow("commission") = UCase(If(Not IsDBNull(dr.Item("commission")), CType(Trim(dr.Item("commission")), System.Decimal), 0))
                    datarow("accountid") = UCase(If(Not IsDBNull(dr.Item("accountid")), Trim(dr.Item("accountid")), "-"))
                    datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
                    datarow("fullname") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), "-"))
                    datarow("operator") = UCase(If(Not IsDBNull(dr.Item("operator")), Trim(dr.Item("operator")), "-"))
                    datarow("cancelreason") = UCase(If(Not IsDBNull(dr.Item("cancelreason")), Trim(dr.Item("cancelreason")), "-"))
                    datarow("cancelleddate") = UCase(If(Not IsDBNull(dr.Item("cancelleddate")) And CType(dr.Item("cancelleddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("cancelleddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("oldkptn") = UCase(If(Not IsDBNull(dr.Item("oldkptn")), Trim(dr.Item("oldkptn")), "-"))
                    datarow("cancelledbyoperator") = UCase(If(Not IsDBNull(dr.Item("cancelledbyoperator")), Trim(dr.Item("cancelledbyoperator")), "-"))
                    datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                    datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
                    datarow("branchcode") = UCase(If(Not IsDBNull(dr.Item("branchcode")), Trim(dr.Item("branchcode")), "-"))
                    datarow("zonecode") = UCase(If(Not IsDBNull(dr.Item("zonecode")), Trim(dr.Item("zonecode")), "-"))
                    datarow("flag") = UCase(If(Not IsDBNull(dr.Item("flag")), Trim(dr.Item("flag")), "-"))
                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()
                    dtable1.Merge(dtable)
                End While
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()

            dtmerger.Merge(dtable1)
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
		SrchBox.Enabled = True
		SrchBox.Visible = True
            Else
                loadwalletreport("WalletPaymentSendout")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletpaymentsendout")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                walletsendout()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub walletpaymentpayout()
        Try
            dtable = GetMobileDatatable()
            dtable = GetMobileDatatable()
            dtable1 = GetMobileDatatable()
            dtable1.Clear()
            dtmerger = GetMobileDatatable()
            dtmerger.Clear()

            Dim walletNum As String = String.Empty
            walletNum = SrchBox.Text

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select
            'wallet emp
            If ReportType = 10 Then
                Con.OpenCon("KPMLWalletEmp")
            Else
                Con.OpenCon("KPMLWallet")

            End If
            Using Con.GetCon()
                'strquery = String.Format("call KPWalletReportsSP.HOgetWalletPaymentPO('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                strquery = String.Format("call HOgetWalletPaymentPO('{0}','{1}','{2}')", walletNum, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                While dr.Read()
                    datarow = dtable.NewRow()
                    clsreport.ID = clsreport.ID + 1
                    datarow("ID") = clsreport.ID
                    datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-"))
                    datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                    datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                    datarow("sobranch") = UCase(If(Not IsDBNull(dr.Item("sobranch")), Trim(dr.Item("sobranch")), "-"))
                    datarow("pobranch") = UCase(If(Not IsDBNull(dr.Item("pobranch")), Trim(dr.Item("pobranch")), "-"))
                    datarow("partnername") = UCase(If(Not IsDBNull(dr.Item("partnername")), Trim(dr.Item("partnername")), "-"))
                    datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                    datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                    datarow("commission") = UCase(If(Not IsDBNull(dr.Item("commission")), CType(Trim(dr.Item("commission")), System.Decimal), 0))
                    datarow("accountid") = UCase(If(Not IsDBNull(dr.Item("accountid")), Trim(dr.Item("accountid")), "-"))
                    datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
                    datarow("fullname") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), "-"))
                    datarow("operator") = UCase(If(Not IsDBNull(dr.Item("operator")), Trim(dr.Item("operator")), "-"))
                    datarow("cancelreason") = UCase(If(Not IsDBNull(dr.Item("cancelreason")), Trim(dr.Item("cancelreason")), "-"))
                    datarow("cancelleddate") = UCase(If(Not IsDBNull(dr.Item("cancelleddate")) And CType(dr.Item("cancelleddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("cancelleddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("oldkptn") = UCase(If(Not IsDBNull(dr.Item("oldkptn")), Trim(dr.Item("oldkptn")), "-"))
                    datarow("cancelledbyoperator") = UCase(If(Not IsDBNull(dr.Item("cancelledbyoperator")), Trim(dr.Item("cancelledbyoperator")), "-"))
                    datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                    datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
                    datarow("branchcode") = UCase(If(Not IsDBNull(dr.Item("branchcode")), Trim(dr.Item("branchcode")), "-"))
                    datarow("zonecode") = UCase(If(Not IsDBNull(dr.Item("zonecode")), Trim(dr.Item("zonecode")), "-"))
                    datarow("flag") = UCase(If(Not IsDBNull(dr.Item("flag")), Trim(dr.Item("flag")), "-"))
                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()
                    dtable1.Merge(dtable)
                End While
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()

            dtmerger.Merge(dtable1)
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
		SrchBox.Enabled = True
		SrchBox.Visible = True
            Else
                loadwalletreport("WalletPaymentPayout")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletpaymentpayout")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                walletsendout()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Public Sub walletexpresspaymentso()
        Try
            dtable = GetMobileDatatable()
            dtable = GetMobileDatatable()
            dtable1 = GetMobileDatatable()
            dtable1.Clear()
            dtmerger = GetMobileDatatable()
            dtmerger.Clear()

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select
            Con.OpenCon("KPMLWallet")
            Using Con.GetCon()
                'strquery = String.Format("call KPWalletReportsSP.HOgetWalletExpressPaymentSO('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                strquery = String.Format("call HOgetWalletExpressPaymentSO('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                While dr.Read()
                    datarow = dtable.NewRow()
                    clsreport.ID = clsreport.ID + 1
                    datarow("ID") = clsreport.ID
                    datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-"))
                    datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                    datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                    datarow("sobranch") = UCase(If(Not IsDBNull(dr.Item("sobranch")), Trim(dr.Item("sobranch")), "-"))
                    datarow("pobranch") = UCase(If(Not IsDBNull(dr.Item("pobranch")), Trim(dr.Item("pobranch")), "-"))
                    datarow("partnername") = UCase(If(Not IsDBNull(dr.Item("partnername")), Trim(dr.Item("partnername")), "-"))
                    datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                    datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                    datarow("commission") = UCase(If(Not IsDBNull(dr.Item("commission")), CType(Trim(dr.Item("commission")), System.Decimal), 0))
                    datarow("accountid") = UCase(If(Not IsDBNull(dr.Item("accountid")), Trim(dr.Item("accountid")), "-"))
                    datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
                    datarow("fullname") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), "-"))
                    datarow("operator") = UCase(If(Not IsDBNull(dr.Item("operator")), Trim(dr.Item("operator")), "-"))
                    datarow("cancelreason") = UCase(If(Not IsDBNull(dr.Item("cancelreason")), Trim(dr.Item("cancelreason")), "-"))
                    datarow("cancelleddate") = UCase(If(Not IsDBNull(dr.Item("cancelleddate")) And CType(dr.Item("cancelleddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("cancelleddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("oldkptn") = UCase(If(Not IsDBNull(dr.Item("oldkptn")), Trim(dr.Item("oldkptn")), "-"))
                    datarow("cancelledbyoperator") = UCase(If(Not IsDBNull(dr.Item("cancelledbyoperator")), Trim(dr.Item("cancelledbyoperator")), "-"))
                    datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                    datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
                    datarow("branchcode") = UCase(If(Not IsDBNull(dr.Item("branchcode")), Trim(dr.Item("branchcode")), "-"))
                    datarow("zonecode") = UCase(If(Not IsDBNull(dr.Item("zonecode")), Trim(dr.Item("zonecode")), "-"))
                    datarow("flag") = UCase(If(Not IsDBNull(dr.Item("flag")), Trim(dr.Item("flag")), "-"))
                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()
                    dtable1.Merge(dtable)
                End While
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()

            dtmerger.Merge(dtable1)
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadwalletreport("WalletExpressPaymentSO")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletexpresspaymentso")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                walletsendout()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub

    Public Sub walletexpresspaymentpo()
        Try
            dtable = GetMobileDatatable()
            dtable = GetMobileDatatable()
            dtable1 = GetMobileDatatable()
            dtable1.Clear()
            dtmerger = GetMobileDatatable()
            dtmerger.Clear()

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select
            Con.OpenCon("KPMLWallet")
            Using Con.GetCon()
                'strquery = String.Format("call KPWalletReportsSP.HOgetWalletExpressPaymentPO('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                strquery = String.Format("call HOgetWalletExpressPaymentPO('{0}','{1}','{2}')", partnerID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                While dr.Read()
                    datarow = dtable.NewRow()
                    clsreport.ID = clsreport.ID + 1
                    datarow("ID") = clsreport.ID
                    datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-"))
                    datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                    datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                    datarow("sobranch") = UCase(If(Not IsDBNull(dr.Item("sobranch")), Trim(dr.Item("sobranch")), "-"))
                    datarow("pobranch") = UCase(If(Not IsDBNull(dr.Item("pobranch")), Trim(dr.Item("pobranch")), "-"))
                    datarow("partnername") = UCase(If(Not IsDBNull(dr.Item("partnername")), Trim(dr.Item("partnername")), "-"))
                    datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), CType(Trim(dr.Item("principal")), System.Decimal), 0))
                    datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), CType(Trim(dr.Item("charge")), System.Decimal), 0))
                    datarow("commission") = UCase(If(Not IsDBNull(dr.Item("commission")), CType(Trim(dr.Item("commission")), System.Decimal), 0))
                    datarow("accountid") = UCase(If(Not IsDBNull(dr.Item("accountid")), Trim(dr.Item("accountid")), "-"))
                    datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
                    datarow("fullname") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), "-"))
                    datarow("operator") = UCase(If(Not IsDBNull(dr.Item("operator")), Trim(dr.Item("operator")), "-"))
                    datarow("cancelreason") = UCase(If(Not IsDBNull(dr.Item("cancelreason")), Trim(dr.Item("cancelreason")), "-"))
                    datarow("cancelleddate") = UCase(If(Not IsDBNull(dr.Item("cancelleddate")) And CType(dr.Item("cancelleddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("cancelleddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("oldkptn") = UCase(If(Not IsDBNull(dr.Item("oldkptn")), Trim(dr.Item("oldkptn")), "-"))
                    datarow("cancelledbyoperator") = UCase(If(Not IsDBNull(dr.Item("cancelledbyoperator")), Trim(dr.Item("cancelledbyoperator")), "-"))
                    datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                    datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
                    datarow("branchcode") = UCase(If(Not IsDBNull(dr.Item("branchcode")), Trim(dr.Item("branchcode")), "-"))
                    datarow("zonecode") = UCase(If(Not IsDBNull(dr.Item("zonecode")), Trim(dr.Item("zonecode")), "-"))
                    datarow("flag") = UCase(If(Not IsDBNull(dr.Item("flag")), Trim(dr.Item("flag")), "-"))
                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()
                    dtable1.Merge(dtable)
                End While
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()

            dtmerger.Merge(dtable1)
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadwalletreport("WalletExpressPaymentPO")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletexpresspaymentpo")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                walletsendout()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    ' wallet Registration
    Private Sub walletregistration()


        Try
            dtmerger = GetWalletRegistration()
            dtmerger.Clear()
            dtable = GetWalletRegistration()
            dtable.Clear()

            Dim frmYear As Date
            Dim toYear As Date

            If drpPeriod.Text = 2 Then 'monthly
                frmYear = DateTime.Now.AddYears(-2)
                toYear = Convert.ToDateTime(txtDate.Text)
            End If

            'strquery = String.Format("call `KPWalletReportsSP`.`walletRegistrationSummary`('{0}','{1}');", frmYear.ToString("yyyy"), toYear.ToString("yyyy"))
            strquery = String.Format("call walletRegistrationSummary('{0}','{1}');", frmYear.ToString("yyyy"), toYear.ToString("yyyy"))
            Con.OpenCon("KPMLWallet")
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader()
                While dr.Read()
                    datarow = dtable.NewRow()
                    clsreport.ID = clsreport.ID + 1
                    datarow("ID") = clsreport.ID
                    datarow("ttlCount") = UCase(If(Not IsDBNull(dr.Item("ttlCount")), Trim(dr.Item("ttlCount")), "-"))
                    datarow("_dateyear") = UCase(If(Not IsDBNull(dr.Item("_dateyear")), Trim(dr.Item("_dateyear")), "-"))
                    datarow("_datemonth") = UCase(If(Not IsDBNull(dr.Item("_datemonth")), Trim(dr.Item("_datemonth")), "-"))
                    'datarow("_dateyear") = UCase(If(Not IsDBNull(dr.Item("_dateyear")) And CType(dr.Item("_dateyear"), String) <> "0000", Convert.ToDateTime(Trim(dr.Item("_dateyear"))).ToString("yyyy"), "-"))
                    'datarow("_datemonth") = UCase(If(Not IsDBNull(dr.Item("_datemonth")) And CType(dr.Item("_datemonth"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("_datemonth"))).ToString("MM"), "-"))
                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()

                End While
                dtmerger.Merge(dtable)
                dr.Close()
                cmd = Nothing
            End Using

            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for last 3 years up to" & _year)
            Else
                loadwalletreport("WalletRegistrationSummary")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletregistration")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                walletregistration()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Private Sub walletaccount()

        Try
            dtmerger = GetWalletAccountsum()
            dtmerger.Clear()
            dtable = GetWalletAccountsum()
            dtable.Clear()

            Dim frmYear As Date
            Dim toYear As Date

            If drpPeriod.Text = 2 Then 'monthly
                frmYear = DateTime.Now.AddYears(-2)
                toYear = Convert.ToDateTime(txtDate.Text)
            End If

            'strquery = String.Format("call `KPWalletReportsSP`.`walletAcctStatSummary`('{0}','{1}');", frmYear.ToString("yyyy"), toYear.ToString("yyyy"))
            strquery = String.Format("call walletAcctStatSummary('{0}','{1}');", frmYear.ToString("yyyy"), toYear.ToString("yyyy"))
            Con.OpenCon("KPMLWallet")
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader()
                While dr.Read()
                    datarow = dtable.NewRow()
                    clsreport.ID = clsreport.ID + 1
                    datarow("ID") = clsreport.ID
                    datarow("ttlCount") = UCase(If(Not IsDBNull(dr.Item("ttlCount")), Trim(dr.Item("ttlCount")), "-"))
                    datarow("type") = UCase(If(Not IsDBNull(dr.Item("type")), Trim(dr.Item("type")), "-"))
                    datarow("_dateyear") = UCase(If(Not IsDBNull(dr.Item("_dateyear")), Trim(dr.Item("_dateyear")), "-"))
                    datarow("_datemonth") = UCase(If(Not IsDBNull(dr.Item("_datemonth")), Trim(dr.Item("_datemonth")), "-"))
                    'datarow("_dateyear") = UCase(If(Not IsDBNull(dr.Item("_dateyear")) And CType(dr.Item("_dateyear"), String) <> "0000", Convert.ToDateTime(Trim(dr.Item("_dateyear"))).ToString("yyyy"), "-"))
                    'datarow("_datemonth") = UCase(If(Not IsDBNull(dr.Item("_datemonth")) And CType(dr.Item("_datemonth"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("_datemonth"))).ToString("MM"), "-"))
                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()

                End While
                dtmerger.Merge(dtable)
                dr.Close()
                cmd = Nothing
            End Using

            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for last 3 years up to" & _year)
            Else
                loadwalletreport("WalletAccountSummary")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletaccount")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                walletaccount()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub

    Private Sub walletsecuritybank()

        Try
            dtmerger = GetSecurityDT()
            dtmerger.Clear()
            dtable = GetSecurityDT()
            dtable.Clear()

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text

            Select Case period
                Case 1 'daily
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)

            End Select
            strquery = String.Format("call kppartners.SecurityPayout('{0}','{1}','{2}')", accountID, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
            Con.OpenCon("KPAPINEW")
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon)
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader()
                While dr.Read()
                    datarow = dtable.NewRow()
                    clsreport.ID = clsreport.ID + 1
                    datarow("ID") = clsreport.ID
                    datarow("claimeddate") = UCase(If(Not IsDBNull(dr.Item("claimeddate")) And CType(dr.Item("claimeddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("claimeddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    ' datarow("claimeddate") = UCase(If(Not IsDBNull(dr.Item("claimeddate")), Trim(dr.Item("claimeddate")), "-"))
                    datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                    datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                    datarow("kptnno") = UCase(If(Not IsDBNull(dr.Item("kptnno")), Trim(dr.Item("kptnno")), "-"))
                    datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
                    datarow("referenceno") = UCase(If(Not IsDBNull(dr.Item("referenceno")), Trim(dr.Item("referenceno")), "-"))
                    datarow("accountname") = UCase(If(Not IsDBNull(dr.Item("accountname")), Trim(dr.Item("accountname")), "-"))
                    datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), Trim(dr.Item("principal")), "-"))
                    datarow("operatorid") = UCase(If(Not IsDBNull(dr.Item("operatorid")), Trim(dr.Item("operatorid")), "-"))

                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()

                End While
                dtmerger.Merge(dtable)
                getwalletSecurity(dtmerger)
                dr.Close()
                cmd = Nothing
            End Using
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No ML Wallet Transfer from Bank Report" & _dateofreport)
            Else
                loadwalletreport("WalletTransferFromBank")

            End If

        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " walletsecuritybank")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout Expired." Then
                walletsecuritybank()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Private Sub batchupload()

        Try

            dtmerger = getBatchUpload()
            dtmerger.Clear()
            dtable = getBatchUpload()
            dtable.Clear()


            Dim period As Integer = drpPeriod.Text

            date1 = txtDate.Text
            date2 = Convert.ToDateTime(date1).ToString("yyyyMM")


            walletdb = String.Format("walletbatchuploadpartners{0:yyyy}.transactionslogs{1}", Convert.ToDateTime(date1), date2)
            'strquery = String.Format("call KPWalletReportsSP.BatchUpload('{0}','{1}','{2}')", walletdb, accountID, Convert.ToDateTime(txtDate.Text).ToString("yyyy-MM-dd"))
            strquery = String.Format("call BatchUpload('{0}','{1}','{2}')", walletdb, accountID, Convert.ToDateTime(txtDate.Text).ToString("yyyy-MM-dd"))
            Con.OpenCon("KPMLWallet")
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon)
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader()
                While dr.Read()
                    datarow = dtable.NewRow()
                    clsreport.ID = clsreport.ID + 1
                    datarow("ID") = clsreport.ID
                    datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    'datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                    datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                    datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-"))
                    datarow("walletno") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                    datarow("batchnumber") = UCase(If(Not IsDBNull(dr.Item("batchnumber")), Trim(dr.Item("batchnumber")), "-"))
                    datarow("principal") = UCase(If(Not IsDBNull(dr.Item("principal")), Trim(dr.Item("principal")), "-"))
                    'datarow("receiverwallet") = UCase(If(Not IsDBNull(dr.Item("receiverwallet")), Trim(dr.Item("receiverwallet")), "-"))
                    datarow("status") = UCase(If(Not IsDBNull(dr.Item("status")), Trim(dr.Item("status")), "-"))
                    datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), Trim(dr.Item("charge")), "-"))
                    datarow("Grandtotal") = UCase(If(Not IsDBNull(dr.Item("Grandtotal")), Trim(dr.Item("Grandtotal")), "-"))

                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()

                End While
                dtmerger.Merge(dtable)
                getBatchUploadSendername(dtmerger)
                dr.Close()
                cmd = Nothing
            End Using
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No BatchUpload Transaction" & _dateofreport)
            Else
                loadwalletreport("BatchUPload")

            End If

        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " batchupload")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout Expired." Then
                batchupload()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Private Sub GlobalSOtoWalletPO()

        Try
            dtmerger = getGlobalSOWalletPO()
            dtmerger.Clear()
            dtable = getGlobalSOWalletPO()
            dtable.Clear()

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text

            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select

            strquery = String.Format("call kpglobal.globalSOWalletPO ('{0}','{1}');", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
            Con.OpenCon("KPGLOBAL")
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon)
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader()
                While dr.Read()
                    datarow = dtable.NewRow()
                    clsreport.ID = clsreport.ID + 1
                    datarow("ID") = clsreport.ID
                    datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
                    datarow("claimeddate") = UCase(If(Not IsDBNull(dr.Item("claimeddate")) And CType(dr.Item("claimeddate"), String) <> "0000-00-00 ", Convert.ToDateTime(Trim(dr.Item("claimeddate"))).ToString("yyyy-MM-dd "), "-"))
                    datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                    datarow("kptnno") = UCase(If(Not IsDBNull(dr.Item("kptnno")), Trim(dr.Item("kptnno")), "-"))
                    datarow("currency") = UCase(If(Not IsDBNull(dr.Item("currency")), Trim(dr.Item("currency")), "-"))
                    datarow("amountPO") = UCase(If(Not IsDBNull(dr.Item("amountPO")), Trim(dr.Item("amountPO")), "-"))
                    datarow("servicecharge") = UCase(If(Not IsDBNull(dr.Item("servicecharge")), Trim(dr.Item("servicecharge")), "-"))
                    datarow("sodate") = UCase(If(Not IsDBNull(dr.Item("sodate")) And CType(dr.Item("sodate"), String) <> "0000-00-00 ", Convert.ToDateTime(Trim(dr.Item("sodate"))).ToString("yyyy-MM-dd"), "-"))
                    datarow("sobranch") = UCase(If(Not IsDBNull(dr.Item("sobranch")), Trim(dr.Item("sobranch")), "-"))
                    datarow("operatorid") = UCase(If(Not IsDBNull(dr.Item("operatorid")), Trim(dr.Item("operatorid")), "-"))
                    datarow("payingBranch") = UCase(If(Not IsDBNull(dr.Item("payingBranch")), Trim(dr.Item("payingBranch")), "-"))
                    datarow("usd") = UCase(If(Not IsDBNull(dr.Item("usd")), Trim(dr.Item("usd")), "-"))
                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()

                End While
                dtmerger.Merge(dtable)
                dr.Close()
                cmd = Nothing
            End Using
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No Transaction Found !")
            Else
                loadwalletreport("GlobalSoWalletPO")

            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " GlobalSOtoWalletPO")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout Expired." Then
                GlobalSOtoWalletPO()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub

    '60 Wallet Corporate PO
    Private Sub walletcorporatepo()
        dtmerger = GetDatatable()
        dtmerger.Clear()
        dtable = GetDatatable()
        dtable.Clear()

        Dim flag As String = ""

        Dim _datefrom As Date
        Dim _dateto As Date
        Dim _datefromorig As Date

        Try

            If drpPeriod.Text = 1 Then 'DAILY
                _datefrom = Convert.ToDateTime(txtDate.Text)
                _dateto = Convert.ToDateTime(txtDate.Text)
            ElseIf drpPeriod.Text = 2 Then 'MONTHLY 
                _datefrom = New Date(drpYear.Text, drpMonth.Text, 1)
                _dateto = _datefrom.AddMonths(1)
                _dateto = _dateto.AddDays(-1)
            ElseIf drpPeriod.Text = 3 Then ' RANGE
                _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                _dateto = Convert.ToDateTime(txtdateTo.Text)
            End If
            _datefromorig = _datefrom

            wscquery = String.Format("call kppartners.HOgetdailypayoutWSCWallet('{0}','{1}');", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
            fstrquery = String.Format("call kppartners.HOgetdailypayoutFUWallet('{0}','{1}');", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))

            For i As Int16 = 0 To 1
                If i = 0 Then
                    Con.OpenCon("KPWSC")
                    strquery = wscquery
                End If
                If i = 1 Then
                    Con.OpenCon("KPFileUpload")
                    strquery = fstrquery
                End If
                Using Con.GetCon()
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader()
                    If dr.HasRows Then
                        dtable.Load(dr)
                        dtmerger.Merge(dtable)
                    End If
                    dr.Close()
                    cmd = Nothing
                End Using
            Next

            For i As Int16 = 0 To 4
                _datefrom = _datefromorig
                While _datefrom <= _dateto
                    If i = 0 Then
                        strquery = String.Format("call kppartners.HOgetdailypayoutAPIWallet('{0}','{1}','');", _datefrom.ToString("MMdd"), _datefrom.ToString("yyyy"))
                        Con.OpenCon("KPAPI")
                    End If
                    If i = 2 Then
                        strquery = String.Format("call kppartners.HOgetdailypayoutAPIWallet('{0}','{1}','');", _datefrom.ToString("MMdd"), _datefrom.ToString("yyyy"))
                        Con.OpenCon("KPAPINEW")
                    End If
                    If i = 1 Then
                        strquery = String.Format("call kppartners.HOgetdailypayoutAPIWallet('{0}','{1}','AUB');", _datefrom.ToString("MMdd"), _datefrom.ToString("yyyy"))
                        Con.OpenCon("AUB")
                    End If
                    If i = 3 Then
                        strquery = String.Format("call kppartners.HOgetdailypayoutAPIWallet('{0}','{1}','WU');", _datefrom.ToString("MMdd"), _datefrom.ToString("yyyy"))
                        Con.OpenCon("KPAPINEW")
                    End If
                    If i = 4 Then
                        strquery = String.Format("call kppartners.HOgetdailypayoutAPIWallet('{0}','{1}','SKY');", _datefrom.ToString("MMdd"), _datefrom.ToString("yyyy"))
                        Con.OpenCon("KPAPINEW")
                    End If

                    Using Con.GetCon()
                        cmd = New MySqlCommand(strquery, Con.GetCon())
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader()
                        If dr.HasRows Then
                            dtable.Load(dr)
                            dtmerger.Merge(dtable, True, MissingSchemaAction.Ignore)
                        End If
                        dr.Close()
                        cmd = Nothing
                    End Using
                    _datefrom = _datefrom.AddDays(1)
                End While
            Next


            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                GetOperatorAndBranch(dtmerger, "PO")
                getfullnamewallet(dtmerger, "walletcorppo")
                loadreport("WalletCorporatePayout")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + "  " + wscquery.ToString() + " walletcorporatepo")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                walletcorporatepo()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub

    '61 Express Wallet PO
    Private Sub expresswalletpo()
        dtmerger = GetDatatable()
        dtmerger.Clear()
        dtable = GetDatatable()
        dtable.Clear()

        Dim flag As String = ""

        Dim _datefrom As Date
        Dim _dateto As Date
        Dim _datefromorig As Date

        Try

            If drpPeriod.Text = 1 Then 'DAILY
                _datefrom = Convert.ToDateTime(txtDate.Text)
                _dateto = Convert.ToDateTime(txtDate.Text)
            ElseIf drpPeriod.Text = 2 Then 'MONTHLY 
                _datefrom = New Date(drpYear.Text, drpMonth.Text, 1)
                _dateto = _datefrom.AddMonths(1)
                _dateto = _dateto.AddDays(-1)
            ElseIf drpPeriod.Text = 3 Then ' RANGE
                _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                _dateto = Convert.ToDateTime(txtdateTo.Text)
            End If
            _datefromorig = _datefrom

            strquery = String.Format("call `kpOFW`.`HOGetExpressWalletPO`('{0}','{1}');", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
            Con.OpenCon("KPMLExpress")
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader()
                If dr.HasRows Then
                    dtable.Load(dr)
                    dtmerger.Merge(dtable)
                End If
                dr.Close()
                cmd = Nothing
            End Using

            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                'GetOperatorAndBranch(dtmerger, "PO")
                getfullnamewallet(dtmerger, "xpreswalletpo")
                loadreport("ExpressWalletPayout")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " expresswalletpo")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                expresswalletpo()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub

    Private Sub DomesticSOtoWalletPO()
        Try

            dtmerger = getDomesticSOtoWalletPOTable()
            dtmerger.Clear()
            dtable = getDomesticSOtoWalletPOTable()
            dtable.Clear()
            dtable1 = getDomesticSOtoWalletPOTable()
            dtable1.Clear()

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)

                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select

            strquery = String.Format("call kpdomestic.DomesticSOtoWalletPO('{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
            Con.OpenCon("KPUsers")
            Using Con.GetCon()
                cmd = New MySqlCommand(strquery, Con.GetCon)
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader()
                While dr.Read()
                    datarow = dtable.NewRow()
                    clsreport.ID = clsreport.ID + 1
                    datarow("ID") = clsreport.ID
                    datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
                    datarow("claimeddate") = UCase(If(Not IsDBNull(dr.Item("claimeddate")) And CType(dr.Item("claimeddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("claimeddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
                    datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
                    datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-"))
                    datarow("sendoutbranch") = UCase(If(Not IsDBNull(dr.Item("sendoutbranch")), Trim(dr.Item("sendoutbranch")), "-"))
                    datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                    datarow("amount") = UCase(If(Not IsDBNull(dr.Item("amount")), Trim(dr.Item("amount")), "-"))
                    datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), Trim(dr.Item("charge")), "-"))
                    datarow("branchcode") = UCase(If(Not IsDBNull(dr.Item("branchcode")), Trim(dr.Item("branchcode")), "-"))
                    datarow("legend") = UCase(If(Not IsDBNull(dr.Item("legend")), Trim(dr.Item("legend")), "-"))
                    datarow("operatorid") = UCase(If(Not IsDBNull(dr.Item("operatorid")), Trim(dr.Item("operatorid")), "-"))
                    datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
                    datarow("Sodate") = UCase(If(Not IsDBNull(dr.Item("Sodate")), Trim(dr.Item("Sodate")), "-"))

                    dtable.Rows.Add(datarow)
                    dtable.AcceptChanges()

                End While
                dtmerger.Merge(dtable)
                getReceiverWalletId(dtmerger)
                getServiceCharge(dtmerger)
                dr.Close()
                cmd = Nothing
            End Using

            'date1 = _datefrom.ToString()
            'date2 = Convert.ToDateTime(date1).ToString("MMdd")

            'If Convert.ToInt32(Convert.ToDateTime(_datefrom).ToString("yyyy")) < 2020 Then
            '    '--------------------------
            '    'kp8domesticdb = String.Format("kpdomestic{0:yyyy}", Convert.ToDateTime(date1))
            '    strquery1 = String.Format("call kp8reportsdb.KP8DomesticSOtoWalletPO('{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
            '    Con.OpenCon("KP8DomesticB")
            '    Using Con.GetCon()
            '        cmd = New MySqlCommand(strquery1, Con.GetCon)
            '        cmd.CommandTimeout = 0
            '        dr = cmd.ExecuteReader()
            '        While dr.Read()
            '            datarow = dtable1.NewRow()
            '            clsreport.ID = clsreport.ID + 1
            '            datarow("ID") = clsreport.ID
            '            datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
            '            datarow("claimeddate") = UCase(If(Not IsDBNull(dr.Item("claimeddate")) And CType(dr.Item("claimeddate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("claimeddate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
            '            datarow("sendername") = UCase(If(Not IsDBNull(dr.Item("sendername")), Trim(dr.Item("sendername")), "-"))
            '            datarow("receivername") = UCase(If(Not IsDBNull(dr.Item("receivername")), Trim(dr.Item("receivername")), "-"))
            '            datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-"))
            '            datarow("sendoutbranch") = UCase(If(Not IsDBNull(dr.Item("sendoutbranch")), Trim(dr.Item("sendoutbranch")), "-"))
            '            datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
            '            datarow("amount") = UCase(If(Not IsDBNull(dr.Item("amount")), Trim(dr.Item("amount")), "-"))
            '            datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), Trim(dr.Item("charge")), "-"))
            '            datarow("commission") = UCase(If(Not IsDBNull(dr.Item("commission")), Trim(dr.Item("commission")), "-"))
            '            datarow("legend") = UCase(If(Not IsDBNull(dr.Item("legend")), Trim(dr.Item("legend")), "-"))
            '            datarow("operatorid") = UCase(If(Not IsDBNull(dr.Item("operatorid")), Trim(dr.Item("operatorid")), "-"))

            '            dtable1.Rows.Add(datarow)
            '            dtable1.AcceptChanges()
            '        End While
            '        dtmerger.Merge(dtable1)
            '        getReceiverWalletId(dtmerger)
            '        dr.Close()
            '        cmd = Nothing
            '    End Using
            '    Con.CloseCon()
            'End If
            '--------------------------

            If dtmerger.Rows.Count = 0 Then
                GetMessage("No Domestic Sendout to Wallet Payout Transaction " & _dateofreport)
            Else
                loadwalletreport("DomSOWalPO")
            End If

        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " DomesticSOtoWalletPO")
            Dim _err As String = ex.Message.Substring(7, 20)
            If _err = "Timeout Expired." Then
                DomesticSOtoWalletPO()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    
    'Private Sub walletUserSummary()
    '    Try
    '        dtmerger = DTwalletusers()
    '        dtmerger.Clear()
    '        dtable = DTwalletusers()
    '        dtable.Clear()

    '        Dim _datefrom As DateTime
    '        Dim _dateto As DateTime
    '        Dim period As Integer = drpPeriod.Text

    '        Select Case period
    '            Case 1 'daily
    '                _datefrom = Convert.ToDateTime(txtDate.Text)
    '                _dateto = Convert.ToDateTime(txtDate.Text)
    '            Case 2 'MONTHLY
    '                Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
    '                Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
    '                _datefrom = Convert.ToDateTime(firstday)
    '                _dateto = Convert.ToDateTime(lastday)
    '            Case 3 'RANGE
    '                _datefrom = Convert.ToDateTime(txtdateFrom.Text)
    '                _dateto = Convert.ToDateTime(txtdateTo.Text)

    '        End Select

    '        If _datefrom = _dateto And Not _datefrom = DateTime.Today() And ReportType <> 10 Then
    '            pregenwalletloading()
    '        Else
    '            Con.OpenCon("KPMLWallet")
    '            'strquery = String.Format("SELECT walletno,username,custid,TRIM(CONCAT(firstname,' ',middlename,' ',lastname)) AS fullname, " +
    '            '        " '' AS charge,'' AS dates, '0.00' AS cashout, '0.00' AS WWTOSO, '0.00' AS WTKPSO,'0.00' AS RTS , '' AS WalletLoad, '' As BPW , '' As WWP, " +
    '            '        " '' As  CP, '' As WE,'' as DSWP, '' as MLshop, '' As beginningbalance, '' As CHARGE, '' As conveniencefee,  " +
    '            '        " '' as CPnew, '' as CPaub, '' as CPWSC, '' as CPFU " +
    '            '        " FROM `kpmobile`.`mobilelogin` WHERE isactive=1 AND TRIM(CONCAT(firstname,' ',middlename,' ',lastname)) IS NOT NULL " +
    '            '        " AND firstname REGEXP '^[{0}].*$' and custid not IN ('279762','12060001340034','1321207','14060009791505','12040000538532','12040000389741','12060000786863' " +
    '            '        " ,'13030004036950','12080002215148','12100003065315','1408001175568','14040007563128','920345','1810000001104N1','1810000001103N1')  GROUP BY username ORDER BY fullname ASC;", drpLeterStart.Text)
    '            'strquery = String.Format("CALL `KPWalletReportsSP`.walletUserSummary('{0}');", drpLeterStart.Text)
    '            strquery = String.Format("CALL walletUserSummary('{0}');", drpLeterStart.Text)
    '            Using Con.GetCon()
    '                cmd = New MySqlCommand(strquery, Con.GetCon())
    '                cmd.CommandTimeout = 0
    '                dr = cmd.ExecuteReader()
    '                While dr.Read()
    '                    datarow = dtable.NewRow()
    '                    clsreport.ID = clsreport.ID + 1
    '                    datarow("ID") = clsreport.ID
    '                    datarow("walletno") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
    '                    datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
    '                    datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
    '                    datarow("fullname") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), "-"))
    '                    datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), Trim(dr.Item("charge")), "-"))
    '                    'datarow("dates") = UCase(If(Not IsDBNull(dr.Item("dates")) And CType(dr.Item("dates"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("dates"))).ToString("MM/dd/yyyy"), "-"))
    '                    datarow("cashout") = UCase(If(Not IsDBNull(dr.Item("cashout")), Trim(dr.Item("cashout")), "-"))
    '                    datarow("WWTOSO") = UCase(If(Not IsDBNull(dr.Item("WWTOSO")), Trim(dr.Item("WWTOSO")), "-"))
    '                    datarow("WTKPSO") = UCase(If(Not IsDBNull(dr.Item("WTKPSO")), Trim(dr.Item("WTKPSO")), "-"))
    '                    datarow("RTS") = UCase(If(Not IsDBNull(dr.Item("RTS")), Trim(dr.Item("RTS")), "-"))
    '                    datarow("WalletLoad") = UCase(If(Not IsDBNull(dr.Item("WalletLoad")), Trim(dr.Item("WalletLoad")), "-"))
    '                    datarow("BPW") = UCase(If(Not IsDBNull(dr.Item("BPW")), Trim(dr.Item("BPW")), "-"))
    '                    datarow("WWP") = UCase(If(Not IsDBNull(dr.Item("WWP")), Trim(dr.Item("WWP")), "-"))    '\
    '                    datarow("CP") = UCase(If(Not IsDBNull(dr.Item("CP")), Trim(dr.Item("CP")), "-"))       ' \ LOAD TRANSFER
    '                    datarow("WE") = UCase(If(Not IsDBNull(dr.Item("WE")), Trim(dr.Item("WE")), "-"))       ' /
    '                    datarow("DSWP") = UCase(If(Not IsDBNull(dr.Item("DSWP")), Trim(dr.Item("DSWP")), "-")) '/
    '                    datarow("MLshop") = UCase(If(Not IsDBNull(dr.Item("MLshop")), Trim(dr.Item("MLshop")), "-"))
    '                    datarow("beginningbalance") = UCase(If(Not IsDBNull(dr.Item("beginningbalance")), Trim(dr.Item("beginningbalance")), "-"))
    '                    datarow("CHARGE") = UCase(If(Not IsDBNull(dr.Item("CHARGE")), Trim(dr.Item("CHARGE")), "-"))
    '                    datarow("conveniencefee") = UCase(If(Not IsDBNull(dr.Item("conveniencefee")), Trim(dr.Item("conveniencefee")), "-"))
    '                    datarow("CPnew") = UCase(If(Not IsDBNull(dr.Item("CPnew")), Trim(dr.Item("CPnew")), "-")) '
    '                    datarow("CPaub") = UCase(If(Not IsDBNull(dr.Item("CPaub")), Trim(dr.Item("CPaub")), "-")) '
    '                    datarow("CPWSC") = UCase(If(Not IsDBNull(dr.Item("CPWSC")), Trim(dr.Item("CPWSC")), "-")) '
    '                    datarow("CPFU") = UCase(If(Not IsDBNull(dr.Item("CPFU")), Trim(dr.Item("CPFU")), "-"))

    '                    dtable.Rows.Add(datarow)
    '                    dtable.AcceptChanges()

    '                End While
    '                dtmerger.Merge(dtable)
    '                getTransactions(dtmerger)
    '                getwalletload(dtmerger) 'domestic connection
    '                getBPW(dtmerger) 'Billspay connection
    '                getCorpW(dtmerger)
    '                getExpressW(dtmerger)
    '                getDSWP(dtmerger)
    '                getMLSHOP(dtmerger)
    '                UserBegBalance(dtmerger)
    '                getconvenience(dtmerger)
    '                getCorpWAPINEW(dtmerger)
    '                getCorpAUB(dtmerger)
    '                getCorpWebSC(dtmerger)
    '                getCorpFU(dtmerger)


    '                dr.Close()
    '                cmd = Nothing
    '            End Using
    '        End If
    '        If dtmerger.Rows.Count = 0 Then
    '            GetMessage("NO RECORDS FOUND!")
    '        Else
    '            loadwalletreport("WalletUserSummary")
    '        End If
    '    Catch ex As Exception
    '        kplog.Error(ex.ToString())
    '        Dim _err As String = ex.Message.Substring(7, 16)
    '        If _err = "Timeout Expired." Then
    '            walletUserSummary()
    '        Else
    '            kplog.Info("Error Detail = " + ex.ToString())
    '            GetMessage("Please Call Admin Support!")
    '            'GetMessage("Error Detail = " + ex.ToString())

    '        End If
    '    End Try
    'End Sub
    'Private Sub walletUsersEnding()
    '    Try
    '        dtmerger = DTwalletusers()
    '        dtmerger.Clear()
    '        dtable = DTwalletusers()
    '        dtable.Clear()

    '        Dim _datefrom As DateTime
    '        Dim _dateto As DateTime
    '        Dim period As Integer = drpPeriod.Text

    '        Select Case period
    '            Case 1 'daily
    '                _datefrom = Convert.ToDateTime(txtDate.Text)
    '                _dateto = Convert.ToDateTime(txtDate.Text)
    '            Case 2 'MONTHLY
    '                Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
    '                Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
    '                _datefrom = Convert.ToDateTime(firstday)
    '                _dateto = Convert.ToDateTime(lastday)
    '            Case 3 'RANGE
    '                _datefrom = Convert.ToDateTime(txtdateFrom.Text)
    '                _dateto = Convert.ToDateTime(txtdateTo.Text)

    '        End Select

    '        If _datefrom = _dateto And Not _datefrom = DateTime.Today() And ReportType <> 10 Then
    '            pregenwalletloading()
    '        Else

    '            Con.OpenCon("KPMLWallet")
    '            strquery = String.Format("SELECT walletno,username,custid,TRIM(CONCAT(firstname,' ',middlename,' ',lastname)) AS fullname, " +
    '                    " '' AS charge,'' AS dates, '0.00' AS cashout, '0.00' AS WWTOSO, '0.00' AS WTKPSO,'0.00' AS RTS , '' AS WalletLoad, '' As BPW , '' As WWP, " +
    '                    " '' As  CP, '' As WE,'' as DSWP, '' as MLshop, '' As beginningbalance, '' As CHARGE, '' As conveniencefee,  " +
    '                    " '' as CPnew, '' as CPaub, '' as CPWSC, '' as CPFU " +
    '                    " FROM `kpmobile`.`mobilelogin` WHERE isactive=1 AND TRIM(CONCAT(firstname,' ',middlename,' ',lastname)) IS NOT NULL " +
    '                    " AND firstname REGEXP '^[{0}].*$' and custid not IN ('279762','12060001340034','1321207','14060009791505','12040000538532','12040000389741','12060000786863' " +
    '                    " ,'13030004036950','12080002215148','12100003065315','1408001175568','14040007563128','920345','1810000001104N1','1810000001103N1')  GROUP BY username ORDER BY fullname ASC;", drpLeterStart.Text)


    '            Using Con.GetCon()
    '                cmd = New MySqlCommand(strquery, Con.GetCon())
    '                cmd.CommandTimeout = 0
    '                dr = cmd.ExecuteReader()
    '                While dr.Read()
    '                    datarow = dtable.NewRow()
    '                    clsreport.ID = clsreport.ID + 1
    '                    datarow("ID") = clsreport.ID
    '                    datarow("walletno") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
    '                    datarow("username") = UCase(If(Not IsDBNull(dr.Item("username")), Trim(dr.Item("username")), "-"))
    '                    datarow("custid") = UCase(If(Not IsDBNull(dr.Item("custid")), Trim(dr.Item("custid")), "-"))
    '                    datarow("fullname") = UCase(If(Not IsDBNull(dr.Item("fullname")), Trim(dr.Item("fullname")), "-"))
    '                    datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), Trim(dr.Item("charge")), "-"))
    '                    'datarow("dates") = UCase(If(Not IsDBNull(dr.Item("dates")) And CType(dr.Item("dates"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("dates"))).ToString("MM/dd/yyyy"), "-"))
    '                    datarow("cashout") = UCase(If(Not IsDBNull(dr.Item("cashout")), Trim(dr.Item("cashout")), "-"))
    '                    datarow("WWTOSO") = UCase(If(Not IsDBNull(dr.Item("WWTOSO")), Trim(dr.Item("WWTOSO")), "-"))
    '                    datarow("WTKPSO") = UCase(If(Not IsDBNull(dr.Item("WTKPSO")), Trim(dr.Item("WTKPSO")), "-"))
    '                    datarow("RTS") = UCase(If(Not IsDBNull(dr.Item("RTS")), Trim(dr.Item("RTS")), "-"))
    '                    datarow("WalletLoad") = UCase(If(Not IsDBNull(dr.Item("WalletLoad")), Trim(dr.Item("WalletLoad")), "-"))
    '                    datarow("BPW") = UCase(If(Not IsDBNull(dr.Item("BPW")), Trim(dr.Item("BPW")), "-"))
    '                    datarow("WWP") = UCase(If(Not IsDBNull(dr.Item("WWP")), Trim(dr.Item("WWP")), "-"))    '\
    '                    datarow("CP") = UCase(If(Not IsDBNull(dr.Item("CP")), Trim(dr.Item("CP")), "-"))       ' \ LOAD TRANSFER
    '                    datarow("WE") = UCase(If(Not IsDBNull(dr.Item("WE")), Trim(dr.Item("WE")), "-"))       ' /
    '                    datarow("DSWP") = UCase(If(Not IsDBNull(dr.Item("DSWP")), Trim(dr.Item("DSWP")), "-")) '/
    '                    datarow("MLshop") = UCase(If(Not IsDBNull(dr.Item("MLshop")), Trim(dr.Item("MLshop")), "-"))
    '                    datarow("beginningbalance") = UCase(If(Not IsDBNull(dr.Item("beginningbalance")), Trim(dr.Item("beginningbalance")), "-"))
    '                    datarow("CHARGE") = UCase(If(Not IsDBNull(dr.Item("CHARGE")), Trim(dr.Item("CHARGE")), "-"))
    '                    datarow("conveniencefee") = UCase(If(Not IsDBNull(dr.Item("conveniencefee")), Trim(dr.Item("conveniencefee")), "-"))
    '                    datarow("CPnew") = UCase(If(Not IsDBNull(dr.Item("CPnew")), Trim(dr.Item("CPnew")), "-")) '
    '                    datarow("CPaub") = UCase(If(Not IsDBNull(dr.Item("CPaub")), Trim(dr.Item("CPaub")), "-")) '
    '                    datarow("CPWSC") = UCase(If(Not IsDBNull(dr.Item("CPWSC")), Trim(dr.Item("CPWSC")), "-")) '
    '                    datarow("CPFU") = UCase(If(Not IsDBNull(dr.Item("CPFU")), Trim(dr.Item("CPFU")), "-"))


    '                    dtable.Rows.Add(datarow)
    '                    dtable.AcceptChanges()

    '                End While
    '                dtmerger.Merge(dtable)
    '                getTransactions(dtmerger)
    '                getwalletload(dtmerger) 'domestic connection
    '                getBPW(dtmerger) 'Billspay connection
    '                getCorpW(dtmerger)
    '                getExpressW(dtmerger)
    '                getDSWP(dtmerger)
    '                getMLSHOP(dtmerger)
    '                UserBegBalance(dtmerger)
    '                getconvenience(dtmerger)
    '                getCorpWAPINEW(dtmerger)
    '                getCorpAUB(dtmerger)
    '                getCorpWebSC(dtmerger)
    '                getCorpFU(dtmerger)

    '                dr.Close()
    '                cmd = Nothing
    '            End Using
    '        End If

    '        If dtmerger.Rows.Count = 0 Then
    '            GetMessage("NO RECORDS FOUND !")
    '        Else
    '            loadwalletreport("WalletUsersEndingBalanceSummary")
    '        End If
    '    Catch ex As Exception
    '        kplog.Error(ex.ToString())
    '        Dim _err As String = ex.Message.Substring(7, 16)
    '        If _err = "Timeout Expired." Then
    '            walletUserSummary()
    '        Else
    '            kplog.Info("Error Detail = " + ex.ToString())
    '            'GetMessage(ex.ToString())
    '            GetMessage("Please Call Admin Support!")

    '        End If
    '    End Try
    'End Sub
    Public Sub HOBatchUplaod()
        Try

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select

            Con.OpenCon("KPMLWallet")
            Using Con.GetCon()
                'strquery = String.Format("call KPWalletReportsSP.HOBatchUpload('{0}','{1}','{2}','{3}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), divcode, zCode)
                strquery = String.Format("call HOBatchUpload('{0}','{1}','{2}','{3}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), divcode, zCode)
                kplog.Info(strquery)
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                If dr.HasRows Then
                    dtable.Load(dr)
                    dtmerger.Merge(dtable)
                End If
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()


            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadwalletreport("MLWalletBatchUpload")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString())
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                HOBatchUplaod()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub

    Private Sub FeedbackFileBillspayment2(ByVal partnerid As String, ByRef datefrom As String, ByRef dateto As String)
        Dim dtbatelec As New DataTable
        Dim csv As String = String.Empty

        Try

            Dim ReportLOc As String = String.Empty
            Dim ReportName As String = String.Empty
            Dim counter As Integer = 0
            Dim amount As String = String.Empty



            System.Net.ServicePointManager.ServerCertificateValidationCallback = _
            Function(se As Object, _
            cert As System.Security.Cryptography.X509Certificates.X509Certificate, _
            chain As System.Security.Cryptography.X509Certificates.X509Chain, _
            sslerror As System.Net.Security.SslPolicyErrors) True
            'Restore SSL Certificate Validation Checking
            'System.Net.ServicePointManager.ServerCertificateValidationCallback = Nothing

            Dim titlerange As String = UCase(String.Format("{0:yyMMdd}-to-{1:yyMMdd}", Convert.ToDateTime(datefrom), Convert.ToDateTime(dateto)))
            If (BatelecID = partnerid) Then
                billspayresponse = service.getBatelec2DailyDatailsBillspayment(partnerid, "PHP", datefrom, dateto)

                If (billspayresponse.rescode = 1) Then

                    dtbatelec = billspayresponse.Data


                    If (dtbatelec.Rows.Count <> 0) Then
                        ReportName = String.Format("ML{0}", titlerange)

                        ReportLOc = String.Format("{0}Reports\batelec2.rpt", AppDomain.CurrentDomain.BaseDirectory)
                        Dim total As Double
                        For Each column As DataColumn In dtbatelec.Columns
                            'Add the Header row for CSV file.
                            If column.ColumnName.ToString() = "Total Amount" Then
                                GoTo column
                            End If
                            csv += column.ColumnName + ","c
column:                 Next
                        csv += vbCr & vbLf
                        For Each row As DataRow In dtbatelec.Rows
                            For Each column As DataColumn In dtbatelec.Columns
                                'Add the Data rows.
                                If column.ColumnName.ToString() = "Total Amount" Then
                                    GoTo cont
                                End If
                                csv += row(column).ToString().Replace(",", " ") + ","c
                                If column.ColumnName.ToString() = "Amount" Then
                                    total += row(column)
                                End If

cont:                       Next
                            'Add new line.
                            csv += vbCr & vbLf
                        Next
                        csv += "TOTAL" + ","c + ","c + ","c + total.ToString()

                        'ReportLOc = String.Format("{0}Reports\batelec2csv.rpt", AppDomain.CurrentDomain.BaseDirectory)
                        'Rpt.Load(ReportLOc)
                        'Rpt.SetDataSource(billspayresponse.Data)
                        'Rpt.ExportToHttpResponse(CrystalDecisions.Shared.ExportFormatType.ExcelRecord, Response, True, ReportName)
                        Response.Clear()
                        Response.Buffer = True
                        'Response.AddFileDependency(filePath)
                        'Response.AddHeader("content-disposition", "attachment;filename=batelec2.csv")
                        Response.AddHeader("content-disposition", "attachment;filename=" + ReportName + ".csv")
                        Response.Charset = ""
                        Response.ContentType = "text/csv"
                        'Response.WriteFile(csv, True)
                        Response.Write(csv)
                        Response.Flush()
                        Response.End()
                    End If
                Else
                    ''no data found
                    GetMessage("No Data Found")
                End If

            End If
        Catch ex As Exception

        End Try

    End Sub

    Private Sub FeedbackFileBillspayment(ByVal partnerid As String, ByRef datefrom As String, ByRef dateto As String)
        Dim dtbatelec As New DataTable
        Dim csv As String = String.Empty
        Try

            Dim ReportLOc As String = String.Empty
            Dim ReportName As String = String.Empty
            Dim counter As Integer = 0
            Dim accountnumber As String = String.Empty

            System.Net.ServicePointManager.ServerCertificateValidationCallback = _
            Function(se As Object, _
            cert As System.Security.Cryptography.X509Certificates.X509Certificate, _
            chain As System.Security.Cryptography.X509Certificates.X509Chain, _
            sslerror As System.Net.Security.SslPolicyErrors) True
            'Restore SSL Certificate Validation Checking
            'System.Net.ServicePointManager.ServerCertificateValidationCallback = Nothing

            Dim titlerange As String = UCase(String.Format("{0:yyMMdd}-to-{1:yyMMdd}", Convert.ToDateTime(datefrom), Convert.ToDateTime(dateto)))
            If (BatelecID = partnerid) Then
                billspayresponse = service.getBatelec2DailyDatailsBillspayment(partnerid, "PHP", datefrom, dateto)

                If (billspayresponse.rescode = 1) Then

                    dtbatelec = billspayresponse.Data

                    If (dtbatelec.Rows.Count <> 0) Then
                        ReportName = String.Format("ML{0}", titlerange)

                        For Each row As DataRow In dtbatelec.Rows
                            accountnumber = row(2).ToString()
                            Dim cntaccount As Integer
                            Dim lenaccount As Integer = 20
                            cntaccount = lenaccount - accountnumber.Length
                            Dim e As Integer = 0
                            Do While (e < cntaccount)
                                accountnumber = ("0" + accountnumber)
                                e = (e + 1)
                            Loop
                            dtbatelec.Rows(counter).BeginEdit()
                            dtbatelec.Rows(counter)(2) = accountnumber
                            dtbatelec.Rows(counter).EndEdit()
                            dtbatelec.AcceptChanges()
                            counter = counter + 1
                        Next
                        ReportLOc = String.Format("{0}Reports\batelec2.rpt", AppDomain.CurrentDomain.BaseDirectory)
                        Rpt.Load(ReportLOc)
                        Rpt.SetDataSource(dtbatelec)
                        Rpt.ExportToHttpResponse(CrystalDecisions.Shared.ExportFormatType.ExcelRecord, Response, True, ReportName)

                    End If
                Else
                    ''no data found
                    GetMessage("No Data Found")
                End If

            End If
        Catch ex As Exception

        End Try

    End Sub
    Public Sub WalletLoadingAdjustment()
        Try
            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select
            Con.OpenCon("KPMLWallet")
            Using Con.GetCon()
                'strquery = String.Format("call KPWalletReportsSP.WalletLoadingAdjustment('{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                strquery = String.Format("call WalletLoadingAdjustment('{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                kplog.Info(strquery)
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                If dr.HasRows Then
                    dtable.Load(dr)
                    dtmerger.Merge(dtable)
                End If
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadwalletreport("MLWalletLoadingAdjustment")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString())
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                WalletLoadingAdjustment()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try

    End Sub
    Public Sub AllPartnersVol()

        dtable = GetDatatableAllPartner2()
        dtable.Clear()
        dtmerger = GetDatatableAllPartner2()
        dtmerger.Clear()
        kplog.Info("All Partners Volume")
        Try
            Dim counter As Integer = 0
            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text

            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
            End Select
            Dim dbname As String = String.Empty
            Dim parttrap As Integer = 1
Connection:
            If ReportType = 1 And parttrap < 6 Then
                If parttrap = 1 Then
                    Con.OpenCon("KPAPINEW")
                    dbname = String.Empty
                ElseIf parttrap = 2 Then
                    Con.OpenCon("KPAPINEW")
                    dbname = "WU"
                ElseIf parttrap = 3 Then
                    Con.OpenCon("KPAPINEW")
                    dbname = "SKY"
                ElseIf parttrap = 4 Then
                    Con.OpenCon("KPAPI")
                    dbname = String.Empty
                ElseIf parttrap = 5 Then
                    Con.OpenCon("KPAPI")
                    dbname = "AUB"
                End If
            ElseIf ReportType = 4 Then
                Con.OpenCon("KPFileUpload")
                dbname = String.Empty
            ElseIf ReportType = 6 Then
                Con.OpenCon("KPWSC")
                dbname = String.Empty
            ElseIf ReportType = 9 Then
                Con.OpenCon("RuralNet")
                dbname = String.Empty
            Else
                GoTo result
            End If

dataloop:
            Using Con.GetCon()
                If period = 1 Then
                    If ReportType = 9 Then
                        strquery = String.Format("call kpadminpartners.AllPartnerVolume2('{0}')", _datefrom.ToString("yyyy-MM-dd"))
                    Else
                        strquery = String.Format("call kppartners.AllPartnerVolume2('{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), dbname)
                    End If
                ElseIf period = 2 Then
                    If ReportType = 9 Then
                        strquery = String.Format("call kpadminpartners.AllPartnerVolumeMonthly2('{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                    Else
                        strquery = String.Format("call kppartners.AllPartnerVolumeMonthly2('{0}','{1}','{2}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), dbname)
                    End If
                End If
                dtable1.Clear()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                kplog.Info(strquery.ToString())
                kplog.Info(Con.GetCon.ConnectionString.ToString())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader()
                If dr.HasRows Then
                    dtable.Load(dr)
                    dtmerger.Merge(dtable)
                End If
                kplog.Info("Row Count : " + dtmerger.Rows.Count().ToString())
                dtable.Clear()
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()

            If ReportType = 1 And parttrap < 6 Then
                parttrap = parttrap + 1
                GoTo Connection
            End If
result:
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadreport("AllPartnersVolume2")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString())
            GetMessage("Please Call Admin Support")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
        End Try

    End Sub

    Public Sub SmartPromo()
        kplog.Info("ML Wallet Smart Promo Report")
        dtable = getSmartPromo()
        dtable.Clear()
        dtable1 = getSmartPromo()
        dtable1.Clear()
        dtmerger = getSmartPromo()
        dtmerger.Clear()
        Try
            Dim dt As DataTable = New DataTable
            Dim dt1 As DataTable = New DataTable
            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text
            Dim walletid As String = String.Empty
            Dim kptnno As String = String.Empty
            Dim walletstr As String = String.Empty
            'Dim intwallet As Integer
            'Dim wtable1 As Integer
            Dim min As Integer = 0
            Dim max As Integer = 0
            Dim dbname As String = String.Empty
            Dim tablename As String = String.Empty
            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select

            'While _datefrom <= _dateto
            Con.OpenCon("KPMLWallet")
            'Dim strquery = String.Format("CALL KPWalletReportsSP.HOgetSmartPromo('{0}','{1}');", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
            Dim strquery = String.Format("CALL HOgetSmartPromo('{0}','{1}');", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
            kplog.Info("Query : " + strquery.ToString())
            kplog.Info("Connection : " + Con.GetCon.ConnectionString.ToString())
            Con.GetCon.ConnectionString.ToString()
            Using Con.GetCon()
                cmd = New MySqlCommand("SET net_write_timeout=99999; SET net_read_timeout=99999;", Con.GetCon())
                cmd.ExecuteNonQuery()
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader()
                kplog.Info("Done Execute Query")
                If dr.HasRows Then
                    kplog.Info("Has Rows")
                    dt.Load(dr)
                End If
                'While dr.Read()
                '    datarow = dtable.NewRow()
                '    clsreport.ID = clsreport.ID + 1
                '    datarow("ID") = clsreport.ID
                '    datarow("walletno") = UCase(If(Not IsDBNull(dr.Item("walletno")), Trim(dr.Item("walletno")), "-"))
                '    datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-"))
                '    datarow("transdate") = UCase(If(Not IsDBNull(dr.Item("transdate")) And CType(dr.Item("transdate"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("transdate"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
                '    datarow("sendereceiver") = ""
                '    dtable.Rows.Add(datarow)
                '    dtable.AcceptChanges()
                'End While
                'dtmerger.Merge(dtable)
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()

            kplog.Info("dt rows count " + dt.Rows.Count.ToString())
            For Each row As DataRow In dt.Rows
                walletid = row.Item("walletno")
                kptnno = row.Item("kptn")
                kplog.Info("walletid : " + walletid.ToString())
                kplog.Info("kptn : " + kptnno.ToString())
                cmd = Nothing
                dt1.Clear()
                If walletid <> "" Then
                    kplog.Info("walletid is not empty")
                    kplog.Info("to get wallet connection")
                    Con.OpenCon("KPMLWallet")
                    'databasewallet = walletUserconf(walletid)
                    'kplog.Info("Done")
                    'Dim conn As MySqlConnection = databasewallet.getConnection
                    'kplog.Info("Connection : " + conn.ConnectionString.ToString())
                    'walletstr = walletid
                    'intwallet = Convert.ToInt32(walletstr.Substring(walletstr.Length - 7))
                    'wtable1 = intwallet Mod 100
                    'If wtable1 = 0 Then
                    '    min = intwallet - 99
                    '    max = intwallet
                    'Else
                    '    min = (intwallet - wtable1) + 1
                    '    max = min + 99
                    'End If
                    'dbname = "wallet" + min.ToString() + "_" + max.ToString() + ""
                    'tablename = "walletno" + intwallet.ToString() + ""
                    'kplog.Info("database name  : " + dbname.ToString())
                    'kplog.Info("table name : " + tablename.ToString())
                    Using Con.GetCon()
                        'Dim strquery1 = String.Format("CALL KPWalletReportsSP.HOgetSmartPromo1('{0}','{1}','{2}');", dbname, tablename, kptnno)
                        Dim strquery1 = String.Format("CALL HOgetSmartPromo1('{0}','{1}','{2}');", dbname, tablename, kptnno)
                        kplog.Info("Query : " + strquery1.ToString())
                        kplog.Info("Connection : " + Con.GetCon.ConnectionString.ToString())
                        cmd = New MySqlCommand(strquery1, Con.GetCon())
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        kplog.Info("Done Execute Query")
                        If dr.HasRows Then
                            kplog.Info("Has Rows")
                            dt1.Load(dr)
                        End If
                        kplog.Info("data table count : " + dt1.Rows.Count.ToString())
                        If dt1.Rows.Count = 1 Then
                            For Each row1 As DataRow In dt1.Rows
                                datarow = dtable.NewRow()
                                clsreport.ID = clsreport.ID + 1
                                datarow("ID") = clsreport.ID
                                datarow("transdate") = row1.Item("transdate")
                                datarow("kptn") = row1.Item("kptn")
                                datarow("walletno") = row1.Item("walletno")
                                datarow("sendereceiverno") = row1.Item("sendereceiverno")
                                datarow("principal") = row1.Item("principal")
                                dtable.Rows.Add(datarow)
                                dtable.AcceptChanges()
                            Next
                        End If
                        kplog.Info("dtable count : " + dtable.Rows.Count.ToString())
                        dr.Close()
                        cmd = Nothing
                    End Using
                    dtmerger.Merge(dtable)
                    Con.CloseCon()
                    kplog.Info("dtmerger count : " + dtmerger.Rows.Count.ToString())
                End If
            Next
            If dtmerger.Rows.Count = 0 Then
                kplog.Info("No Records Found")
                GetMessage("No record for " & _dateofreport)
            Else
                kplog.Info("Record Found to loadwalletreport")
                loadwalletreport("SmartPromo")
            End If
        Catch ex As Exception
            kplog.Error("Error : " + ex.ToString())
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support")
        End Try
    End Sub
    Private Sub WalletBillspayForceCommitManual()
        Try
            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text

            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select
            Con.OpenCon("KPMLWallet")
            Using Con.GetCon()
                strquery = String.Format("call ml_wallet.WalletBillspayForceCommitM('{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                If dr.HasRows Then
                    dtable.Load(dr)
                    dtmerger.Merge(dtable)
                End If
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadreport("WalletBillspayFCManual")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " WalletBillspayForceCommit")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                WalletBillspayForceCommitManual()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    Private Sub WalletBillspayForceCommitAuto()
        Try
            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text

            Select Case period
                Case 1 'DAILY
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select
            Con.OpenCon("KPMLWallet")
            Using Con.GetCon()
                strquery = String.Format("call ml_wallet.WalletBillspayForceCommitA('{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
                cmd = New MySqlCommand(strquery, Con.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                If dr.HasRows Then
                    dtable.Load(dr)
                    dtmerger.Merge(dtable)
                End If
                dr.Close()
                cmd = Nothing
            End Using
            Con.CloseCon()
            If dtmerger.Rows.Count = 0 Then
                GetMessage("No record for " & _dateofreport)
            Else
                loadreport("WalletBillspayFCAuto")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " WalletBillspayForceCommit")
            Dim _err As String = ex.Message.Substring(7, 16)
            If _err = "Timeout expired." Then
                WalletBillspayForceCommitAuto()
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub


    '***********************************************END OF WALLET !! *********************************************
    Private Function DTwalletusers() As DataTable
        Dim dt As DataTable = New DataTable
        Dim id As New DataColumn("ID", GetType(System.Int32))
        dt.Columns.Add(id)
        dt.Columns.Add(New DataColumn("walletno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("username", GetType(System.String)))
        dt.Columns.Add(New DataColumn("custid", GetType(System.String)))
        dt.Columns.Add(New DataColumn("fullname", GetType(System.String)))
        dt.Columns.Add(New DataColumn("charge", GetType(System.String)))
        dt.Columns.Add(New DataColumn("dates", GetType(System.String)))
        dt.Columns.Add(New DataColumn("cashout", GetType(System.String)))
        dt.Columns.Add(New DataColumn("WWTOSO", GetType(System.String)))
        dt.Columns.Add(New DataColumn("WTKPSO", GetType(System.String)))
        dt.Columns.Add(New DataColumn("RTS", GetType(System.String)))
        dt.Columns.Add(New DataColumn("WalletLoad", GetType(System.String)))
        dt.Columns.Add(New DataColumn("BPW", GetType(System.String)))
        dt.Columns.Add(New DataColumn("WWP", GetType(System.String)))
        dt.Columns.Add(New DataColumn("CP", GetType(System.String)))
        dt.Columns.Add(New DataColumn("WE", GetType(System.String)))
        dt.Columns.Add(New DataColumn("DSWP", GetType(System.String)))
        dt.Columns.Add(New DataColumn("MLshop", GetType(System.String))) '
        dt.Columns.Add(New DataColumn("beginningbalance", GetType(System.String)))
        dt.Columns.Add(New DataColumn("conveniencefee", GetType(System.String)))
        dt.Columns.Add(New DataColumn("CHARGE", GetType(System.String)))
        dt.Columns.Add(New DataColumn("CPnew", GetType(System.String)))
        dt.Columns.Add(New DataColumn("CPaub", GetType(System.String)))
        dt.Columns.Add(New DataColumn("CPWSC", GetType(System.String)))
        dt.Columns.Add(New DataColumn("CPFU", GetType(System.String)))

        dt.PrimaryKey = New DataColumn() {id}
        Return dt
    End Function

    Private Function getDomesticSOtoWalletPOTable() As DataTable
        Dim dt As DataTable = New DataTable
        Dim id As New DataColumn("ID", GetType(System.Int32))
        dt.Columns.Add(id)

        dt.Columns.Add(New DataColumn("controlno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("claimeddate", GetType(System.String)))
        dt.Columns.Add(New DataColumn("sendername", GetType(System.String)))
        dt.Columns.Add(New DataColumn("receivername", GetType(System.String)))
        dt.Columns.Add(New DataColumn("kptn", GetType(System.String)))
        dt.Columns.Add(New DataColumn("sendoutbranch", GetType(System.String)))
        dt.Columns.Add(New DataColumn("transdate", GetType(System.String)))
        dt.Columns.Add(New DataColumn("amount", GetType(System.String)))
        dt.Columns.Add(New DataColumn("charge", GetType(System.String)))
        dt.Columns.Add(New DataColumn("branchcode", GetType(System.String)))
        dt.Columns.Add(New DataColumn("legend", GetType(System.String)))
        dt.Columns.Add(New DataColumn("walletid", GetType(System.String)))
        dt.Columns.Add(New DataColumn("operatorid", GetType(System.String)))
        dt.Columns.Add(New DataColumn("custid", GetType(System.String)))
        dt.Columns.Add(New DataColumn("Sodate", GetType(System.String)))

        dt.PrimaryKey = New DataColumn() {id}
        Return dt
    End Function
    Private Function getGlobalSOWalletPO() As DataTable
        Dim dt As DataTable = New DataTable
        Dim id As New DataColumn("ID", GetType(System.Int32))
        dt.Columns.Add(id)
        dt.Columns.Add(New DataColumn("controlno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("claimeddate", GetType(System.String)))
        dt.Columns.Add(New DataColumn("receivername", GetType(System.String)))
        dt.Columns.Add(New DataColumn("kptnno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("currency", GetType(System.String)))
        dt.Columns.Add(New DataColumn("amountPO", GetType(System.String)))
        dt.Columns.Add(New DataColumn("servicecharge", GetType(System.String)))
        dt.Columns.Add(New DataColumn("sodate", GetType(System.String)))
        dt.Columns.Add(New DataColumn("sobranch", GetType(System.String)))
        dt.Columns.Add(New DataColumn("operatorid", GetType(System.String)))
        dt.Columns.Add(New DataColumn("payingBranch", GetType(System.String)))
        dt.Columns.Add(New DataColumn("usd", GetType(System.String)))

        dt.PrimaryKey = New DataColumn() {id}
        Return dt
    End Function
    Private Function getweeklyStatement() As DataTable
        Dim dt As DataTable = New DataTable
        Dim id As New DataColumn("ID", GetType(System.Int32))
        dt.Columns.Add(id)
        dt.Columns.Add(New DataColumn("kptn", GetType(System.String)))
        dt.Columns.Add(New DataColumn("refno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("companyName", GetType(System.String)))
        dt.Columns.Add(New DataColumn("address", GetType(System.String)))
        dt.Columns.Add(New DataColumn("amountjud", GetType(System.String)))
        dt.Columns.Add(New DataColumn("vat", GetType(System.String)))
        dt.Columns.Add(New DataColumn("totcharge", GetType(System.String)))
        dt.Columns.Add(New DataColumn("bankname", GetType(System.String)))
        dt.Columns.Add(New DataColumn("accountid", GetType(System.String)))

        dt.PrimaryKey = New DataColumn() {id}
        Return dt
    End Function

    Public Sub getReceiverWalletId(ByVal dt As DataTable)
        Try
            Con.OpenCon("KPMLWallet")
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    'cmd = New MySqlCommand(String.Format("SELECT walletno AS walletid FROM `kpmobile`.`mobileaccounts` WHERE username = '{0}';", row.Item("operatorid")), Con.GetCon())
                    'cmd = New MySqlCommand(String.Format("SELECT CONCAT(lastname,', ',firstname,' ',middlename) AS customername,walletno AS walletid,username,custid FROM `kpmobile`.`mobilelogin` WHERE CONCAT(lastname,', ',firstname,' ',middlename)='{0}' limit 1;", Trim(row("receivername"))), Con.GetCon())
                    'cmd = New MySqlCommand(String.Format("CALL KPWalletReportsSP.`getReceiverWalletId`('{0}')", Trim(row("receivername"))), Con.GetCon())
                    cmd = New MySqlCommand(String.Format("CALL getReceiverWalletId('{0}','{1}')", Trim(row("operatorid")), Trim(row("custid"))), Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("walletid") = UCase(If(Not IsDBNull(dr.Item("walletid")), Trim(dr.Item("walletid")), "-"))
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1
                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + cmd.CommandText.ToString() + " getReceiverWalletId")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    Public Sub getServiceCharge(ByVal dt As DataTable)
        Try
            Con.OpenCon("KPUsers")
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    cmd = New MySqlCommand(String.Format("SELECT charge AS ServiceCharge FROM  kpdomestic.sendout{0} WHERE kptnno ='{1}';", Trim(row("Sodate")), Trim(row("kptn"))), Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("charge") = UCase(If(Not IsDBNull(dr.Item("ServiceCharge")), Trim(dr.Item("ServiceCharge")), "-"))
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1
                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + cmd.CommandText.ToString() + " getReceiverWalletId")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    Public Sub getTransactions(ByVal dt As DataTable)
        Try
            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text

            Select Case period
                Case 1 'daily
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)

            End Select

            Con.OpenCon("KPMLWallet")
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    'cmd = New MySqlCommand(String.Format("call KPWalletReportsSP.HOwalletUserSummary('{0}','{1}','{2}');", row.Item("walletno"), _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd")), Con.GetCon())
                    cmd = New MySqlCommand(String.Format("call HOwalletUserSummary('{0}','{1}','{2}');", row.Item("walletno"), _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd")), Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), Trim(dr.Item("charge")), "-"))
                        dt.Rows(counter)("dates") = UCase(If(Not IsDBNull(dr.Item("dates")), Trim(dr.Item("dates")), "-"))
                        dt.Rows(counter)("cashout") = UCase(If(Not IsDBNull(dr.Item("cashout")), Trim(dr.Item("cashout")), "-"))
                        dt.Rows(counter)("WWTOSO") = UCase(If(Not IsDBNull(dr.Item("WWTOSO")), Trim(dr.Item("WWTOSO")), "-"))
                        dt.Rows(counter)("WTKPSO") = UCase(If(Not IsDBNull(dr.Item("WTKPSO")), Trim(dr.Item("WTKPSO")), "-"))
                        dt.Rows(counter)("RTS") = UCase(If(Not IsDBNull(dr.Item("RTS")), Trim(dr.Item("RTS")), "-"))
                        dt.Rows(counter)("WWP") = UCase(If(Not IsDBNull(dr.Item("WWP")), Trim(dr.Item("WWP")), "-"))
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1
                Next
            End Using
            Con.CloseCon()

        Catch ex As Exception
            kplog.Error(ex.ToString())
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    Private Sub getwalletload(ByVal dt As DataTable)
        Try
            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text

            Select Case period
                Case 1 'daily
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)

            End Select

            Con.OpenCon("KPUsers")
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    cmd = New MySqlCommand(String.Format("SELECT SUM(principal) AS WalletLoad " +
                                                    " FROM kpdomestic.sendout{0} " +
                                                    " WHERE kptnno LIKE '%mlw%' AND controlno LIKE '%ls%' AND YEAR(transdate)= {1} " +
                                                    " AND custid = '{2}'", _datefrom.ToString("MMdd"), _dateto.ToString("yyyy"), row.Item("custid")), Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("WalletLoad") = UCase(If(Not IsDBNull(dr.Item("WalletLoad")), Trim(dr.Item("WalletLoad")), "-"))
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1
                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString() + Con.GetCon.ConnectionString())
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    Private Sub getBPW(ByVal dt As DataTable)
        Try
            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text

            Select Case period
                Case 1 'daily
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)

            End Select

            Con.OpenCon("KPBillsPayment")
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    cmd = New MySqlCommand(String.Format("call kpbillspayment.HOwalletUserSBPW('{0}','{1}','{2}') ", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), row.Item("username")), Con.GetCon())

                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("BPW") = UCase(If(Not IsDBNull(dr.Item("BPW")), Trim(dr.Item("BPW")), "-"))
                        dt.Rows(counter)("CHARGE") = UCase(If(Not IsDBNull(dr.Item("CHARGE")), Trim(dr.Item("CHARGE")), "-"))
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1
                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString() + Con.GetCon.ConnectionString())
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    Public Sub getconvenience(ByVal dt As DataTable)
        Try
            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text

            Select Case period
                Case 1 'daily
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)

            End Select
            Con.OpenCon("KPMLWallet")

            Dim counter As Integer = 0
            Dim min As Integer = 0
            Dim max As Integer = 0
            'Dim wtable As Integer
            Dim wtable1 As Integer
            Dim dbname As String = String.Empty
            Dim intwallet As Integer
            Dim walletstr As String = String.Empty
            Dim tablename As String = String.Empty

            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    walletstr = Trim(row.Item("walletno"))

                    'intwallet = Convert.ToInt32(walletstr.Substring(walletstr.Length - 7))
                    'wtable1 = intwallet Mod 100
                    'If wtable1 = 0 Then
                    '    min = intwallet - 99
                    '    max = intwallet
                    'Else
                    '    min = (intwallet - wtable1) + 1
                    '    max = min + 99
                    'End If

                    'dbname = "wallet" + min.ToString() + "_" + max.ToString() + ""
                    'tablename = "walletno" + intwallet.ToString() + ""

                    'cmd = New MySqlCommand(String.Format("call KPWalletReportsSP.HOwalletUserSConv('{0}','{1}','{2}','{3}','{4}') ", dbname, tablename, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), row.Item("walletno")), Con.GetCon())
                    cmd = New MySqlCommand(String.Format("call HOwalletUserSConv('{0}','{1}','{2}','{3}','{4}') ", dbname, tablename, _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), row.Item("walletno")), Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("conveniencefee") = UCase(If(Not IsDBNull(dr.Item("conveniencefee")), Trim(dr.Item("conveniencefee")), "-"))
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1
                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString())
            'GetMessage(ex.ToString())
            GetMessage(cmd.CommandText())
        End Try
    End Sub
    Private Sub getCorpW(ByVal dt As DataTable)
        Try
            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text

            Select Case period
                Case 1 'daily
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)

            End Select

            Con.OpenCon("KPAPI")
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    cmd = New MySqlCommand(String.Format("call kppartners.HOwalletUserSCP('{0}','{1}','{2}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), row.Item("username")), Con.GetCon())

                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("CP") = UCase(If(Not IsDBNull(dr.Item("CP")), Trim(dr.Item("CP")), "0"))
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1
                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString() + Con.GetCon.ConnectionString())
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try

    End Sub
    Private Sub getCorpWAPINEW(ByVal dt As DataTable)
        Try

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text

            Select Case period
                Case 1 'daily
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)

            End Select

            Con.OpenCon("KPAPINEW")
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row1 As DataRow In dt.Rows
                    cmd = New MySqlCommand(String.Format("call kppartners.HOwalletUserSCP('{0}','{1}','{2}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), row1.Item("username")), Con.GetCon())

                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("CPnew") = UCase(If(Not IsDBNull(dr.Item("CPnew")), Trim(dr.Item("CPnew")), "0"))
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1
                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Info("API new" + ex.ToString())
        End Try
    End Sub
    Private Sub getCorpAUB(ByVal dt As DataTable)
        Try

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text

            Select Case period
                Case 1 'daily
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)

            End Select

            Con.OpenCon("KPAPI")
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row1 As DataRow In dt.Rows
                    cmd = New MySqlCommand(String.Format("call kppartners.HOwalletUserSCPAUB('{0}','{1}','{2}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), row1.Item("username")), Con.GetCon())

                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("CPaub") = UCase(If(Not IsDBNull(dr.Item("CPaub")), Trim(dr.Item("CPaub")), "0"))
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1
                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Info("API AUB" + ex.ToString())
        End Try
    End Sub

    Private Sub getCorpWebSC(ByVal dt As DataTable)
        Try

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text

            Select Case period
                Case 1 'daily
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)

            End Select

            Con.OpenCon("KPWSC")
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row1 As DataRow In dt.Rows
                    cmd = New MySqlCommand(String.Format("call kppartners.HOwalletUserWSC('{0}','{1}','{2}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), row1.Item("username")), Con.GetCon())

                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("CPWSC") = UCase(If(Not IsDBNull(dr.Item("CPWSC")), Trim(dr.Item("CPWSC")), "0"))
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1
                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Info("WSC" + ex.ToString())
        End Try
    End Sub
    Private Sub getCorpFU(ByVal dt As DataTable)
        Try

            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text

            Select Case period
                Case 1 'daily
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)

            End Select

            Con.OpenCon("KPFileUpload")
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row1 As DataRow In dt.Rows
                    cmd = New MySqlCommand(String.Format("call kppartners.HOwalletUserFU('{0}','{1}','{2}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), row1.Item("username")), Con.GetCon())

                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("CPFU") = UCase(If(Not IsDBNull(dr.Item("CPFU")), Trim(dr.Item("CPFU")), "0"))
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1
                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Info("WSC" + ex.ToString())
        End Try
    End Sub

    Private Sub getExpressW(ByVal dt As DataTable)
        Try
            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text

            Select Case period
                Case 1 'daily
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)

            End Select

            Con.OpenCon("KPMLExpress")
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    cmd = New MySqlCommand(String.Format("call kpOFW.HOwalletUserSOFW('{0}','{1}','{2}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), row.Item("username")), Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("WE") = UCase(If(Not IsDBNull(dr.Item("WE")), Trim(dr.Item("WE")), "0"))
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1
                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString() + Con.GetCon.ConnectionString())
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    Private Sub getDSWP(ByVal dt As DataTable)
        Try
            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text

            Select Case period
                Case 1 'daily
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)
            End Select

            Con.OpenCon("KPUsers")
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    cmd = New MySqlCommand(String.Format("call kpdomestic.HOwalletUserDSWP('{0}','{1}','{2}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), row.Item("custid")), Con.GetCon())

                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("DSWP") = UCase(If(Not IsDBNull(dr.Item("DSWP")), Trim(dr.Item("DSWP")), "0"))
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1
                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString() + Con.GetCon.ConnectionString())
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try



        Try
            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text

            Select Case period
                Case 1 'daily
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)

            End Select
            If Convert.ToInt32(Convert.ToDateTime(_datefrom).ToString("yyyy")) < 2020 Then
                Con.OpenCon("KP8DomesticB")
                Dim counter As Integer = 0
                Using Con.GetCon()
                    For Each row As DataRow In dt.Rows
                        cmd = New MySqlCommand(String.Format("SELECT SUM(principal) AS  DSWP FROM kpdomestic{1}.payout{0} " +
                                                     " WHERE YEAR(ClaimedDate)= {1} AND " +
                                                     " (cancelledreason NOT IN ('','Request for Change','Cancel Sendout') " +
                                                     " OR cancelledreason IS NULL) AND Controlno LIKE '%mlw%' AND custid = '{2}'", _datefrom.ToString("MMdd"), _datefrom.ToString("yyyy"), row.Item("custid")), Con.GetCon())

                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        dt.Rows(counter).BeginEdit()
                        If dr.HasRows() Then
                            dr.Read()
                            dt.Rows(counter)("DSWP") = UCase(If(Not IsDBNull(dr.Item("DSWP")), Trim(dr.Item("DSWP")), "0"))
                        End If
                        dt.Rows(counter).EndEdit()
                        dt.AcceptChanges()
                        dr.Close()
                        counter = counter + 1
                    Next
                End Using
                Con.CloseCon()
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + Con.GetCon.ConnectionString())
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    Private Sub getMLSHOP(ByVal dt As DataTable)
        Try
            Dim _datefrom As DateTime
            Dim _dateto As DateTime
            Dim period As Integer = drpPeriod.Text

            Select Case period
                Case 1 'daily
                    _datefrom = Convert.ToDateTime(txtDate.Text)
                    _dateto = Convert.ToDateTime(txtDate.Text)
                Case 2 'MONTHLY
                    Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
                    Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
                    _datefrom = Convert.ToDateTime(firstday)
                    _dateto = Convert.ToDateTime(lastday)
                Case 3 'RANGE
                    _datefrom = Convert.ToDateTime(txtdateFrom.Text)
                    _dateto = Convert.ToDateTime(txtdateTo.Text)

            End Select

            Con.OpenCon("MLOnline")
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    cmd = New MySqlCommand(String.Format("call ecommercemerchants.HOwalletUserSMLSHOP('{0}','{1}','{2}') ", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"), row.Item("walletno")), Con.GetCon())

                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("MLShop") = UCase(If(Not IsDBNull(dr.Item("MLShop")), Trim(dr.Item("MLShop")), "-"))
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1
                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString() + Con.GetCon.ConnectionString())
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    Private Sub UserBegBalance(ByVal dt As DataTable)
        Try
            Con.OpenCon("KPMLWallet")
            Dim counter As Integer = 0
            Using Con.GetCon()
                For Each row As DataRow In dt.Rows
                    'cmd = New MySqlCommand(String.Format("SELECT balance as beginningbalance  FROM `kpmobile`.`mobileaccounts` WHERE walletno = '{0}';", row.Item("walletno")), Con.GetCon())
                    'cmd = New MySqlCommand(String.Format("Call KPWalletReportsSP.getBalance('{0}')", row.Item("walletno")), Con.GetCon())
                    cmd = New MySqlCommand(String.Format("Call getBalance('{0}')", row.Item("walletno")), Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    dt.Rows(counter).BeginEdit()
                    If dr.HasRows() Then
                        dr.Read()
                        dt.Rows(counter)("beginningbalance") = UCase(If(Not IsDBNull(dr.Item("beginningbalance")), Trim(dr.Item("beginningbalance")), "-"))
                    End If
                    dt.Rows(counter).EndEdit()
                    dt.AcceptChanges()
                    dr.Close()
                    counter = counter + 1
                Next
            End Using
            Con.CloseCon()
        Catch ex As Exception
            kplog.Error(ex.ToString() + Con.GetCon.ConnectionString())
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub

    '======================================= End DomesticSOtoWalletPO '======================================='

    '================================================ Ml Wallet Return to Sender ================================================'
    Private Sub MLWalletReturntoSender()
        GetMessage("Report Not Available.")
        'Try
        '    dtmerger = getMLWalletReturntoSenderTable()
        '    dtmerger.Clear()
        '    dtable = getMLWalletReturntoSenderTable()
        '    dtable.Clear()
        '    dtable1 = getMLWalletReturntoSenderTable()
        '    dtable1.Clear()

        '    date1 = txtDate.Text
        '    date2 = Convert.ToDateTime(date1).ToString("MMdd")

        '    Dim _datefrom As DateTime
        '    Dim _dateto As DateTime
        '    Dim period As Integer = drpPeriod.Text
        '    Select Case period
        '        Case 1 'DAILY
        '            _datefrom = Convert.ToDateTime(txtDate.Text)
        '            _dateto = Convert.ToDateTime(txtDate.Text)

        '        Case 2 'MONTHLY
        '            Dim firstday = New Date(drpYear.Text, drpMonth.Text, "1")
        '            Dim lastday = New Date(drpYear.Text, drpMonth.Text, _monthnoofdays)
        '            _datefrom = Convert.ToDateTime(firstday)
        '            _dateto = Convert.ToDateTime(lastday)
        '        Case 3 'RANGE
        '            _datefrom = Convert.ToDateTime(txtdateFrom.Text)
        '            _dateto = Convert.ToDateTime(txtdateTo.Text)
        '    End Select

        '    'strquery = String.Format("call KPWalletReportsSP.MLWalletRTS('{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
        '    strquery = String.Format("call MLWalletRTS('{0}','{1}')", _datefrom.ToString("yyyy-MM-dd"), _dateto.ToString("yyyy-MM-dd"))
        '    Con.OpenCon("KPMLWallet")
        '    Using Con.GetCon()
        '        cmd = New MySqlCommand(strquery, Con.GetCon)
        '        cmd.CommandTimeout = 0
        '        dr = cmd.ExecuteReader()
        '        While dr.Read()
        '            datarow = dtable.NewRow()
        '            clsreport.ID = clsreport.ID + 1
        '            datarow("ID") = clsreport.ID
        '            datarow("controlno") = UCase(If(Not IsDBNull(dr.Item("controlno")), Trim(dr.Item("controlno")), "-"))
        '            datarow("sendersname") = UCase(If(Not IsDBNull(dr.Item("sendersname")), Trim(dr.Item("sendersname")), "-"))
        '            datarow("datecancelled") = UCase(If(Not IsDBNull(dr.Item("datecancelled")) And CType(dr.Item("datecancelled"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("datecancelled"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
        '            datarow("receiversname") = UCase(If(Not IsDBNull(dr.Item("receiversname")), Trim(dr.Item("receiversname")), "-"))
        '            datarow("kptn") = UCase(If(Not IsDBNull(dr.Item("kptn")), Trim(dr.Item("kptn")), "-"))
        '            datarow("datesend") = UCase(If(Not IsDBNull(dr.Item("datesend")) And CType(dr.Item("datesend"), String) <> "0000-00-00 00:00:00", Convert.ToDateTime(Trim(dr.Item("datesend"))).ToString("yyyy-MM-dd HH:mm:ss tt"), "-"))
        '            datarow("amount") = UCase(If(Not IsDBNull(dr.Item("amount")), Trim(dr.Item("amount")), "-"))
        '            datarow("charge") = UCase(If(Not IsDBNull(dr.Item("charge")), Trim(dr.Item("charge")), "-"))
        '            'datarow("initiatedby") = UCase(If(Not IsDBNull(dr.Item("initiatedby")), Trim(dr.Item("initiatedby")), "-"))


        '            dtable.Rows.Add(datarow)
        '            dtable.AcceptChanges()

        '        End While
        '        dtmerger.Merge(dtable)
        '        'getReceiverWalletId(dtmerger)

        '        dr.Close()
        '        cmd = Nothing
        '    End Using
        '    If dtmerger.Rows.Count = 0 Then
        '        GetMessage("No ML Wallet Return to Sender Transaction " & _dateofreport)
        '    Else
        '        loadwalletreport("MLWalletRTS")

        '    End If

        'Catch ex As Exception
        '    kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " MLWalletReturntoSender")
        '    Dim _err As String = ex.Message.Substring(7, 20)
        '    If _err = "Timeout Expired." Then
        '        MLWalletReturntoSender()
        '    Else
        '        'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
        '        GetMessage("Please Call Admin Support!")
        '    End If
        'End Try
    End Sub
    Private Function getMLWalletReturntoSenderTable() As DataTable
        Dim dt As DataTable = New DataTable
        Dim id As New DataColumn("ID", GetType(System.Int32))
        dt.Columns.Add(id)

        dt.Columns.Add(New DataColumn("controlno", GetType(System.String)))
        dt.Columns.Add(New DataColumn("sendersname", GetType(System.String)))
        dt.Columns.Add(New DataColumn("datecancelled", GetType(System.String)))
        dt.Columns.Add(New DataColumn("receiversname", GetType(System.String)))
        dt.Columns.Add(New DataColumn("kptn", GetType(System.String)))
        dt.Columns.Add(New DataColumn("datesend", GetType(System.String)))
        dt.Columns.Add(New DataColumn("amount", GetType(System.String)))
        dt.Columns.Add(New DataColumn("charge", GetType(System.String)))
        dt.Columns.Add(New DataColumn("initiatedby", GetType(System.String)))

        dt.PrimaryKey = New DataColumn() {id}
        Return dt
    End Function

    '============================================== End Ml Wallet Return to Sender =============================================='



    '=========================END WALLET======================

    '=========================================================== END OF GETTING REPORTS DATA ==========================================================
    '==================================================================================================================================================

    'PURE PARTNER w/ FIXED PARTNER NAME
    Public Sub WithPartnername()
        drpTransactionTypelist.Enabled = False
        drpTransactionTypelist.SelectedIndex = 0
        drpPeriod.Enabled = False
        drpPeriod.SelectedIndex = 0
        PartnersWithSub("", username)
        perioddisabled()
        SelectReports()
    End Sub
    'wallet no for batch upload
    Public Sub withWalletno()
        drpTransactionTypelist.Enabled = True
        drpTransactionTypelist.SelectedIndex = 65
        drpPeriod.Enabled = False
        drpPeriod.SelectedIndex = 1


    End Sub

    'check if is sub
    Public Function PartnersIsSub(ByVal subaccountID As String) As String
        Con1.OpenCon("KPWSC")
        Using Con1.GetCon()
            strquery = String.Format("SELECT mainaccountid FROM `kpadminpartners`.`wssubagents` wss WHERE wss.subaccountid= '{0}' LIMIT 1;", subaccountID)
            cmd = New MySqlCommand(strquery, Con1.GetCon())
            cmd.CommandTimeout = 0
            dr = cmd.ExecuteReader
            If dr.Read Then
                If UCase(Trim(dr(0).ToString)) = smaccountid Then
                    Session("mainaccountid") = UCase(Trim(dr(0).ToString))
                    issm = True
                End If
                issub = True
                Return UCase(Trim(dr(0).ToString))
            Else : Return Nothing
            End If
            dr.Close()
        End Using
    End Function

    'check if has sub
    Public Sub PartnersWithSub(ByVal _flag As String, ByVal _uname As String)
        Dim partnersubid = ""
        If ReportType = 6 Then
            If partnername = Nothing Then
                partnersubid = drppartnerid.SelectedValue
            Else
                partnersubid = accountID
            End If
            Con1.OpenCon("KPWSC")
            Using Con1.GetCon()
                If partnername = Nothing And issub = False Then
                    _uname = ""
                End If
                If Session("roles") = "CAD-DIVMAN" Then
                    strquery = String.Format("call kpadminpartners.HOgetSubPartners('{0}','{1}','{2}')", partnersubid, "OR", _uname)
                Else
                    strquery = String.Format("call kpadminpartners.HOgetSubPartners('{0}','{1}','{2}')", partnersubid, _flag, _uname)
                End If
                cmd = New MySqlCommand(strquery, Con1.GetCon())
                cmd.CommandTimeout = 0
                dr = cmd.ExecuteReader
                If dr.HasRows() Then
                    If partnersubid = smaccountid Then
                        issm = True
                    End If
                    hassub = True
                    If issub = True Then
                        drpglobe.Enabled = False
                    Else
                        drpglobe.Enabled = True
                        drpglobe.Items.Add(New ListItem("-Select-"))
                        drpsubpartnerid.Items.Add(New ListItem("-Select-"))
                    End If
                    While dr.Read
                        drpglobe.Items.Add(UCase(Trim(dr(0).ToString)))
                        drpsubpartnerid.Items.Add(UCase(Trim(dr(1).ToString)))
                    End While
                End If
                dr.Close()
            End Using
            If hassub = True Then
                drpglobe.Visible = True
                lblspecify.Visible = True
            Else
                drpglobe.Enabled = False
                drpglobe.Visible = False
                lblspecify.Visible = False
            End If
        End If
    End Sub

    'SELECT TRANSACTION TYPE
    Public Sub getSubBiller()
        If (ReportType = 2) Then
            Try
                getconnections()
                Using Con.GetCon()
                    strquery = String.Format("SELECT billername, billercode, accountid FROM `kpadminpartners`.`bayadcenterbiller` WHERE accountid = '{0}'", bayadcenterid)
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    cmd.CommandTimeout = 0
                    dr = cmd.ExecuteReader
                    If dr.HasRows Then
                        drpbiller.Items.Add(New ListItem("-Select-"))
                        drpbiller2.Items.Add(New ListItem(""))
                        While dr.Read
                            drpbiller.Items.Add(UCase(Trim(dr(0).ToString)))
                            drpbiller2.Items.Add(UCase(Trim(dr(1).ToString)))
                        End While
                    End If
                    dr.Close()
                End Using
            Catch ex As Exception
                kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " GetExpressSubAgents")
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End Try
        End If
    End Sub
    Public Sub TransType()

        drpTransactionTypelist.Items.FindByValue("1").Enabled = False 'sendout
        drpTransactionTypelist.Items.FindByValue("2").Enabled = False 'claimed
        drpTransactionTypelist.Items.FindByValue("3").Enabled = False 'unclaimed 
        drpTransactionTypelist.Items.FindByValue("4").Enabled = False 'rts
        drpTransactionTypelist.Items.FindByValue("5").Enabled = False 'cancel sendout
        drpTransactionTypelist.Items.FindByValue("6").Enabled = False 'amendments
        drpTransactionTypelist.Items.FindByValue("7").Enabled = False 'payout summary
        drpTransactionTypelist.Items.FindByValue("8").Enabled = False 'cancelled payout   
        drpTransactionTypelist.Items.FindByValue("9").Enabled = False 'rfc
        drpTransactionTypelist.Items.FindByValue("10").Enabled = False 'mlexpress payout
        drpTransactionTypelist.Items.FindByValue("11").Enabled = False 'express loading
        drpTransactionTypelist.Items.FindByValue("12").Enabled = False 'transaction history
        drpTransactionTypelist.Items.FindByValue("13").Enabled = False 'profit share to receive payout from branch to sm
        drpTransactionTypelist.Items.FindByValue("14").Enabled = False 'profit share to send payout from sm to branch
        drpTransactionTypelist.Items.FindByValue("15").Enabled = False 'profit share to send payout from sm to sm
        drpTransactionTypelist.Items.FindByValue("16").Enabled = False 'sales journal
        drpTransactionTypelist.Items.FindByValue("17").Enabled = False 'terminal txn report
        drpTransactionTypelist.Items.FindByValue("18").Enabled = False 'terminal reading report
        drpTransactionTypelist.Items.FindByValue("19").Enabled = False 'daily service fee
        drpTransactionTypelist.Items.FindByValue("20").Enabled = False 'SM Detailed TRANSACTION Report (Send)
        drpTransactionTypelist.Items.FindByValue("21").Enabled = False 'SM-ML Detailed TRANSACTION Report (Receive)
        drpTransactionTypelist.Items.FindByValue("22").Enabled = False 'SM Summary TRANSACTION Report (Send)
        drpTransactionTypelist.Items.FindByValue("23").Enabled = False 'SM-ML Summary TRANSACTION Report (Receive)
        drpTransactionTypelist.Items.FindByValue("24").Enabled = False 'SM-ML Profit SHARE (Send)
        drpTransactionTypelist.Items.FindByValue("25").Enabled = False 'SM-ML Profit SHARE (Receive)
        drpTransactionTypelist.Items.FindByValue("26").Enabled = False 'MLKP FROM SM Branches (Send)
        drpTransactionTypelist.Items.FindByValue("27").Enabled = False 'MLKP Payout AT SM Branches
        drpTransactionTypelist.Items.FindByValue("28").Enabled = False 'POS Monthly Report
        drpTransactionTypelist.Items.FindByValue("29").Enabled = False 'ml express post audit
        drpTransactionTypelist.Items.FindByValue("30").Enabled = False 'sm summary report
        drpTransactionTypelist.Items.FindByValue("31").Enabled = False 'electronic journal
        drpTransactionTypelist.Items.FindByValue("32").Enabled = False 'x-reading report
        drpTransactionTypelist.Items.FindByValue("33").Enabled = False 'or register report
        drpTransactionTypelist.Items.FindByValue("34").Enabled = False 'transaction logs
        drpTransactionTypelist.Items.FindByValue("35").Enabled = False 'ML Wallet Loading Report
        drpTransactionTypelist.Items.FindByValue("36").Enabled = False 'ML Wallet Sendout To KP Payout
        drpTransactionTypelist.Items.FindByValue("37").Enabled = False 'ML Wallet Cashout Report
        drpTransactionTypelist.Items.FindByValue("38").Enabled = False 'ML Wallet To Billspay Report
        drpTransactionTypelist.Items.FindByValue("39").Enabled = False 'ML Wallet Customer Balanced Report
        drpTransactionTypelist.Items.FindByValue("40").Enabled = False 'Sales Report Per merchant
        drpTransactionTypelist.Items.FindByValue("41").Enabled = False 'ML Wallet Eload Report
        drpTransactionTypelist.Items.FindByValue("42").Enabled = False 'ML Wallet KP Sendout
        drpTransactionTypelist.Items.FindByValue("43").Enabled = False 'ML Wallet customer list report
        drpTransactionTypelist.Items.FindByValue("44").Enabled = False 'ML Wallet transaction report
        drpTransactionTypelist.Items.FindByValue("45").Enabled = False 'ML Wallet claimed cashout report
        drpTransactionTypelist.Items.FindByValue("46").Enabled = False 'ML Wallet Payment - Sendout Summary
        drpTransactionTypelist.Items.FindByValue("47").Enabled = False 'ML Wallet Payment - Payout Summary
        drpTransactionTypelist.Items.FindByValue("48").Enabled = False 'ML Wallet Express Payment - SO
        drpTransactionTypelist.Items.FindByValue("49").Enabled = False 'ML Wallet Express Payment - PO
        drpTransactionTypelist.Items.FindByValue("50").Enabled = False 'Z-Reading Report
        drpTransactionTypelist.Items.FindByValue("51").Enabled = False 'AR Register Report
        drpTransactionTypelist.Items.FindByValue("52").Enabled = False 'ML Wallet Payment - Sendout 
        drpTransactionTypelist.Items.FindByValue("53").Enabled = False 'ML Wallet Payment - Payout 
        drpTransactionTypelist.Items.FindByValue("54").Enabled = False 'AR Cancelled Register Report 
        drpTransactionTypelist.Items.FindByValue("55").Enabled = False 'Wallet Transaction History
        drpTransactionTypelist.Items.FindByValue("56").Enabled = False 'ML Shop Transaction Report
        drpTransactionTypelist.Items.FindByValue("57").Enabled = False 'Sendout billspayment report
        drpTransactionTypelist.Items.FindByValue("58").Enabled = False 'ML Express Summary report
        drpTransactionTypelist.Items.FindByValue("59").Enabled = False 'ML Express eload
        drpTransactionTypelist.Items.FindByValue("60").Enabled = False 'ML Express eload
        drpTransactionTypelist.Items.FindByValue("61").Enabled = False 'ML Express eload
        drpTransactionTypelist.Items.FindByValue("62").Enabled = False 'ML Registration
        drpTransactionTypelist.Items.FindByValue("63").Enabled = False 'ML Account
        drpTransactionTypelist.Items.FindByValue("64").Enabled = False 'Security Bank
        drpTransactionTypelist.Items.FindByValue("65").Enabled = False 'BatchUpload
        drpTransactionTypelist.Items.FindByValue("67").Enabled = False 'ML Domestic Sendout to Wallet Payout
        drpTransactionTypelist.Items.FindByValue("68").Enabled = False 'ML Wallet Return to Sender 
        drpTransactionTypelist.Items.FindByValue("69").Enabled = False ' ML GLobal Sendout to Wallet Payout
        drpTransactionTypelist.Items.FindByValue("70").Enabled = False 'Daily Settlement Report per Bank
        drpTransactionTypelist.Items.FindByValue("71").Enabled = False 'Weekly Statement of Account
        drpTransactionTypelist.Items.FindByValue("72").Enabled = False 'Monthly Statement of Account
        drpTransactionTypelist.Items.FindByValue("73").Enabled = False 'Weekly Summary Report
        drpTransactionTypelist.Items.FindByValue("74").Enabled = False 'Monthly Summary Report
        drpTransactionTypelist.Items.FindByValue("75").Enabled = False 'Western Union Refund Report
        drpTransactionTypelist.Items.FindByValue("76").Enabled = False 'ML Express Cancelled Billspayment Report 
        drpTransactionTypelist.Items.FindByValue("77").Enabled = False 'ML Wallet Cancelled Billspayment Report 
        drpTransactionTypelist.Items.FindByValue("78").Enabled = False 'users sumamry
        drpTransactionTypelist.Items.FindByValue("79").Enabled = False 'ending balance
        drpTransactionTypelist.Items.FindByValue("80").Enabled = False 'HO BatchUpload
        drpTransactionTypelist.Items.FindByValue("83").Enabled = False 'Western Union Payment Report
        drpTransactionTypelist.Items.FindByValue("84").Enabled = False 'ML Wallet Loading Adjustment Report
        drpTransactionTypelist.Items.FindByValue("85").Enabled = False 'All Partners Volume
        drpTransactionTypelist.Items.FindByValue("86").Enabled = False 'ML Wallet Smart Promo
        drpTransactionTypelist.Items.FindByValue("87").Enabled = False 'ML Wallet Billspayment force committed transactions (Manual)
        drpTransactionTypelist.Items.FindByValue("88").Enabled = False 'ML Wallet Billspayment force committed transactions (Auto)

        If ReportType = 13 Then
            drpTransactionTypelist.Items.FindByValue("80").Enabled = True 'HO BatchUpload
        End If

        If ReportType = 11 Then
            drpTransactionTypelist.Items.FindByValue("65").Enabled = True 'BatchUpload
        End If

        If ReportType = 5 Then
            drpTransactionTypelist.Items.FindByValue("76").Enabled = True 'ML Express Cancelled Billspayment Report 
        End If

        If drppartnerid.Text = westernunionid Then 'westernunion
            drpTransactionTypelist.Items.FindByValue("1").Enabled = True
        End If

        If drppartnerid.Text = billspayWU Then 'westernunion
            drpTransactionTypelist.Items.FindByValue("75").Enabled = True
            drpTransactionTypelist.Items.FindByValue("83").Enabled = True
        End If

        If drppartnerid.Text = smaccountid And partnername <> Nothing And Session("roles") <> "KP-SMHO" Then
            drpTransactionTypelist.Items.FindByValue("1").Text = "Daily Send Transaction Report" 'sendout
            drpTransactionTypelist.Items.FindByValue("2").Text = "Daily Receive Transaction Report" 'payout
        End If

        If Session("roles") = "KP-CAD" Or Session("roles") = "CAD" Then
            If ReportType = 5 Then
                drpTransactionTypelist.Items.FindByValue("48").Enabled = True 'ML Wallet Express Payment - SO
                drpTransactionTypelist.Items.FindByValue("49").Enabled = True 'ML Wallet Express Payment - PO
                drpTransactionTypelist.Items.FindByValue("58").Enabled = True 'ML Express Summary report
                drpTransactionTypelist.Items.FindByValue("59").Enabled = True 'ML express eload

            ElseIf ReportType = 12 Then

                drpTransactionTypelist.Items.FindByValue("70").Enabled = True 'Daily Settlement Report per Bank
                drpTransactionTypelist.Items.FindByValue("71").Enabled = True 'Weekly Statement of Account
                drpTransactionTypelist.Items.FindByValue("72").Enabled = True 'Monthly Statement of Account
                drpTransactionTypelist.Items.FindByValue("73").Enabled = True 'Weekly Summary Report
                drpTransactionTypelist.Items.FindByValue("74").Enabled = True 'Monthly Summary Report

            ElseIf ReportType = 7 Or ReportType = 10 Then
                If Session("roles") = "KP-HRMDPayroll" Or Session("roles") = "KP-PAYROLL" Then
                    drpTransactionTypelist.Items.FindByValue("46").Enabled = False  'ML Wallet Payment - Sendout Summary
                    drpTransactionTypelist.Items.FindByValue("47").Enabled = False  'ML Wallet Payment - Payout Summary
                    drpTransactionTypelist.Items.FindByValue("52").Enabled = False  'ML Wallet Payment - Sendout 
                    drpTransactionTypelist.Items.FindByValue("53").Enabled = False  'ML Wallet Payment - Payout 
                    drpTransactionTypelist.Items.FindByValue("56").Enabled = False  'ML Shop Transaction Report
                    drpTransactionTypelist.Items.FindByValue("60").Enabled = False  'wallet corporate payout
                    drpTransactionTypelist.Items.FindByValue("61").Enabled = False  'ML Express eload
                Else
                    drpTransactionTypelist.Items.FindByValue("46").Enabled = True 'ML Wallet Payment - Sendout Summary
                    drpTransactionTypelist.Items.FindByValue("47").Enabled = True 'ML Wallet Payment - Payout Summary
                    drpTransactionTypelist.Items.FindByValue("52").Enabled = True 'ML Wallet Payment - Sendout 
                    drpTransactionTypelist.Items.FindByValue("53").Enabled = True 'ML Wallet Payment - Payout 
                    drpTransactionTypelist.Items.FindByValue("56").Enabled = True 'ML Shop Transaction Report
                    drpTransactionTypelist.Items.FindByValue("60").Enabled = True 'wallet corporate payout
                    drpTransactionTypelist.Items.FindByValue("61").Enabled = True 'ML Express eload
                    drpTransactionTypelist.Items.FindByValue("84").Enabled = True 'ML Wallet Loading Adjustment Report
                End If

            End If
            If ReportType = 7 Then
                If Session("roles") = "KP-HRMDPayroll" Or Session("roles") = "KP-PAYROLL" Then
                    drpTransactionTypelist.Items.FindByValue("62").Enabled = False 'ML Registration
                    drpTransactionTypelist.Items.FindByValue("63").Enabled = False 'ML Account
                    drpTransactionTypelist.Items.FindByValue("64").Enabled = False 'ML Account
                    drpTransactionTypelist.Items.FindByValue("67").Enabled = False 'ML Domestic Sendout to Wallet Payout
                    drpTransactionTypelist.Items.FindByValue("68").Enabled = False 'ML Wallet Return to Sender
                ElseIf Session("username") = "PERA94005055" And Session("roles") = "KP-CAD" Then 'Darwin
                    drpTransactionTypelist.Items.FindByValue("78").Enabled = True  'wallet users summary
                    drpTransactionTypelist.Items.FindByValue("79").Enabled = True ' wallet ending balance
                Else
                    drpTransactionTypelist.Items.FindByValue("62").Enabled = True 'ML Registration
                    drpTransactionTypelist.Items.FindByValue("63").Enabled = True 'ML Account
                    drpTransactionTypelist.Items.FindByValue("64").Enabled = False 'ML Account
                    drpTransactionTypelist.Items.FindByValue("67").Enabled = True 'ML Domestic Sendout to Wallet Payout
                    drpTransactionTypelist.Items.FindByValue("68").Enabled = True 'ML Wallet Return to Sender
                    drpTransactionTypelist.Items.FindByValue("69").Enabled = True 'ML GLobal Sendout to Wallet Payout
                    drpTransactionTypelist.Items.FindByValue("77").Enabled = True 'ML Wallet Cancelled Billspayment Report 
                    ' drpTransactionTypelist.Items.FindByValue("84").Enabled = True 'ML Wallet Loading Adjustment Report
                    drpTransactionTypelist.Items.FindByValue("86").Enabled = True 'ML Wallet Smart Promo
                    drpTransactionTypelist.Items.FindByValue("87").Enabled = True 'ML Wallet Billspayment force committed transactions (Manual)
                    drpTransactionTypelist.Items.FindByValue("88").Enabled = True 'ML Wallet Billspayment force committed transactions (Auto)
                End If
            End If




        ElseIf (Session("roles") = "IAD" Or Session("roles") = "KP-IAD") And ReportType = 10 Then
            drpTransactionTypelist.Items.FindByValue("46").Enabled = True 'ML Wallet Payment - Sendout Summary
            drpTransactionTypelist.Items.FindByValue("47").Enabled = True 'ML Wallet Payment - Payout Summary
            drpTransactionTypelist.Items.FindByValue("52").Enabled = True 'ML Wallet Payment - Sendout 
            drpTransactionTypelist.Items.FindByValue("53").Enabled = True 'ML Wallet Payment - Payout 
            drpTransactionTypelist.Items.FindByValue("56").Enabled = True 'ML Shop Transaction Report
            drpTransactionTypelist.Items.FindByValue("60").Enabled = True 'wallet corporate payout
            drpTransactionTypelist.Items.FindByValue("61").Enabled = True 'ML Express eload

        End If
        '
        If ReportType = 1 And drppartnerid.Text = westernunionid Then
            'drpTransactionTypelist.Items.FindByValue("75").Enabled = True
        End If



        '------------------------------------ 'for IAD Fix--------------------------------------------
        If (Session("roles") = "IAD" Or Session("roles") = "KP-IAD") And (ReportType = 7 Or ReportType = 10) Then
            drpTransactionTypelist.Items.FindByValue("35").Enabled = True 'ML Wallet Loading Report
            drpTransactionTypelist.Items.FindByValue("1").Text = "ML Wallet To Wallet Sendout Report" 'sendout
            drpTransactionTypelist.Items.FindByValue("2").Text = "ML Wallet To Wallet Payout Report" 'sendout
            drpTransactionTypelist.Items.FindByValue("36").Enabled = True 'ML Wallet KP Payout
            drpTransactionTypelist.Items.FindByValue("5").Text = "ML Wallet Cancelled Sendout Report" 'sendout
            drpTransactionTypelist.Items.FindByValue("8").Text = "ML Wallet Cancelled Payout Report" 'sendout
            drpTransactionTypelist.Items.FindByValue("6").Text = "ML Wallet Amendment Report" 'sendout
            drpTransactionTypelist.Items.FindByValue("3").Text = "ML Wallet Unclaimed Transaction Report" 'sendout
            drpTransactionTypelist.Items.FindByValue("37").Enabled = True 'ML Wallet Cashout Report
            drpTransactionTypelist.Items.FindByValue("38").Enabled = True 'ML Wallet To Billspay Report
            drpTransactionTypelist.Items.FindByValue("39").Enabled = True 'ML Wallet Customer Balanced Report
            drpTransactionTypelist.Items.FindByValue("41").Enabled = True 'ML Wallet Eload Report
            drpTransactionTypelist.Items.FindByValue("42").Enabled = True 'ML Wallet KP Sendout
            drpTransactionTypelist.Items.FindByValue("45").Enabled = True 'ML Wallet Claimed cashout
            drpTransactionTypelist.Items.FindByValue("55").Enabled = False 'ML Wallet Transaction History


            drpTransactionTypelist.Items.FindByValue("1").Enabled = True 'ML Wallet To Wallet Sendout Report
            drpTransactionTypelist.Items.FindByValue("2").Enabled = True 'ML Wallet To Wallet Payout Report
            drpTransactionTypelist.Items.FindByValue("3").Enabled = True 'ML Wallet Unclaimed Transaction Report
            drpTransactionTypelist.Items.FindByValue("5").Enabled = True 'ML Wallet Cancelled Sendout Report
            drpTransactionTypelist.Items.FindByValue("6").Enabled = True 'ML Wallet Ammendment Report
            drpTransactionTypelist.Items.FindByValue("8").Enabled = True 'ML Wallet Cancelled Payout Report

        End If
        '------------------------------------ 'for IAD Fix--------------------------------------------
        If Session("roles") = "CAD-DIVMAN" Then
            drpTransactionTypelist.Items.FindByValue("16").Enabled = True 'sales journal
            drpTransactionTypelist.Items.FindByValue("31").Enabled = True 'electronic journal
            drpTransactionTypelist.Items.FindByValue("32").Enabled = True 'x-reading report
            drpTransactionTypelist.Items.FindByValue("33").Enabled = True 'or register report
            drpTransactionTypelist.Items.FindByValue("34").Enabled = True 'transaction logs
            drpTransactionTypelist.Items.FindByValue("50").Enabled = True 'Z-Reading Report
            drpTransactionTypelist.Items.FindByValue("51").Enabled = True 'AR Register Report
            drpTransactionTypelist.Items.FindByValue("54").Enabled = True 'AR Cancelled Register Report 
        Else
            If Session("roles") <> "IAD" And Session("roles") <> "KP-IAD" And Session("roles") <> "KP-RAM" And Session("roles") <> "RAM" Then
                If ReportType = 1 Or ReportType = 4 Or ReportType = 3 Or ReportType = 5 Or ReportType = 6 Or ReportType = 9 And Session("roles") <> "KP-SMHO" Then
                    If ReportType <> 1 Then
                        drpTransactionTypelist.Items.FindByValue("1").Enabled = True 'sendout
                    End If
                    If ReportType = 6 Then
                        'drpTransactionTypelist.Items.FindByValue("57").Enabled = True 'sendout billspay

                    End If
                    drpTransactionTypelist.Items.FindByValue("2").Enabled = True 'claimed
                    If Session("roles") = "KP-CAD" Or Session("roles") = "CAD" Or ((Session("roles") = "KP-PARTNERTELLER" Or Session("roles") = "KP-TELLER") And drppartnerid.Text <> smaccountid) Then
                        If ReportType <> 1 Then
                            drpTransactionTypelist.Items.FindByValue("3").Enabled = True 'unclaimed
                        End If
                    Else
                        drpTransactionTypelist.Items.FindByValue("3").Enabled = False 'unclaimed 
                    End If
                    If drppartnerid.Text = smaccountid And partnername <> Nothing Then
                        drpTransactionTypelist.Items.FindByValue("5").Enabled = False 'cancel sendout
                        drpTransactionTypelist.Items.FindByValue("4").Enabled = False 'rts
                        drpTransactionTypelist.Items.FindByValue("6").Enabled = False 'amendments
                        drpTransactionTypelist.Items.FindByValue("8").Enabled = False 'cancelled payout   
                    Else
                        drpTransactionTypelist.Items.FindByValue("5").Enabled = True 'cancel sendout
                        drpTransactionTypelist.Items.FindByValue("4").Enabled = True 'rts
                        drpTransactionTypelist.Items.FindByValue("6").Enabled = True 'amendments
                    End If
                    If drppartnerid.Text <> smaccountid Then
                        drpTransactionTypelist.Items.FindByValue("8").Enabled = True 'cancelled payout  
                    Else
                        If Session("roles") <> "KP-PARTNERTELLER" And Session("roles") <> "KP-SMHO" Then
                            drpTransactionTypelist.Items.FindByValue("17").Enabled = True 'terminal txn report
                            drpTransactionTypelist.Items.FindByValue("18").Enabled = True 'terminal reading report
                        End If
                    End If
                    If ReportType = 5 Then
                        drpTransactionTypelist.Items.FindByValue("10").Enabled = True 'mlexpress payout
                        drpTransactionTypelist.Items.FindByValue("11").Enabled = True 'express loading
                        If (drpglobe.Text <> "-Select-" And drpglobe.Visible = True) Then
                            drpTransactionTypelist.Items.FindByValue("12").Enabled = False 'transaction history
                        Else
                            drpTransactionTypelist.Items.FindByValue("12").Enabled = True 'transaction history
                        End If
                        If Session("firstname") = "MARLYN" And Session("lastname") = "LARIOSA" Then
                            drpTransactionTypelist.Items.FindByValue("29").Enabled = True 'ml express post audit
                        End If
                    End If
                ElseIf ReportType = 2 Then
                    drpTransactionTypelist.Items.FindByValue("1").Enabled = True 'sendout
                    drpTransactionTypelist.Items.FindByValue("5").Enabled = True 'cancel sendout
                    drpTransactionTypelist.Items.FindByValue("9").Enabled = True 'rfc
                    'If accountID = BatelecID Then
                    'drpTransactionTypelist.Items.FindByValue("81").Enabled = True 'Transaction Report
                    'drpTransactionTypelist.Items.FindByValue("82").Enabled = True 'Abstract Report
                    'End If
                ElseIf ReportType = 7 Or ReportType = 10 Then
                    Dim test As String = Session("roles")
                    If userrole <> "KP-SECCOM" Then
                        If Session("roles") = "KP-HRMDPayroll" Or Session("roles") = "KP-PAYROLL" Then
                            drpTransactionTypelist.Items.FindByValue("35").Enabled = True 'ML Wallet Loading Report
                            drpTransactionTypelist.Items.FindByValue("55").Enabled = True 'ML Wallet Transaction History

                        Else
                            drpTransactionTypelist.Items.FindByValue("35").Enabled = True 'ML Wallet Loading Report
                            drpTransactionTypelist.Items.FindByValue("1").Text = "ML Wallet To Wallet Sendout Report" 'sendout
                            drpTransactionTypelist.Items.FindByValue("2").Text = "ML Wallet To Wallet Payout Report" 'sendout
                            drpTransactionTypelist.Items.FindByValue("36").Enabled = True 'ML Wallet KP Payout
                            drpTransactionTypelist.Items.FindByValue("5").Text = "ML Wallet Cancelled Sendout Report" 'sendout
                            drpTransactionTypelist.Items.FindByValue("8").Text = "ML Wallet Cancelled Payout Report" 'sendout
                            drpTransactionTypelist.Items.FindByValue("6").Text = "ML Wallet Amendment Report" 'sendout
                            drpTransactionTypelist.Items.FindByValue("3").Text = "ML Wallet Unclaimed Transaction Report" 'sendout
                            drpTransactionTypelist.Items.FindByValue("37").Enabled = True 'ML Wallet Cashout Report
                            drpTransactionTypelist.Items.FindByValue("38").Enabled = True 'ML Wallet To Billspay Report
                            drpTransactionTypelist.Items.FindByValue("39").Enabled = True 'ML Wallet Customer Balanced Report
                            drpTransactionTypelist.Items.FindByValue("41").Enabled = True 'ML Wallet Eload Report
                            drpTransactionTypelist.Items.FindByValue("42").Enabled = True 'ML Wallet KP Sendout
                            drpTransactionTypelist.Items.FindByValue("45").Enabled = True 'ML Wallet Claimed cashout
                            drpTransactionTypelist.Items.FindByValue("84").Enabled = True 'ML Wallet loading Adjustment 
                            'drpTransactionTypelist.Items.FindByValue("55").Enabled = True 'ML Wallet Transaction History


                            drpTransactionTypelist.Items.FindByValue("1").Enabled = True 'ML Wallet To Wallet Sendout Report
                            drpTransactionTypelist.Items.FindByValue("2").Enabled = True 'ML Wallet To Wallet Payout Report
                            drpTransactionTypelist.Items.FindByValue("3").Enabled = True 'ML Wallet Unclaimed Transaction Report
                            drpTransactionTypelist.Items.FindByValue("5").Enabled = True 'ML Wallet Cancelled Sendout Report
                            drpTransactionTypelist.Items.FindByValue("6").Enabled = True 'ML Wallet Ammendment Report
                            drpTransactionTypelist.Items.FindByValue("8").Enabled = True 'ML Wallet Cancelled Payout Report
                        End If
                    Else
                        drpTransactionTypelist.Items.FindByValue("43").Enabled = True 'ML Wallet customer list report
                        drpTransactionTypelist.Items.FindByValue("44").Enabled = True 'ML Wallet transaction report
                    End If
                End If


                If drppartnerid.Text = smaccountid And ReportType = 6 Then
                    If Session("roles") = "KP-SMHO" Then
                        drpTransactionTypelist.Items.FindByValue("22").Enabled = True 'SM Summary TRANSACTION Report (Send)
                        drpTransactionTypelist.Items.FindByValue("23").Enabled = True 'SM-ML Summary TRANSACTION Report (Receive)
                    Else
                        If Session("roles") <> "KP-PARTNERTELLER" And Session("roles") <> "KP-MANAGER" And Session("roles") <> "KP-SUPERVISOR" Then
                            drpTransactionTypelist.Items.FindByValue("13").Enabled = True 'profit share to receive payout from branch to sm
                            drpTransactionTypelist.Items.FindByValue("14").Enabled = True 'profit share to send payout from sm to branch
                            drpTransactionTypelist.Items.FindByValue("15").Enabled = True 'profit share to send payout from sm to sm
                        End If
                        If Session("roles") = "KP-CAD" Or Session("roles") = "CAD" Then
                            drpTransactionTypelist.Items.FindByValue("16").Enabled = True 'sales journal  
                        End If
                        If Session("roles") <> "KP-PARTNERTELLER" Then
                            drpTransactionTypelist.Items.FindByValue("20").Enabled = True 'SM Detailed TRANSACTION Report (Send)
                            drpTransactionTypelist.Items.FindByValue("21").Enabled = True 'SM-ML Detailed TRANSACTION Report (Receive)
                            'drpTransactionTypelist.Items.FindByValue("24").Enabled = True 'SM-ML Profit SHARE (Send)
                            'drpTransactionTypelist.Items.FindByValue("25").Enabled = True 'SM-ML Profit SHARE (Receive)
                            'drpTransactionTypelist.Items.FindByValue("26").Enabled = True 'MLKP FROM SM Branches (Send)
                            'drpTransactionTypelist.Items.FindByValue("27").Enabled = True 'MLKP Payout AT SM Branches
                            'drpTransactionTypelist.Items.FindByValue("28").Enabled = True 'POS Monthly Report
                            drpTransactionTypelist.Items.FindByValue("30").Enabled = True 'sm summary report
                        End If
                    End If
                End If
                If ReportType = 8 Then
                    drpTransactionTypelist.Items.FindByValue("40").Enabled = True 'Sales Report Per merchant
                End If
            Else
                If ReportType = 1 Or ReportType = 4 Or ReportType = 3 Or ReportType = 5 Or ReportType = 6 Or ReportType = 9 Or ReportType = 10 Then

                    If (Session("roles") <> "IAD" Or Session("roles") <> "KP-IAD") And ReportType = 10 Then
                        drpTransactionTypelist.Items.FindByValue("35").Enabled = True 'ML Wallet Loading Report
                        drpTransactionTypelist.Items.FindByValue("1").Text = "ML Wallet To Wallet Sendout Report" 'sendout
                        drpTransactionTypelist.Items.FindByValue("2").Text = "ML Wallet To Wallet Payout Report" 'sendout
                        drpTransactionTypelist.Items.FindByValue("36").Enabled = True 'ML Wallet KP Payout
                        drpTransactionTypelist.Items.FindByValue("5").Text = "ML Wallet Cancelled Sendout Report" 'sendout
                        drpTransactionTypelist.Items.FindByValue("8").Text = "ML Wallet Cancelled Payout Report" 'sendout
                        drpTransactionTypelist.Items.FindByValue("6").Text = "ML Wallet Amendment Report" 'sendout
                        drpTransactionTypelist.Items.FindByValue("3").Text = "ML Wallet Unclaimed Transaction Report" 'sendout
                        drpTransactionTypelist.Items.FindByValue("37").Enabled = True 'ML Wallet Cashout Report
                        drpTransactionTypelist.Items.FindByValue("38").Enabled = True 'ML Wallet To Billspay Report
                        drpTransactionTypelist.Items.FindByValue("39").Enabled = True 'ML Wallet Customer Balanced Report
                        drpTransactionTypelist.Items.FindByValue("41").Enabled = True 'ML Wallet Eload Report
                        drpTransactionTypelist.Items.FindByValue("42").Enabled = True 'ML Wallet KP Sendout
                        drpTransactionTypelist.Items.FindByValue("45").Enabled = True 'ML Wallet Claimed cashout
                        drpTransactionTypelist.Items.FindByValue("55").Enabled = True 'ML Wallet Transaction History
                        drpTransactionTypelist.Items.FindByValue("1").Enabled = True 'ML Wallet To Wallet Sendout Report
                        drpTransactionTypelist.Items.FindByValue("2").Enabled = True 'ML Wallet To Wallet Payout Report
                        drpTransactionTypelist.Items.FindByValue("3").Enabled = True 'ML Wallet Unclaimed Transaction Report
                        drpTransactionTypelist.Items.FindByValue("5").Enabled = True 'ML Wallet Cancelled Sendout Report
                        drpTransactionTypelist.Items.FindByValue("6").Enabled = True 'ML Wallet Ammendment Report
                        drpTransactionTypelist.Items.FindByValue("8").Enabled = True 'ML Wallet Cancelled Payout Report
                        drpTransactionTypelist.Items.FindByValue("43").Enabled = True 'ML Wallet customer list report
                        drpTransactionTypelist.Items.FindByValue("44").Enabled = True 'ML Wallet transaction report
                    End If

                    If ReportType <> 10 Then
                        drpTransactionTypelist.Items.FindByValue("2").Enabled = True 'claimed
                        If ReportType <> 3 Then
                            If drppartnerid.Text <> smaccountid Then
                                drpTransactionTypelist.Items.FindByValue("6").Enabled = True 'amendments
                            End If
                        End If
                        drpTransactionTypelist.Items.FindByValue("7").Enabled = True 'payout summary
                        If drppartnerid.Text <> smaccountid Then
                            drpTransactionTypelist.Items.FindByValue("8").Enabled = True 'cancelled payout
                        End If
                    End If
                    If ReportType = 5 Then
                        drpTransactionTypelist.Items.FindByValue("10").Enabled = True 'mlexpress payout
                        drpTransactionTypelist.Items.FindByValue("11").Enabled = True 'express loading
                        drpTransactionTypelist.Items.FindByValue("58").Enabled = True 'ML Express summary report
                    End If
                ElseIf ReportType = 2 Then
                    drpTransactionTypelist.Items.FindByValue("1").Enabled = True 'sendout
                    drpTransactionTypelist.Items.FindByValue("5").Enabled = True 'cancel sendout
                    drpTransactionTypelist.Items.FindByValue("9").Enabled = True 'rfc
                End If
            End If
        End If
        If drppartnerid.Text = skybridge And ReportType = 1 Then
            drpTransactionTypelist.Items.FindByValue("2").Enabled = True 'claimed  
            drpTransactionTypelist.Items.FindByValue("4").Enabled = False 'rts
            drpTransactionTypelist.Items.FindByValue("5").Enabled = False 'Cancel SO 
            drpTransactionTypelist.Items.FindByValue("6").Enabled = False 'Amendments
            drpTransactionTypelist.Items.FindByValue("8").Enabled = True 'cancelled payout
        End If



        If Session("PartnerID") = tpc And Session("UserName") = "CINCOT" And ReportType = 7 Then
            drpTransactionTypelist.Items.FindByValue("35").Enabled = False 'ML Wallet Loading Report
            drpTransactionTypelist.Items.FindByValue("36").Enabled = False 'ML Wallet KP Payout
            drpTransactionTypelist.Items.FindByValue("37").Enabled = False 'ML Wallet Cashout Report
            drpTransactionTypelist.Items.FindByValue("38").Enabled = False 'ML Wallet To Billspay Report
            drpTransactionTypelist.Items.FindByValue("39").Enabled = False 'ML Wallet Customer Balanced Report
            drpTransactionTypelist.Items.FindByValue("41").Enabled = False 'ML Wallet Eload Report
            drpTransactionTypelist.Items.FindByValue("42").Enabled = False 'ML Wallet KP Sendout
            drpTransactionTypelist.Items.FindByValue("45").Enabled = False 'ML Wallet Claimed cashout
            drpTransactionTypelist.Items.FindByValue("1").Enabled = False 'ML Wallet To Wallet Sendout Report
            drpTransactionTypelist.Items.FindByValue("2").Enabled = False 'ML Wallet To Wallet Payout Report
            drpTransactionTypelist.Items.FindByValue("3").Enabled = False 'ML Wallet Unclaimed Transaction Report
            drpTransactionTypelist.Items.FindByValue("5").Enabled = False 'ML Wallet Cancelled Sendout Report
            drpTransactionTypelist.Items.FindByValue("6").Enabled = False 'ML Wallet Ammendment Report
            drpTransactionTypelist.Items.FindByValue("8").Enabled = False 'ML Wallet Cancelled Payout Report
            drpTransactionTypelist.Items.FindByValue("86").Enabled = True 'ML Wallet Smart Promo
        End If

        If (ReportType = 1 Or ReportType = 4 Or ReportType = 6 Or ReportType = 9) And Session("roles") = "KP-CAD" Then
            drpTransactionTypelist.Items.FindByValue("85").Enabled = True 'All Partners Volume
        End If

    End Sub
    Public Sub perioddisabled()
        If drpPeriod.SelectedIndex = 0 Or drpPeriod.SelectedIndex = 1 Then
            lbldate.Visible = True
            txtDate.Visible = True
            If drpPeriod.SelectedIndex = 0 Then
                txtDate.Enabled = False
            Else
                txtDate.Enabled = True
            End If
            drpMonth.Visible = False
            drpMonth.Enabled = False
            drpYear.Visible = False
            drpYear.Enabled = False
            lbldateFrom.Visible = False
            txtdateFrom.Visible = False
            txtdateFrom.Enabled = False
            lbldateto.Visible = False
            txtdateTo.Visible = False
            txtdateTo.Visible = False
            txtdateTo.Enabled = False
        ElseIf drpPeriod.SelectedIndex = 2 Then
            lbldate.Visible = True
            txtDate.Visible = False
            txtDate.Enabled = False
            drpMonth.Visible = True
            drpMonth.Enabled = True
            drpYear.Visible = True
            drpYear.Enabled = True
            lbldateFrom.Visible = False
            txtdateFrom.Visible = False
            txtdateFrom.Enabled = False
            lbldateto.Visible = False
            txtdateTo.Visible = False
            txtdateTo.Visible = False
            txtdateTo.Enabled = False
        ElseIf drpPeriod.SelectedIndex = 3 Then
            lbldate.Visible = False
            txtDate.Visible = False
            txtDate.Enabled = False
            drpMonth.Visible = False
            drpMonth.Enabled = False
            drpYear.Visible = False
            drpYear.Enabled = False
            lbldateFrom.Visible = True
            txtdateFrom.Visible = True
            txtdateFrom.Enabled = True
            lbldateto.Visible = True
            txtdateTo.Visible = True
            txtdateTo.Visible = True
            txtdateTo.Enabled = True
        End If

        If ReportType = "7" And drpTransactionTypelist.SelectedValue = "62" Or drpTransactionTypelist.SelectedValue = "63" Then
            drpPeriod.SelectedIndex = 2
            drpPeriod.Enabled = False
            lbldate.Visible = False
            txtDate.Visible = False
            txtDate.Enabled = False
            drpMonth.Visible = False
            drpMonth.Enabled = False
            drpYear.Visible = False
            drpYear.Enabled = False
            lbldateFrom.Visible = False
            txtdateFrom.Visible = False
            txtdateFrom.Enabled = False
            lbldateto.Visible = False
            txtdateTo.Visible = False
            txtdateTo.Visible = False
            txtdateTo.Enabled = False
        End If
        If ReportType = "11" Then
            drpPeriod.SelectedIndex = 1
            drpPeriod.Enabled = False
            lbldate.Visible = False
            txtDate.Visible = True
            txtDate.Enabled = True
            drpMonth.Visible = False
            drpMonth.Enabled = False
            drpYear.Visible = False
            drpYear.Enabled = False
            lbldateFrom.Visible = False
            txtdateFrom.Visible = False
            txtdateFrom.Enabled = False
            lbldateto.Visible = False
            txtdateTo.Visible = False
            txtdateTo.Visible = False
            txtdateTo.Enabled = False
        End If
        If drpTransactionTypelist.Text = 70 Then
            drpPeriod.SelectedIndex = 1
            txtDate.Enabled = True


            drpMonth.Visible = False
            drpMonth.Enabled = False
            drpYear.Visible = False
            drpYear.Enabled = False
            lbldateFrom.Visible = False
            txtdateFrom.Visible = False
            txtdateFrom.Enabled = False
            lbldateto.Visible = False
            txtdateTo.Visible = False
            txtdateTo.Visible = False
            txtdateTo.Enabled = False
        End If
        If drpTransactionTypelist.Text = 71 Or drpTransactionTypelist.Text = 73 Then
            drpPeriod.SelectedIndex = 3
            drpPeriod.Enabled = False
            lbldate.Visible = False
            txtDate.Visible = False
            txtDate.Enabled = False
            drpMonth.Visible = False
            drpMonth.Enabled = False
            drpYear.Visible = False
            drpYear.Enabled = False
            lbldateFrom.Visible = True
            txtdateFrom.Visible = True
            txtdateFrom.Enabled = True
            lbldateto.Visible = True
            txtdateTo.Visible = True
            txtdateTo.Visible = True
            txtdateTo.Enabled = True

        End If
        If drpTransactionTypelist.Text = 72 Or drpTransactionTypelist.Text = 74 Then
            drpPeriod.SelectedIndex = 2
            drpPeriod.Enabled = False
            lbldate.Visible = True
            txtDate.Visible = False
            txtDate.Enabled = False
            drpMonth.Visible = True
            drpMonth.Enabled = True
            drpYear.Visible = True
            drpYear.Enabled = True
            lbldateFrom.Visible = False
            txtdateFrom.Visible = False
            txtdateFrom.Enabled = False
            lbldateto.Visible = False
            txtdateTo.Visible = False
            txtdateTo.Visible = False
            txtdateTo.Enabled = False
        End If

        If ReportType = "2" And partnername <> Nothing Then
            drpRegion.Visible = False
            drpArea.Visible = False
            drpBranchName.Visible = False
            drpRegion.Text = "-Select-"
            drpArea.Text = "-Select-"
            drpArea.Text = "-Select-"
            If partnername = "GLOBE INNOVE" Then
                drpglobe.Visible = True
                drpglobe.Enabled = True
                lblspecify.Visible = True
            Else
                drpglobe.Enabled = False
                drpglobe.Visible = False
                lblspecify.Visible = False
            End If
        End If

        If drpTransactionTypelist.SelectedIndex = 50 Then
            txtDate.Text = Convert.ToDateTime(DateTime.Now.Date).AddDays(-1)
        Else
            txtDate.Text = DateTime.Now.Date
        End If
        drpMonth.Text = DateTime.Now.Month
        drpYear.Text = DateTime.Now.Year
        txtdateFrom.Text = DateTime.Now.Date
        txtdateTo.Text = DateTime.Now.Date
    End Sub
    Public Sub SelectReports()
        If drpPartnerAccountlist.Text <> "-Select-" Then
            drpTransactionTypelist.Enabled = True
            TransType()
        ElseIf drpPartnerAccountlist.Text = "-Select-" And ReportType = 5 Then
            TransType()
        End If
        drpPeriod.Items.FindByValue("0").Enabled = True
        drpPeriod.Items.FindByValue("1").Enabled = True
        drpPeriod.Items.FindByValue("2").Enabled = True
        drpPeriod.Items.FindByValue("3").Enabled = True
        drpPeriod.SelectedIndex = 1
        drpPeriod.Enabled = True
        If drpTransactionTypelist.SelectedIndex <> 0 Then
            If Session("roles") = "CAD-DIVMAN" Then
                If drpTransactionTypelist.SelectedIndex = 33 Or drpTransactionTypelist.SelectedIndex = 31 Or drpTransactionTypelist.SelectedIndex = 51 Or drpTransactionTypelist.SelectedIndex = 54 Then
                    rb.SelectedIndex = -1
                    drpPeriod.Items.FindByValue("0").Enabled = False
                    drpPeriod.Items.FindByValue("1").Enabled = False
                    drpPeriod.Items.FindByValue("2").Enabled = False
                    drpPeriod.Items.FindByValue("3").Enabled = True
                    drpPeriod.SelectedIndex = 3
                ElseIf drpTransactionTypelist.SelectedIndex = 32 Or drpTransactionTypelist.SelectedIndex = 50 Then
                    rb.SelectedIndex = 1
                    drpPeriod.Items.FindByValue("0").Enabled = False
                    drpPeriod.Items.FindByValue("1").Enabled = True
                    drpPeriod.Items.FindByValue("2").Enabled = False
                    drpPeriod.Items.FindByValue("3").Enabled = False
                    drpPeriod.SelectedIndex = 1
                ElseIf drpTransactionTypelist.SelectedIndex = 34 Then
                    drpPeriod.Items.FindByValue("0").Enabled = False
                    drpPeriod.Items.FindByValue("1").Enabled = False
                    drpPeriod.Items.FindByValue("2").Enabled = False
                    drpPeriod.Items.FindByValue("3").Enabled = True
                    drpPeriod.SelectedIndex = 3
                Else
                    drpPeriod.Items.FindByValue("0").Enabled = False
                    drpPeriod.Items.FindByValue("1").Enabled = False
                    drpPeriod.Items.FindByValue("2").Enabled = True
                    drpPeriod.Items.FindByValue("3").Enabled = False
                    drpPeriod.SelectedIndex = 2
                End If
            End If
            If drpTransactionTypelist.SelectedIndex = 32 Then
                txtDate.Enabled = False
            Else
                drpPeriod.Enabled = True
                perioddisabled()
            End If
            If drpTransactionTypelist.SelectedIndex = 70 Then
                drpPeriod.Items.FindByValue("0").Enabled = False
                drpPeriod.Items.FindByValue("1").Enabled = True
                drpPeriod.Items.FindByValue("2").Enabled = False
                drpPeriod.Items.FindByValue("3").Enabled = False
            End If
            If drpTransactionTypelist.SelectedIndex = 71 And drpTransactionTypelist.SelectedIndex = 73 Then
                drpPeriod.Items.FindByValue("0").Enabled = False
                drpPeriod.Items.FindByValue("1").Enabled = False
                drpPeriod.Items.FindByValue("2").Enabled = False
                drpPeriod.Items.FindByValue("3").Enabled = True

                perioddisabled()

            End If
            If drpTransactionTypelist.SelectedIndex = 72 And drpTransactionTypelist.SelectedIndex = 74 Then
                drpPeriod.Items.FindByValue("0").Enabled = False
                drpPeriod.Items.FindByValue("1").Enabled = False
                drpPeriod.Items.FindByValue("2").Enabled = True
                drpPeriod.Items.FindByValue("3").Enabled = False
                perioddisabled()
            End If

            If ReportType = 2 Then
                drpPeriod.Items.FindByValue("0").Enabled = False
                drpPeriod.Items.FindByValue("1").Enabled = False
                drpPeriod.Items.FindByValue("2").Enabled = False
                drpPeriod.Items.FindByValue("3").Enabled = True
                drpPeriod.SelectedIndex = 3
                drpPeriod.Enabled = True
                perioddisabled()
            Else
                If drpTransactionTypelist.SelectedIndex = 3 And drpTransactionTypelist.Items.FindByValue("3").Text = "ML Wallet Unclaimed Transaction Report" Then
                    drpPeriod.Items.FindByValue("0").Enabled = False
                    drpPeriod.Items.FindByValue("1").Enabled = True
                    drpPeriod.Items.FindByValue("2").Enabled = False
                    drpPeriod.SelectedIndex = 1
                    drpPeriod.Items.FindByValue("3").Enabled = False
                    drpPeriod.Enabled = True
                    perioddisabled()
                Else
                    If (drpTransactionTypelist.SelectedValue = "19" Or drpTransactionTypelist.SelectedValue = "20" Or drpTransactionTypelist.SelectedValue = "21" Or drpTransactionTypelist.SelectedValue = "22" Or drpTransactionTypelist.SelectedValue = "23" Or drpTransactionTypelist.SelectedValue = "26" Or drpTransactionTypelist.SelectedValue = "27" Or drpTransactionTypelist.SelectedValue = "30") Then
                        If drpTransactionTypelist.SelectedValue = "26" Or drpTransactionTypelist.SelectedValue = "27" Then
                            drpPeriod.Items.FindByValue("0").Enabled = True
                            drpPeriod.Items.FindByValue("1").Enabled = True
                            drpPeriod.Items.FindByValue("2").Enabled = False
                            drpPeriod.Items.FindByValue("3").Enabled = True
                            drpPeriod.SelectedIndex = 0
                            drpPeriod.Enabled = True
                        Else
                            drpPeriod.Items.FindByValue("0").Enabled = False
                            drpPeriod.Items.FindByValue("1").Enabled = True
                            drpPeriod.Items.FindByValue("2").Enabled = False
                            drpPeriod.Items.FindByValue("3").Enabled = False
                            drpPeriod.SelectedIndex = 1
                            drpPeriod.Enabled = True
                        End If
                        perioddisabled()
                    ElseIf (drpTransactionTypelist.SelectedValue = "43") Then
                        drpPeriod.Items.FindByValue("0").Enabled = False
                        drpPeriod.Items.FindByValue("1").Enabled = True
                        drpPeriod.Items.FindByValue("2").Enabled = False
                        drpPeriod.Items.FindByValue("3").Enabled = False
                        drpPeriod.SelectedIndex = 1
                        drpPeriod.Enabled = True
                    ElseIf (drpTransactionTypelist.SelectedValue = "17" Or drpTransactionTypelist.SelectedValue = "18") Then
                        drpPeriod.Items.FindByValue("0").Enabled = False
                        drpPeriod.Items.FindByValue("1").Enabled = False
                        drpPeriod.Items.FindByValue("2").Enabled = False
                        drpPeriod.Items.FindByValue("3").Enabled = True
                        drpPeriod.SelectedIndex = 3
                        drpPeriod.Enabled = True
                        perioddisabled()
                    ElseIf drppartnerid.Text = smaccountid And partnername <> Nothing Then
                        If (drpTransactionTypelist.SelectedValue = "1" Or drpTransactionTypelist.SelectedValue = "2" Or drpTransactionTypelist.SelectedValue = "30") Then
                            drpPeriod.Items.FindByValue("0").Enabled = False
                            drpPeriod.Items.FindByValue("1").Enabled = True
                            drpPeriod.Items.FindByValue("2").Enabled = False
                            drpPeriod.Items.FindByValue("3").Enabled = False
                            drpPeriod.SelectedIndex = 1
                            drpPeriod.Enabled = True
                        Else
                            drpPeriod.Items.FindByValue("0").Enabled = False
                            drpPeriod.Items.FindByValue("1").Enabled = False
                            drpPeriod.Items.FindByValue("2").Enabled = True
                            drpPeriod.Items.FindByValue("3").Enabled = False
                            drpPeriod.SelectedIndex = 2
                            drpPeriod.Enabled = True
                        End If
                        perioddisabled()
                    Else
                        If (drpTransactionTypelist.SelectedValue = "13" Or drpTransactionTypelist.SelectedValue = "14" Or drpTransactionTypelist.SelectedValue = "15" Or drpTransactionTypelist.SelectedValue = "24" Or drpTransactionTypelist.SelectedValue = "25" Or drpTransactionTypelist.SelectedValue = "28") Then
                            drpPeriod.Items.FindByValue("0").Enabled = False
                            drpPeriod.Items.FindByValue("1").Enabled = False
                            drpPeriod.Items.FindByValue("2").Enabled = True
                            drpPeriod.Items.FindByValue("3").Enabled = False
                            drpPeriod.SelectedIndex = 2
                            drpPeriod.Enabled = True
                            perioddisabled()
                        End If
                    End If
                End If
            End If
        End If
        SrchBox.Text = ""
    End Sub
    Public Sub GetMessage(ByVal msg As String)
        UpdatePanel20.Update()
        Label9.Visible = False
        Label8.Visible = False
        lblMessage.Text = msg
        UpdatePanel6_ModalPopupExtender.Show()
        IsError = True
    End Sub
    ' Public Sub GetWalletName()
    ' drpLeterStart.Items.Clear()
    ' drpLeterStart.Items.Add("A-E")
    ' drpLeterStart.Items.Add("F-J")
    ' drpLeterStart.Items.Add("K-O")
    'drpLeterStart.Items.Add("P-T")
    ' drpLeterStart.Items.Add("U-Z")
    'End Sub
    'Public Sub GetWalletSName()
    '    drpLeterStart.Items.Clear()
    '    drpLeterStart.Items.Add("A")
    '    drpLeterStart.Items.Add("B")
    '    drpLeterStart.Items.Add("C")
    '    drpLeterStart.Items.Add("D")
    '    drpLeterStart.Items.Add("E")
    '    drpLeterStart.Items.Add("F")
    '    drpLeterStart.Items.Add("G")
    '    drpLeterStart.Items.Add("H")
    '    drpLeterStart.Items.Add("I")
    '    drpLeterStart.Items.Add("J")
    '    drpLeterStart.Items.Add("K")
    '    drpLeterStart.Items.Add("L")
    '    drpLeterStart.Items.Add("M")
    '    drpLeterStart.Items.Add("N")
    '    drpLeterStart.Items.Add("O")
    '    drpLeterStart.Items.Add("P")
    '    drpLeterStart.Items.Add("Q")
    '    drpLeterStart.Items.Add("R")
    '    drpLeterStart.Items.Add("S")
    '    drpLeterStart.Items.Add("T")
    '    drpLeterStart.Items.Add("U")
    '    drpLeterStart.Items.Add("V")
    '    drpLeterStart.Items.Add("W")
    '    drpLeterStart.Items.Add("X")
    '    drpLeterStart.Items.Add("Y")
    '    drpLeterStart.Items.Add("Z")
    'End Sub
    Public Sub GetWalletAccount()
        Try
            drpPartnerAccountlist.Items.Clear()
            drppartnerid.Items.Clear()
            drpaccountno.Items.Clear()
            drpPartnerAccountlist.Items.Add(New ListItem("-Select-"))
            drppartnerid.Items.Add(New ListItem("-Select-"))
            drpaccountno.Items.Add(New ListItem("-Select-"))

            If SrchBox.Enabled = True And drpTransactionTypelist.Text = 55 Then
                'If Session("roles") = "KP-HRMDPayroll" Then
                '    'strquery = String.Format("SELECT walletno,username,custid,TRIM(CONCAT(firstname,' ',middlename,' ',lastname,' / ',username)) AS fullname " +
                '    '" FROM `kpmobile`.`mobilelogin` WHERE isactive=1 AND TRIM(CONCAT(firstname,' ',middlename,' ',lastname)) IS NOT NULL " +
                '    '" AND firstname REGEXP '^[{0}].*$' and custid  IN ('279762','12060001340034','1321207','14060009791505','12040000538532','12040000389741','12060000786863' " +
                '    '" ,'13030004036950','12080002215148','12100003065315','1408001175568','14040007563128','920345','1810000001104N1','1810000001103N1')  GROUP BY username ORDER BY fullname ASC;", drpLeterStart.Text)
                '    'strquery = String.Format("CALL `KPWalletReportsSP`.`GetWalletAccount1`('{0}')", drpLeterStart.Text)
                '    strquery = String.Format("CALL GetWalletAccount1('{0}')", drpLeterStart.Text)
                'Else
                '    '  strquery = String.Format("SELECT walletno,username,custid,TRIM(CONCAT(firstname,' ',middlename,' ',lastname,' / ',username)) AS fullname " +
                '    '" FROM `kpmobile`.`mobilelogin` WHERE isactive=1 AND TRIM(CONCAT(firstname,' ',middlename,' ',lastname)) IS NOT NULL " +
                '    '" AND firstname REGEXP '^[{0}].*$' and custid not IN ('279762','12060001340034','1321207','14060009791505','12040000538532','12040000389741','12060000786863' " +
                '    '" ,'13030004036950','12080002215148','12100003065315','1408001175568','14040007563128','920345','1810000001104N1','1810000001103N1')  GROUP BY username ORDER BY fullname ASC;", drpLeterStart.Text)
                '    'strquery = String.Format("CALL `KPWalletReportsSP`.`GetWalletAccount2`('{0}')", drpLeterStart.Text)
                '    strquery = String.Format("CALL GetWalletAccount2('{0}')", drpLeterStart.Text)
                'End If

            Else
                strquery = "CALL `kpmobile`.`GetWalletAccount3`('{0}');"
                'strquery = "SELECT walletno,username,custid,TRIM(CONCAT(firstname,' ',middlename,' ',lastname,' / ',username)) AS fullname FROM `kpmobile`.`mobilelogin` WHERE isactive=1 AND TRIM(CONCAT(firstname,' ',middlename,' ',lastname)) IS NOT NULL GROUP BY username ORDER BY fullname ASC;"
            End If

            If ReportType = 10 Then
                Con.OpenCon("KPMLWalletEmp")
            Else
                Con.OpenCon("KPMLWallet")
            End If
            dtmerger.Clear()
            dtable.Clear()
            cmd = New MySqlCommand(strquery, Con.GetCon())
            dr = cmd.ExecuteReader
            If dr.HasRows Then
                dtable.Load(dr)
                dtmerger.Merge(dtable)
            End If
            If dtmerger.Rows.Count <> 0 Then
                Dim view As DataView = New DataView(dtmerger)
                view.Sort = "fullname asc"
                dtmerger = view.ToTable("fullname")
            End If
            If dtmerger.Rows.Count <> 0 Then
                For Each row As DataRow In dtmerger.Rows
                    drpPartnerAccountlist.Items.Add(UCase(Trim(row(3).ToString)))
                    If drpTransactionTypelist.Text = "55" Then
                        drppartnerid.Items.Add(UCase(Trim(row(0).ToString)))
                    Else
                        drppartnerid.Items.Add(UCase(Trim(row(1).ToString)))
                    End If
                    drppartnerid.SelectedIndex = drpPartnerAccountlist.SelectedIndex
                Next
            Else
                'Response.Redirect("Corpmenu.aspx")
                GetMessage("No wallet user found")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " GetWalletAccount")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    Public Sub getBankname()
        Try
            drpPartnerAccountlist.Items.Clear()
            drppartnerid.Items.Clear()
            drpaccountno.Items.Clear()
            drpPartnerAccountlist.Items.Add(New ListItem("-Select-"))
            drppartnerid.Items.Add(New ListItem("-Select-"))
            drpaccountno.Items.Add(New ListItem("-Select-"))

            If drpTransactionTypelist.Text = 70 Then
                Label1.Text = "Bank Name :"
                strquery = String.Format("call kpadminpartners.HOcorporate_Settlement('{0}','{1}')", accountID, username)
            ElseIf drpTransactionTypelist.Text = 71 Or drpTransactionTypelist.Text = 73 Then
                strquery = String.Format("call kpadminpartners.HOcorporate_weekly('{0}','{1}')", accountID, username)
            Else
                strquery = String.Format("call kpadminpartners.HOcorporate_monthly('{0}','{1}')", accountID, username)
            End If

            Con.OpenCon("KPBillsPayment")

            dtmerger.Clear()
            dtable.Clear()
            cmd = New MySqlCommand(strquery, Con.GetCon())
            dr = cmd.ExecuteReader
            If dr.HasRows Then
                dtable.Load(dr)
                dtmerger.Merge(dtable)
            End If
            If dtmerger.Rows.Count <> 0 And ReportType <> 12 Then
                Dim view As DataView = New DataView(dtmerger)
                view.Sort = "fullname asc"
                dtmerger = view.ToTable("fullname")
            End If
            If dtmerger.Rows.Count <> 0 Then
                For Each row As DataRow In dtmerger.Rows
                    If ReportType = 5 Then
                        drpPartnerAccountlist.Items.Add(String.Format("{0} / {1}", UCase(Trim(row(0).ToString)), UCase(Trim(row(1).ToString))))
                        drpaccountno.Items.Add(UCase(Trim(row(2).ToString)))
                    Else
                        drpPartnerAccountlist.Items.Add(UCase(Trim(row(0).ToString)))
                    End If
                    drppartnerid.Items.Add(UCase(Trim(row(1).ToString)))
                Next
                drppartnerid.SelectedIndex = drpPartnerAccountlist.SelectedIndex
            Else
                'Response.Redirect("Corpmenu.aspx")
                GetMessage("Bank Name not found")
            End If
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " getBankname")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub

    'Get Express Sub Agents
    Public Sub GetExpressSubAgents()
        If (ReportType = 5) Then
            Try
                getconnections()
                Using Con.GetCon()
                    strquery = String.Format("call kpOFW.HOcorporate_MLExpressSubAgents('{0}')", drpaccountno.Text)
                    cmd = New MySqlCommand(strquery, Con.GetCon())
                    If cmd.Connection.State = ConnectionState.Closed Then
                        Response.Write(String.Format("<script language='javascript'>window.alert('Connecting to {0}  Server! Please Wait.');window.location=CorpMenu.aspx?RptType= {1}';</script>", errorcon, ReportType))
                    Else
                        cmd.CommandTimeout = 0
                        dr = cmd.ExecuteReader
                        If dr.HasRows Then
                            lblspecify.Text = "Specify Sub Account :"
                            drpglobe.Items.Add(New ListItem("-Select-"))
                            drpsubpartnerid.Items.Add(New ListItem("-Select-"))
                            While dr.Read
                                drpglobe.Items.Add(String.Format("{0} / {1}", UCase(Trim(dr(0).ToString)), UCase(Trim(dr(1).ToString))))
                                drpsubpartnerid.Items.Add(UCase(Trim(dr(1).ToString)))
                            End While
                            hassub = True
                        Else
                            hassub = False
                        End If
                        dr.Close()
                    End If
                End Using
            Catch ex As Exception
                kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " GetExpressSubAgents")
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End Try
        End If
    End Sub

    Protected Sub drpPartnerAccountlist_Init(ByVal sender As Object, ByVal e As EventArgs) Handles drpPartnerAccountlist.Init

    End Sub

    Protected Sub drpPartnerAccountlist_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles drpPartnerAccountlist.SelectedIndexChanged
        drppartnerid.SelectedIndex = drpPartnerAccountlist.SelectedIndex
        Session("bankname") = drpPartnerAccountlist.SelectedItem.Value.ToString
        drpPartnerAccountlist.SelectedValue = drpPartnerAccountlist.SelectedItem.Value.ToString
        If ReportType = 5 Then
            drpaccountno.SelectedIndex = drppartnerid.SelectedIndex
        End If

        drpglobe.Items.Clear()
        drpsubpartnerid.Items.Clear()

        'for Sub Biller
        drpbiller.Items.Clear()
        drpbiller2.Items.Clear()
        lblbiller.Visible = False
        drpbiller.Enabled = False
        drpbiller.Visible = False

        If drpPartnerAccountlist.Text = "-Select-" Then
            partnerID = Nothing
        End If

        PartnersWithSub("", username)
        GetExpressSubAgents()
        If (drpPartnerAccountlist.Text = "GLOBE INNOVE" And Session("roles") <> "KP-IAD" And Session("roles") <> "KP-RAM") Or (hassub = True And ReportType = 5) Then
            If ReportType = 2 Or ReportType = 12 Then
                drpglobe.Items.Add(New ListItem("-Select-"))
                drpglobe.Items.Add(New ListItem("GLOBE"))
                drpglobe.Items.Add(New ListItem("INNOVE"))
            End If
            drpglobe.Visible = True
            drpglobe.Enabled = True
            lblspecify.Visible = True
        ElseIf (drpPartnerAccountlist.Text = "UNITELLER" And Session("roles") <> "KP-IAD" And Session("roles") <> "KP-RAM") Or (hassub = True And ReportType = 5) Then
            If ReportType = 1 Then
                drpglobe.Items.Add(New ListItem("-Select-"))
                drpglobe.Items.Add(New ListItem("MLREMIT"))
                drpglobe.Items.Add(New ListItem("UNITELLER"))
            End If
            drpglobe.Visible = True
            drpglobe.Enabled = True
            lblspecify.Visible = True
        ElseIf ReportType <> 6 Then
            drpglobe.Enabled = False
            drpglobe.Visible = False
            lblspecify.Visible = False
        End If
        'for Sub Biller
        If drppartnerid.Text = bayadcenterid Then
            lblbiller.Visible = True
            drpbiller.Visible = True
            drpbiller.Enabled = True
            getSubBiller()
        End If
        If Session("roles") <> "IAD" And Session("roles") <> "KP-IAD" And Session("roles") <> "KP-RAM" And Session("roles") <> "RAM" Then
            If ReportType = 5 Then
                drpTransactionTypelist.Enabled = True
            ElseIf (drpTransactionTypelist.SelectedIndex <> 52 And drpTransactionTypelist.SelectedIndex <> 53 And drpTransactionTypelist.SelectedIndex <> 55) Then
                drpTransactionTypelist.Enabled = False
            End If
            If Session("roles") <> Nothing And (drpTransactionTypelist.SelectedIndex <> 52 And drpTransactionTypelist.SelectedIndex <> 53 And drpTransactionTypelist.SelectedIndex <> 55) Then
                'drpTransactionTypelist.SelectedIndex = 0
                If ReportType <> 12 Then
                    drpTransactionTypelist.SelectedIndex = 0
                End If
            End If
            drpPeriod.Enabled = False
            drpPeriod.SelectedIndex = 0
            perioddisabled()
            SelectReports()
        Else
            'If drppartnerid.Text = smaccountid And ReportType = 6 Then
            '    drpRegion.Enabled = False
            '    drpRegion.SelectedIndex = 0
            '    drpArea.Enabled = False
            '    drpArea.SelectedIndex = 0
            '    drpBranchName.Enabled = False
            '    drpBranchName.SelectedIndex = 0
            'Else
            '    drpRegion.Enabled = True
            '    drpArea.Enabled = True
            '    drpBranchName.Enabled = True
            'End If

            drpRegion.Enabled = True
            drpArea.Enabled = True
            drpBranchName.Enabled = True
        End If


        TransType()
    End Sub

    Protected Sub drpTransactionTypelist_Load(ByVal sender As Object, ByVal e As EventArgs) Handles drpTransactionTypelist.Load

    End Sub
    Protected Sub drpTransactionTypelist_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles drpTransactionTypelist.SelectedIndexChanged
        lbldepartment.Visible = False
        drpdepartment.Visible = False
        drpdepartment.Enabled = False
        lblterminal.Visible = False
        drpterminal.Visible = False
        drpterminal.Enabled = False
        'drpLeterStart.Enabled = False
        SrchBox.Enabled = False



        If ReportType = 12 Then
            If (drpTransactionTypelist.SelectedIndex = 71 Or drpTransactionTypelist.SelectedIndex = 72) Then
                TextBox1.Visible = True
                TextBox1.Enabled = True
                lblpo.Visible = True
                lblpo.Enabled = True
                'rb.Enabled = False

            Else
                TextBox1.Visible = False
                TextBox1.Enabled = False
                lblpo.Visible = False
                lblpo.Enabled = False
            End If
        End If


        If ReportType = 12 Then
            If drpTransactionTypelist.SelectedIndex = 70 Then
                drpPartnerAccountlist.Enabled = True
                Label1.Text = "Bank Name :"
                getBankname()
            Else
                getBankname()
            End If
        End If

        drpPartnerAccountlist.Enabled = True


        If ReportType = 11 Then 'BatchUpload
            If drpTransactionTypelist.Text = 65 Then
                drpPartnerAccountlist.Enabled = False
            End If
        End If

        If ReportType = 13 Then 'HOBatchUpload
            If drpTransactionTypelist.Text = 80 Then
                drpPartnerAccountlist.Enabled = False
                If drpPeriod.SelectedIndex = "1" Then
                    txtDate.Enabled = True
                Else
                    txtDate.Enabled = False
                End If
            End If
        End If


        If ReportType = 7 Or ReportType = 10 Then
            If drpTransactionTypelist.Text = 52 Or drpTransactionTypelist.Text = 53 Then
                drpPartnerAccountlist.Visible = False
                drpPartnerAccountlist.SelectedIndex = 0
                SrchBox.Enabled = True
                SrchBox.Visible = True
                Label1.Visible = False
                Label11.Visible = True
                SrchBox.Text = ""
            ElseIf drpTransactionTypelist.Text = 55 Then
                drpPartnerAccountlist.Visible = False
                drpPartnerAccountlist.SelectedIndex = 0
                SrchBox.Enabled = True
                SrchBox.Visible = True
                Label1.Visible = False
                SrchBox.Text = ""
                'drpLeterStart.Enabled = True
                'drpLeterStart.SelectedIndex = 0
                'GetWalletSName()
                'GetWalletAccount()
            ElseIf drpTransactionTypelist.Text = 78 Or drpTransactionTypelist.Text = 79 Then
                drpPartnerAccountlist.Enabled = False
                drpPartnerAccountlist.SelectedIndex = 0
                'drpLeterStart.Enabled = True
                'drpLeterStart.SelectedIndex = 0
                'GetWalletSName()
            ElseIf Session("PartnerID") = tpc And Session("UserName") = "CINCOT" Then
                drpPartnerAccountlist.Enabled = False
            Else
                drpPartnerAccountlist.SelectedIndex = 0
                drpPartnerAccountlist.Enabled = False
            End If
        End If


        If drpTransactionTypelist.Text = 0 Then
            drpPeriod.Text = 0
        ElseIf drpTransactionTypelist.Text = 11 Then
            'drpPartnerAccountlist.SelectedIndex = 0
        End If
        If drpTransactionTypelist.Text = 13 Or drpTransactionTypelist.Text = 14 Or drpTransactionTypelist.Text = 15 Or drpTransactionTypelist.Text = 22 Or drpTransactionTypelist.Text = 23 Or drpTransactionTypelist.Text = 24 Or drpTransactionTypelist.Text = 25 Or drpTransactionTypelist.Text = 26 Or drpTransactionTypelist.Text = 27 Or drpTransactionTypelist.Text = 28 Then
            drpglobe.SelectedIndex = 0
            drpglobe.Enabled = False
        Else
            If drpTransactionTypelist.Text = 18 Then
                getdepartment()
                getterminal()
            End If
            drpglobe.Enabled = True
        End If
        If (drpTransactionTypelist.Text = 16 Or drpTransactionTypelist.Text = 17 Or drpTransactionTypelist.Text = 18 Or drpTransactionTypelist.Text = 19) And ReportType = 6 Then
            If drpTransactionTypelist.Text = 16 Then
                drpPeriod.SelectedIndex = 0
                drpPeriod.Items.FindByValue("3").Enabled = False
            Else
                If drpTransactionTypelist.Text = 18 Then
                    lbldepartment.Visible = True
                    drpdepartment.Visible = True
                    drpdepartment.Enabled = True
                    lblterminal.Visible = True
                    drpterminal.Visible = True
                    drpterminal.Enabled = True
                End If
                drpPeriod.SelectedIndex = 3
                drpPeriod.Items.FindByValue("3").Enabled = True
            End If

            If (smaccountid = Session("mainaccountid") And (Session("roles") = "KP-PARTNERTELLER" Or Session("roles") = "KP-SUPERVISOR" Or Session("roles") = "KP-MANAGER") And ReportType = 6) Then
                rb.SelectedIndex = 1
                rb.Enabled = False
            End If
        Else
            If drpTransactionTypelist.Text = 30 Then
                drpPeriod.Items.FindByValue("1").Enabled = True
            Else
                drpPeriod.Items.FindByValue("3").Enabled = True
            End If
            rb.SelectedIndex = -1
        End If
        If (ReportType = 5 And (drpTransactionTypelist.SelectedIndex = 48 Or drpTransactionTypelist.SelectedIndex = 49)) Or (ReportType = 7 And (drpTransactionTypelist.SelectedIndex = 46 Or drpTransactionTypelist.SelectedIndex = 47)) Then
            rb.SelectedIndex = 1
            rb.Enabled = False
        End If
        If Session("roles") <> "IAD" And Session("roles") <> "KP-IAD" And Session("roles") <> "KP-RAM" And Session("roles") <> "RAM" Then
            drpPeriod.Enabled = False
        Else
            If drpTransactionTypelist.Text = 0 Then
                drpPeriod.Enabled = False
            Else
                drpPeriod.Enabled = True
            End If
        End If
        perioddisabled()
        SelectReports()
        If drpTransactionTypelist.Text = 40 Then
            drpPeriod.Items.FindByValue("3").Enabled = False
        End If
        If drpTransactionTypelist.Text = 44 Then

            drpPeriod.Items.FindByValue("1").Enabled = False

            drpPeriod.Items.FindByValue("3").Enabled = False
            txtDate.Enabled = False

        End If
        If drpTransactionTypelist.Text = 78 Or drpTransactionTypelist.Text = 79 Then
            drpPeriod.Items.FindByValue("1").Enabled = True
            drpPeriod.Items.FindByValue("2").Enabled = False
            drpPeriod.Items.FindByValue("3").Enabled = False
        End If
        If drpTransactionTypelist.Text = 35 Then
            drpPeriod.Items.FindByValue("1").Enabled = True
            drpPeriod.Items.FindByValue("2").Enabled = False
            drpPeriod.Items.FindByValue("3").Enabled = False
        End If

        If drpTransactionTypelist.Text = 41 Then
            drpPeriod.Items.FindByValue("1").Enabled = True
            drpPeriod.Items.FindByValue("2").Enabled = False
            drpPeriod.Items.FindByValue("3").Enabled = False
        End If
        'If (accountID <> smaccountid And Session("roles") <> "KP-PARTNERTELLER" And Session("roles") <> "KP-SUPERVISOR" And Session("roles") <> "KP-MANAGER" And Session("roles") <> "KP-SMHO") Then
        '    'GUIDANCE FROM LAW==============================================================
        '    UpdatePanel20.Update()
        '    Label9.Visible = True
        '    Label8.Visible = True
        '    lblMessage.Text = "These reports are not final and is subject to "
        '    Label9.Text = "further adjustment and Reconciliation."
        '    Label8.Text = "For Your Proper Guidance."
        '    UpdatePanel6_ModalPopupExtender.Show()
        '    '===============================================================================
        'End If
        If drpTransactionTypelist.SelectedIndex = 58 Then
            drpPartnerAccountlist.SelectedIndex = 0
            drpPartnerAccountlist.Enabled = False

        End If



        If ReportType = 7 And drpTransactionTypelist.SelectedIndex = 84 Then
            drpPeriod.Items.FindByValue("1").Enabled = True
            drpPeriod.Items.FindByValue("2").Enabled = True
            drpPeriod.Items.FindByValue("3").Enabled = True
        End If

        If drpTransactionTypelist.SelectedIndex = 85 Then
            drpPeriod.Items.FindByValue("3").Enabled = False
            'rb.SelectedIndex = 0
            'rb.Items.FindByValue("PDFF").Enabled = False
            drpPartnerAccountlist.SelectedIndex = 0
            drpPartnerAccountlist.Enabled = False
        End If


    End Sub
    Protected Sub drpPeriod_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles drpPeriod.SelectedIndexChanged
        perioddisabled()
        If drpPeriod.SelectedIndex = 1 Then
            lbldate.Visible = True
            txtDate.Visible = True
            txtDate.Enabled = True

            drpMonth.Visible = False
            drpMonth.Enabled = False
            drpYear.Visible = False
            drpYear.Enabled = False
            lbldateFrom.Visible = False
            txtdateFrom.Visible = False
            txtdateFrom.Enabled = False
            lbldateto.Visible = False
            txtdateTo.Visible = False
            txtdateTo.Visible = False
            txtdateTo.Enabled = False
        ElseIf drpPeriod.SelectedIndex = 2 Then
            lbldate.Visible = True
            drpMonth.Visible = True
            drpMonth.Enabled = True
            drpYear.Visible = True
            drpYear.Enabled = True

            txtDate.Visible = False
            txtDate.Enabled = False

            lbldateFrom.Visible = False
            txtdateFrom.Visible = False
            txtdateFrom.Enabled = False
            lbldateto.Visible = False
            txtdateTo.Visible = False
            txtdateTo.Visible = False
            txtdateTo.Enabled = False
        ElseIf drpPeriod.SelectedIndex = 3 Then
            lbldateFrom.Visible = True
            txtdateFrom.Visible = True
            txtdateFrom.Enabled = True
            lbldateto.Visible = True
            txtdateTo.Visible = True
            txtdateTo.Enabled = True

            lbldate.Visible = False
            txtDate.Visible = False
            txtDate.Enabled = False
            drpMonth.Visible = False
            drpMonth.Enabled = False
            drpYear.Visible = False
            drpYear.Enabled = False
        End If
        If (accountID <> smaccountid And Session("roles") <> "KP-PARTNERTELLER" And Session("roles") <> "KP-SUPERVISOR" And Session("roles") <> "KP-MANAGER" And Session("roles") <> "KP-SMHO") Then
            'SEND REPORT TO EMAIL ADD
            If drpPeriod.SelectedIndex <> 0 And drpPeriod.SelectedIndex <> 1 Then
                emailaddress.EmailOpen.Show()
                emailaddress.EmailOpen.Focus()
            End If
        End If
    End Sub
    Protected Sub drpregion_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles drpRegion.SelectedIndexChanged
        If userrole = "KP-IAD" Or userrole = "KP-RAM" Then
            If drpRegion.Text = Nothing Or drpRegion.Text = "-Select-" Then
                drpArea.Text = Nothing
                drpBranchName.Text = Nothing
            ElseIf drpArea.Text = Nothing Or drpArea.Text = "-Select-" Then
                drpBranchName.Text = Nothing
            End If
            getRegionCode()
            getArea()
            getAreaCode()
            getBranch()
        End If
    End Sub
    Protected Sub drpArea_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles drpArea.SelectedIndexChanged
        If userrole = "KP-IAD" Or userrole = "KP-RAM" Then
            If drpArea.Text = Nothing Or drpArea.Text = "-Select-" Then
                drpBranchName.Text = Nothing
            End If
            getAreaCode()
            getBranch()
        End If
    End Sub
    Protected Sub drpBranchName_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles drpBranchName.SelectedIndexChanged
        getBRanchCode()
    End Sub
    Protected Sub drpglobe_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles drpglobe.SelectedIndexChanged
        If ReportType = 5 Or ReportType = 6 Then
            drpsubpartnerid.SelectedIndex = drpglobe.SelectedIndex
        End If
        If drpTransactionTypelist.Text = 18 Then
            getdepartment()
            getterminal()
        End If
    End Sub
    Protected Sub drpdepartment_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles drpdepartment.SelectedIndexChanged
        drpdepartmentid.SelectedIndex = drpdepartment.SelectedIndex
        drpdepartmenttin.SelectedIndex = drpdepartment.SelectedIndex
        getterminal()
    End Sub
    Protected Sub drpterminal_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles drpterminal.SelectedIndexChanged
        drpterminalid.SelectedIndex = drpterminal.SelectedIndex
        drpterminaltin.SelectedIndex = drpterminal.SelectedIndex
    End Sub
    Public Sub getdepartment()
        Try
            drpdepartment.Items.Clear()
            drpdepartmentid.Items.Clear()
            drpdepartmenttin.Items.Clear()

            drpdepartment.Items.Add(New ListItem("-Select-"))
            drpdepartmentid.Items.Add(New ListItem("-Select-"))
            drpdepartmenttin.Items.Add(New ListItem("-Select-"))
            getconnections()
            Using Con.GetCon()
                strquery = String.Format("SELECT * FROM `kpadminpartners`.`ws_Sublocation` WHERE subaccountid='{0}' AND isactive=1", drpsubpartnerid.Text)
                cmd = New MySqlCommand(strquery, Con.GetCon())
                dr = cmd.ExecuteReader
                While dr.Read
                    drpdepartmentid.Items.Add(UCase(Trim(dr(1).ToString)))
                    drpdepartment.Items.Add(UCase(Trim(dr(2).ToString)))
                    drpdepartmenttin.Items.Add(UCase(Trim(dr(3).ToString)))
                End While
                drpdepartmentid.SelectedIndex = drpdepartment.SelectedIndex
                drpdepartmenttin.SelectedIndex = drpdepartment.SelectedIndex
                dr.Close()
            End Using
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " getdepartment")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    Public Sub getterminal()
        Try
            drpterminal.Items.Clear()
            drpterminalid.Items.Clear()
            drpterminaltin.Items.Clear()
            drpterminal.Items.Add(New ListItem("-Select-"))
            drpterminalid.Items.Add(New ListItem("-Select-"))
            drpterminaltin.Items.Add(New ListItem("-Select-"))
            getconnections()
            Using Con.GetCon()
                strquery = String.Format("SELECT * FROM `kpadminpartners`.`ws_Subterminal` WHERE sublocationid='{0}' AND isactive=1", drpdepartmentid.Text)
                cmd = New MySqlCommand(strquery, Con.GetCon())
                dr = cmd.ExecuteReader
                While dr.Read
                    drpterminalid.Items.Add(UCase(Trim(dr(1).ToString)))
                    drpterminal.Items.Add(UCase(Trim(dr(2).ToString)))
                    drpterminaltin.Items.Add(UCase(Trim(dr(4).ToString)))
                End While
                drpterminalid.SelectedIndex = drpterminal.SelectedIndex
                drpterminaltin.SelectedIndex = drpterminal.SelectedIndex
                dr.Close()
            End Using
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " getterminal")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    'GET REGIONCODE
    Private Sub getRegionCode()
        Con.OpenCon("KPUsers")
        errorcon = "Domestic"
        Try
            Using Con.GetCon()
                strquery = String.Format("SELECT distinct regioncode FROM kpusers.branches WHERE regionname = '{0}' and zonecode='{1}' and status=1 LIMIT 1", drpRegion.Text, zCode)
                cmd = New MySqlCommand(strquery, Con.GetCon())
                If cmd.Connection.State = ConnectionState.Closed Then
                    Response.Write(String.Format("<script language='javascript'>window.alert('Unable to connect {0}  Server! Please Contact Admin Support!');window.location='MainForm.aspx';</script>", errorcon))
                Else
                    dr = cmd.ExecuteReader
                    While dr.Read
                        clsreport.R_code = Trim(dr.Item("regioncode"))
                        Session("regioncode") = Trim(dr.Item("regioncode"))
                    End While
                    dr.Close()
                    cmd = Nothing
                End If
            End Using
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " getRegionCode")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    'GET REGION
    Private Sub getAllRegion()
        Con.OpenCon("KPUsers")
        errorcon = "Domestic"
        Try
            Using Con.GetCon()
                If (Session("stype") = "FA") Then
                    If Session("roles") = "KP-RAM" And Session("rname") <> "" Then
                        clsreport.R_code = Session("rcode")
                    End If
                    getCode = String.Format("SELECT regioncode,regionname FROM kpusers.branches WHERE zonecode='{0}' and (regioncode='{1}' or regionname ='HO') and status=1 group by regionname order by regionname asc;", zCode, Session("rcode"))
                Else
                    getCode = String.Format("SELECT regioncode,regionname FROM kpusers.branches WHERE zonecode='{0}' and status=1 group by regionname  ORDER BY regionname;", zCode)
                End If
                cmd = New MySqlCommand(getCode, Con.GetCon())
                If cmd.Connection.State = ConnectionState.Closed Then
                    Response.Write(String.Format("<script language='javascript'>window.alert('Unable to connect {0}  Server! Please Contact Admin Support!');window.location='MainForm.aspx';</script>", errorcon))
                Else
                    dr = cmd.ExecuteReader
                    drpRegion.Items.Clear()
                    drpRegionCode.Items.Clear()
                    drpRegion.Items.Add(New ListItem("-Select-"))
                    While dr.Read
                        drpRegion.Items.Add(UCase(Trim(dr(1).ToString)))
                    End While
                    dr.Close()
                    cmd = Nothing
                End If
            End Using
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " getAllRegion")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    'GET AREACODE
    Private Sub getAreaCode()
        getRegionCode()
        Con.OpenCon("KPUsers")
        errorcon = "Domestic"
        Try
            Using Con.GetCon()
                'getCode = "SELECT areacode FROM kpusers.area WHERE areaname='" & drpArea.Text & "' and zonecode= '" & zCode & "' AND regionname='" & drpRegion.Text & "'  "

                'fixes for caar region - cant get areacode anf branchcode
                getCode = String.Format("SELECT if(areacode is not null,areacode,'HO') as areacode FROM kpusers.branches WHERE areaname='{0}' and zonecode= '{1}' AND regioncode='{2}'  and status=1  limit 1  ", drpArea.Text, zCode, Session("regioncode"))
                cmd = New MySqlCommand(getCode, Con.GetCon())
                dr = cmd.ExecuteReader
                If dr.HasRows Then
                    While dr.Read
                        clsreport.A_Code = Trim(dr.Item("areacode"))
                        drpAreaCode.Items.Add(UCase(dr(0).ToString))
                        Session("areacode") = Trim(dr.Item("areacode"))
                    End While
                    dr.Close()
                    cmd = Nothing
                End If
            End Using
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " getAreaCode")
            If cmd.Connection.State = ConnectionState.Closed Then
                Response.Write(String.Format("<script language='javascript'>window.alert('Unable to connect {0}  Server! Please Contact Admin Support!');window.location='MainForm.aspx';</script>", errorcon))
            Else
                'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
                GetMessage("Please Call Admin Support!")
            End If
        End Try
    End Sub
    'GET AREA
    Private Sub getArea()
        Con.OpenCon("KPUsers")
        errorcon = "Domestic"
        Try
            Using Con.GetCon()
                If Session("roles") = "KP-RAM" Or aCode = "" Then
                    getCode = String.Format("SELECT areacode,areaname FROM kpusers.branches WHERE zonecode='{0}' AND regioncode='{1}' and status=1 group by areaname  ORDER BY areaname;", zCode, clsreport.R_code)
                Else
                    getCode = String.Format("SELECT areacode,areaname FROM kpusers.branches WHERE zonecode='{0}' AND regioncode='{1}' and areacode='{2}' and status=1 group by areaname ORDER BY areaname;", zCode, clsreport.R_code, clsreport.A_Code)
                End If
                cmd = New MySqlCommand(getCode, Con.GetCon())
                If cmd.Connection.State = ConnectionState.Closed Then
                    Response.Write(String.Format("<script language='javascript'>window.alert('Unable to connect {0}  Server! Please Contact Admin Support!');window.location='MainForm.aspx';</script>", errorcon))
                Else
                    dr = cmd.ExecuteReader
                    drpArea.Items.Clear()
                    drpAreaCode.Items.Clear()
                    drpArea.Items.Add(New ListItem("-Select-"))
                    While dr.Read
                        drpArea.Items.Add(UCase(Trim(dr(1).ToString)))
                        drpAreaCode.Items.Add(UCase(dr(0).ToString))
                    End While
                    dr.Close()
                    cmd = Nothing
                End If
            End Using
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + strquery.ToString() + " getArea")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub
    'Get Old zone code
    Private Sub getoldzonecode()
        getBRanchCode()
        Con.OpenCon("KPUsers")
        errorcon = "Domestic"
        Try
            Using Con.GetCon()

                If drpArea.Text <> "-Select-" And Session("regioncode") <> "" And Session("branchcode") <> "" Then
                    getCode = String.Format("SELECT oldzonecode FROM kpusers.branches WHERE zonecode='{0}' AND branchname='{1}' and areaname='{2}' AND regioncode='{3}'  and branchcode='{4}' and status=1  limit 1;", zCode, drpBranchName.Text, drpArea.Text, Session("regioncode"), Session("branchcode"))
                ElseIf drpArea.Text = "-Select-" And Session("regioncode") <> "" And Session("branchcode") = "" Then
                    getCode = String.Format("SELECT oldzonecode FROM kpusers.branches WHERE zonecode='{0}' AND regioncode='{1}'  and status=1   limit 1;", zCode, Session("regioncode"))
                ElseIf drpArea.Text <> "-Select-" And Session("regioncode") <> "" And Session("branchcode") = "" Then
                    getCode = String.Format("SELECT oldzonecode FROM kpusers.branches WHERE zonecode='{0}' and areaname='{1}' AND regioncode='{2}'  and status=1  limit 1;", zCode, drpArea.Text, Session("regioncode"))
                End If

                cmd = New MySqlCommand(getCode, Con.GetCon())
                If cmd.Connection.State = ConnectionState.Closed Then
                    Response.Write(String.Format("<script language='javascript'>window.alert('Unable to connect {0}  Server! Please Contact Admin Support!');window.location='MainForm.aspx';</script>", errorcon))
                Else
                    dr = cmd.ExecuteReader
                    If dr.HasRows Then
                        While dr.Read

                            Session("oldzonecode") = Trim(dr.Item("oldzonecode"))
                        End While
                    End If
                End If
            End Using
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + getCode.ToString() + " getoldzonecode")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
        dr.Close()
        cmd = Nothing
    End Sub

    'GET BRANCHCODE
    Private Sub getBRanchCode()
        getAreaCode()
        Con.OpenCon("KPUsers")
        errorcon = "Domestic"
        Try
            Using Con.GetCon()
                'getCode = "SELECT branchcode FROM kpusers.branches WHERE zonecode='" & zCode & "' AND branchname='" & drpBranchName.Text & "' and areaname='" & drpArea.Text & "' AND regionname='" & drpRegion.Text & "' ORDER BY areaname;"
                getCode = String.Format("SELECT branchcode FROM kpusers.branches WHERE zonecode='{0}' AND branchname='{1}' and areaname='{2}' AND regioncode='{3}'  and status=1   ORDER BY areaname limit 1;", zCode, drpBranchName.Text, drpArea.Text, Session("regioncode"))
                cmd = New MySqlCommand(getCode, Con.GetCon())
                If cmd.Connection.State = ConnectionState.Closed Then
                    Response.Write(String.Format("<script language='javascript'>window.alert('Unable to connect {0}  Server! Please Contact Admin Support!');window.location='MainForm.aspx';</script>", errorcon))
                Else
                    dr = cmd.ExecuteReader
                    If dr.HasRows Then
                        While dr.Read
                            clsreport.Branch_Code = Trim(dr.Item("branchcode"))
                            drpBranchCode.Items.Add(UCase(dr(0).ToString))
                            Session("branchcode") = Trim(dr.Item("branchcode"))
                        End While
                    End If
                End If
            End Using
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + getCode.ToString() + " getBRanchCode")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
        dr.Close()
        cmd = Nothing
    End Sub
    'GET BRANCH
    Private Sub getBranch()
        zCode = Session("zcode")
        Con.OpenCon("KPUsers")
        errorcon = "Domestic"
        Try
            Using Con.GetCon()
                getCode = String.Format("SELECT branchcode,branchname FROM kpusers.branches WHERE areaname='{0}' and zonecode='{1}' AND regioncode='{2}' and status=1 ORDER BY branchname;", drpArea.Text, zCode, Session("regioncode"))
                'getCode = "SELECT branchcode,branchname FROM kpusers.branches WHERE areaname='" & drpArea.Text & "' and zonecode='" & zCode & "' and status=1 ORDER BY branchname;"
                cmd = New MySqlCommand(getCode, Con.GetCon())
                If cmd.Connection.State = ConnectionState.Closed Then
                    Response.Write(String.Format("<script language='javascript'>window.alert('Unable to connect {0}  Server! Please Contact Admin Support!');window.location='MainForm.aspx';</script>", errorcon))
                Else
                    dr = cmd.ExecuteReader
                    drpBranchName.Items.Clear()
                    drpBranchCode.Items.Clear()
                    drpBranchName.Items.Add(New ListItem("-Select-"))
                    If dr.HasRows Then
                        While dr.Read
                            drpBranchName.Items.Add(UCase(Trim(dr(1).ToString)))
                        End While
                    End If
                    dr.Close()
                    cmd = Nothing
                End If
            End Using
        Catch ex As Exception
            kplog.Error(ex.ToString() + " " + Con.GetCon.ConnectionString() + " " + getCode.ToString() + " getBranch")
            'GetMessage(ex.ToString() + " " + Con.GetCon.ConnectionString())
            GetMessage("Please Call Admin Support!")
        End Try
    End Sub

    Protected Sub Page_LoadComplete(ByVal sender As Object, ByVal e As EventArgs) Handles Me.LoadComplete
        If drpTransactionTypelist.Text = 52 Or drpTransactionTypelist.Text = 53 Or drpTransactionTypelist.Text = 55 Then
            drpPartnerAccountlist.Visible = False
            drpPartnerAccountlist.SelectedIndex = 0
            SrchBox.Enabled = True
            SrchBox.Visible = True
            Label1.Visible = False
            Label11.Visible = True
        End If
    End Sub

    Protected Sub Page_Unload(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Unload
        Rpt.Close()
        Rpt.Dispose()
        Try
            If (Class1.Emailor = False) Then
                Session("emailaddress") = String.Empty
            End If
            Rpt.Close()
            Rpt.Dispose()
        Catch ex As Exception
            kplog.Error(ex.ToString())
            Rpt.Close()
            Rpt.Dispose()
            kplog.Error(ex.ToString())
            GetMessage("Please Call Admin!")
        End Try
    End Sub

    Protected Sub txtDate_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtDate.TextChanged
        If Convert.ToDateTime(txtDate.Text).ToString("yyyy-MM-dd") >= DateTime.Now.ToString("yyyy-MM-dd") And drpTransactionTypelist.SelectedIndex = 50 Then
            txtDate.Text = Convert.ToDateTime(DateTime.Now.Date).AddDays(-1)
        End If
    End Sub

    'Protected Sub drpLeterStart_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles drpLeterStart.SelectedIndexChanged
    '    GetWalletAccount()
    'End Sub

    Protected Sub drpMonth_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles drpMonth.SelectedIndexChanged

    End Sub


    Protected Sub drpbiller_Init(ByVal sender As Object, ByVal e As EventArgs) Handles drpbiller.Init

    End Sub

    Protected Sub drpbiller_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles drpbiller.SelectedIndexChanged
        drpbiller2.SelectedIndex = drpbiller.SelectedIndex
    End Sub



End Class
