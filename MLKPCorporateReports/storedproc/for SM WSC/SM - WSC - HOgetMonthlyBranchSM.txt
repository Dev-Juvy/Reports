DELIMITER $$

USE `kppartners`$$

DROP PROCEDURE IF EXISTS `HOgetMonthlyBranchSM`$$

CREATE DEFINER=`root`@`%` PROCEDURE `HOgetMonthlyBranchSM`(IN datefrom VARCHAR(15),IN dateto VARCHAR(15), IN accountCode VARCHAR(35))
BEGIN
	DECLARE _monthdate VARCHAR(4);
	DECLARE _year VARCHAR(4);
	
	DROP  TEMPORARY  TABLE IF EXISTS kppartners.tmpsmmonthlytxn;
	CREATE  TEMPORARY TABLE kppartners.tmpsmmonthlytxn(itemcount VARCHAR(100),principal VARCHAR(100),charge VARCHAR(100),total VARCHAR(100),feeshare VARCHAR(100));
	
	WHILE DATE(datefrom) <= DATE(dateto) DO
		SET _monthdate = DATE_FORMAT(datefrom,'%m%d');
		SET _year = DATE_FORMAT(datefrom,'%Y');
		
		SET @n_query= CONCAT('INSERT INTO kppartners.tmpsmmonthlytxn(itemcount,principal,charge,total,feeshare)'
		'select count(kptn) as itemcount,sum(principal) as  principal,sum(charge) as charge,(sum(principal)+sum(charge)) as total,(sum(charge)*(0.33)) as feeshare
		from (SELECT 
		DISTINCT IF(oldkptn IS NULL,p.kptn,oldkptn) AS kptn,p.principal,(p.servicecharge) AS charge
		FROM kppartners.payout',_monthdate,'  p
		INNER JOIN kppartners.potxnref sf ON sf.accountcode=p.accountcode AND sf.referenceno=p.referenceno
		WHERE p.accountcode=''',accountCode,'''  
		AND YEAR(p.claimeddate)=',_year,' AND p.reason NOT IN (''CHANGE Details'') AND sf.transactiontype IN (''3'') group by IF(oldkptn IS NULL,p.kptn,oldkptn)
		)x
		');
		SET datefrom = DATE_ADD(datefrom, INTERVAL 1 DAY);   
		PREPARE StrSQL FROM @n_query;
		EXECUTE StrSQL;             
	END WHILE;
	
		
	SET @sql3=CONCAT('select if(sum(itemcount) is null,0,sum(itemcount)) as itemcount,
	if(sum(principal) is null,0,sum(principal)) as principal,if(sum(charge) is null,0,sum(charge)) as charge,
	if(sum(total) is null,0,sum(total)) as total,if(sum(feeshare) is null,0,sum(feeshare)) as feeshare from kppartners.tmpsmmonthlytxn; ');
	PREPARE gtpo3 FROM @sql3;
	EXECUTE gtpo3;
	
    END$$

DELIMITER ;