
USE `kpbillspayment`;

/* Procedure structure for procedure `getRFCBillspayGlobalForCR` */

DROP PROCEDURE IF EXISTS  `getRFCBillspayGlobalForCR` ;

DELIMITER $$

CREATE DEFINER=`root`@`%` PROCEDURE `getRFCBillspayGlobalForCR`(IN sotable VARCHAR(4), IN accountCode VARCHAR(30),IN zcode VARCHAR(5),IN rcode VARCHAR(5),IN acode VARCHAR(5),IN bcode VARCHAR(5),IN _year VARCHAR(5),IN _globe VARCHAR(50),IN _usertype VARCHAR(10),IN oldzcode VARCHAR(5))
BEGIN
DECLARE globe VARCHAR(100);
IF _globe = 'INNOVE' THEN
	SET globe = 'CHAR_LENGTH(AccountNo) = 9';
ELSEIF _globe = 'GLOBE' THEN
	SET globe = 'CHAR_LENGTH(AccountNo) <> 9';
ELSE
	SET globe = '1';
END IF;
IF _usertype = "NOTIAD" THEN #NOT IAD USER
		SET @n_query= CONCAT('
		select 
		Control_No as CR_Control_No,Transaction_Time as CR_Transaction_Date,NEW_KPTN as CR_KPTN,
		OLD_KPTN as CR_OLD_KPTN,Account_No as CR_Account_No,Account_Name as CR_Account_Name,Payor_Name as CR_Payor_Name,
		Payment_To as CR_Payment_To,IR_No as CR_IR_NO,Amount_Paid as CR_Amount_Paid,Cancellation_Charge as CR_Cancellation_Charge,
		Other_Charge as CR_Other_Charge,Operator_ID as CR_Operator_ID,
		Branch_Code as CR_Branch_Code,Zone_Code,Payor_Address as CR_Payor_Address,Payor_ContactNo as CR_Payor_ContactNo,
		Other_Details as CR_Other_Details,operatorname as CR_Employee_Name
		from(
		SELECT soTable.Controlno as Control_No,soTable.TransDate as Transaction_Time,
			soTable.KPTNNo as NEW_KPTN,if(soTable.oldkptnno is null,soTable.OLDKPTN,oldkptnno) as OLD_KPTN,soTable.AccountNo as Account_No,
			concat(soTable.AccountFname,'' '',soTable.AccountMname,'' '',soTable.AccountLname)as Account_Name,
			concat(soTable.PayorFname,'' '',soTable.PayorMname,'' '',soTable.PayorLname)as Payor_Name,
			soTable.CompanyName as Payment_To, soTable.IRNo as IR_No, soTable.amountPaid as Amount_Paid, 
			soTable.CancelCharge as Cancellation_Charge,soTable.CustomerCharge as Other_Charge,soTable.OperatorID as Operator_ID,
			soTable.BranchCode AS Branch_Code, soTable.ZoneCode AS Zone_Code, soTable.PayorAddress AS Payor_Address, 
			soTable.PayorContactNo AS Payor_ContactNo, soTable.OtherDetails AS Other_Details,soTable.OperatorID AS operatorname
			FROM kpbillspayment.sendout',sotable,' soTable 
			#INNER JOIN kpadminpartners.accountlist acl on acl.AccountID=soTable.CompanyID
			WHERE  
			soTable.CompanyID=''',accountCode,''' AND ',globe,'
			AND YEAR(soTable.TransDate)= ''',_year,'''
			AND (soTable.oldkptnno IS NOT NULL OR soTable.OLDKPTN IS NOT NULL) 
			ORDER BY soTable.TransDate
			)X GROUP BY NEW_KPTN
');
ELSEIF _usertype = "IAD" THEN #IAD USER
	IF accountCode = "" THEN #NO SPECIFIC PARTNER - FOR SUMMARY REPORT
		IF bcode<>"" AND acode<>"" AND rcode<>"" THEN # BY BRANCH
			SET @n_query= CONCAT('
		SELECT 
		Control_No AS CR_Control_No,Transaction_Time AS CR_Transaction_Date,NEW_KPTN AS CR_KPTN,
		OLD_KPTN AS CR_OLD_KPTN,Account_No AS CR_Account_No,Account_Name AS CR_Account_Name,Payor_Name AS CR_Payor_Name,
		Payment_To AS CR_Payment_To,IR_No AS CR_IR_NO,Amount_Paid AS CR_Amount_Paid,Cancellation_Charge AS CR_Cancellation_Charge,
		Other_Charge AS CR_Other_Charge,Operator_ID AS CR_Operator_ID,
		Branch_Code AS CR_Branch_Code,Zone_Code,Payor_Address AS CR_Payor_Address,Payor_ContactNo AS CR_Payor_ContactNo,
		Other_Details AS CR_Other_Details,operatorname AS CR_Employee_Name
		FROM(
			SELECT soTable.Controlno AS Control_No,soTable.TransDate AS Transaction_Time,
			soTable.KPTNNo AS NEW_KPTN,IF(soTable.oldkptnno IS NULL,soTable.OLDKPTN,oldkptnno) AS OLD_KPTN,soTable.AccountNo AS Account_No,
			CONCAT(soTable.AccountFname,'' '',soTable.AccountMname,'' '',soTable.AccountLname)AS Account_Name,
			CONCAT(soTable.PayorFname,'' '',soTable.PayorMname,'' '',soTable.PayorLname)AS Payor_Name,
			soTable.CompanyName AS Payment_To, soTable.IRNo AS IR_No, soTable.amountPaid AS Amount_Paid, 
			soTable.CancelCharge AS Cancellation_Charge,soTable.CustomerCharge AS Other_Charge,soTable.OperatorID AS Operator_ID,
			soTable.BranchCode AS Branch_Code, soTable.ZoneCode AS Zone_Code, soTable.PayorAddress AS Payor_Address, 
			soTable.PayorContactNo AS Payor_ContactNo, soTable.OtherDetails AS Other_Details,soTable.OperatorID AS operatorname
			FROM kpbillspayment.sendout',sotable,' soTable 
			#INNER JOIN kpadminpartners.accountlist acl on acl.AccountID=soTable.CompanyID
			INNER JOIN kpusersglobal.branches b ON b.branchcode=',bcode,' AND b.zonecode=',zcode,'  AND b.oldzonecode=',oldzcode,' 
			WHERE YEAR(soTable.TransDate)= ''',_year,'''
			AND soTable.branchcode=',bcode,' AND (soTable.ZoneCode=',zcode,' OR soTable.ZoneCode=',oldzcode,')
			AND (soTable.oldkptnno IS NOT NULL OR soTable.OLDKPTN IS NOT NULL) 
			ORDER BY soTable.TransDate
			)X GROUP BY NEW_KPTN
			');
		END IF;
	ELSEIF accountCode <> "" THEN #WITH SPECIFIC PARTNER 
		IF bcode<>"" AND acode<>"" AND rcode<>"" THEN #BY BRANCH
			SET @n_query= CONCAT('
		SELECT 
		Control_No AS CR_Control_No,Transaction_Time AS CR_Transaction_Date,NEW_KPTN AS CR_KPTN,
		OLD_KPTN AS CR_OLD_KPTN,Account_No AS CR_Account_No,Account_Name AS CR_Account_Name,Payor_Name AS CR_Payor_Name,
		Payment_To AS CR_Payment_To,IR_No AS CR_IR_NO,Amount_Paid AS CR_Amount_Paid,Cancellation_Charge AS CR_Cancellation_Charge,
		Other_Charge AS CR_Other_Charge,Operator_ID AS CR_Operator_ID,
		Branch_Code AS CR_Branch_Code,Zone_Code,Payor_Address AS CR_Payor_Address,Payor_ContactNo AS CR_Payor_ContactNo,
		Other_Details AS CR_Other_Details,operatorname AS CR_Employee_Name
		FROM(
		SELECT soTable.Controlno AS Control_No,soTable.TransDate AS Transaction_Time,
			soTable.KPTNNo AS NEW_KPTN,IF(soTable.oldkptnno IS NULL,soTable.OLDKPTN,oldkptnno) AS OLD_KPTN,soTable.AccountNo AS Account_No,
			CONCAT(soTable.AccountFname,'' '',soTable.AccountMname,'' '',soTable.AccountLname)AS Account_Name,
			CONCAT(soTable.PayorFname,'' '',soTable.PayorMname,'' '',soTable.PayorLname)AS Payor_Name,
			soTable.CompanyName AS Payment_To, soTable.IRNo AS IR_No, soTable.amountPaid AS Amount_Paid, 
			soTable.CancelCharge AS Cancellation_Charge,soTable.CustomerCharge AS Other_Charge,soTable.OperatorID AS Operator_ID,
			soTable.BranchCode AS Branch_Code, soTable.ZoneCode AS Zone_Code, soTable.PayorAddress AS Payor_Address, 
			soTable.PayorContactNo AS Payor_ContactNo, soTable.OtherDetails AS Other_Details,soTable.OperatorID AS operatorname
			FROM kpbillspayment.sendout',sotable,' soTable 
			#INNER JOIN kpadminpartners.accountlist acl on acl.AccountID=soTable.CompanyID
			INNER JOIN kpusersglobal.branches b ON b.branchcode=',bcode,' AND b.zonecode=',zcode,' AND b.oldzonecode=',oldzcode,' 
			WHERE  
			soTable.CompanyID=''',accountCode,''' AND ',globe,'
			AND soTable.branchcode=',bcode,' AND (soTable.ZoneCode=',zcode,' OR soTable.ZoneCode=',oldzcode,')
			AND YEAR(soTable.TransDate)= ''',_year,'''
			AND (soTable.oldkptnno IS NOT NULL OR soTable.OLDKPTN IS NOT NULL) 
			ORDER BY soTable.TransDate
			)X GROUP BY NEW_KPTN
			');
		ELSEIF bcode="" AND acode<>"" AND rcode<>"" THEN #BY AREA
			SET @n_query= CONCAT('
		SELECT 
		Control_No AS CR_Control_No,Transaction_Time AS CR_Transaction_Date,NEW_KPTN AS CR_KPTN,
		OLD_KPTN AS CR_OLD_KPTN,Account_No AS CR_Account_No,Account_Name AS CR_Account_Name,Payor_Name AS CR_Payor_Name,
		Payment_To AS CR_Payment_To,IR_No AS CR_IR_NO,Amount_Paid AS CR_Amount_Paid,Cancellation_Charge AS CR_Cancellation_Charge,
		Other_Charge AS CR_Other_Charge,Operator_ID AS CR_Operator_ID,
		Branch_Code AS CR_Branch_Code,Zone_Code,Payor_Address AS CR_Payor_Address,Payor_ContactNo AS CR_Payor_ContactNo,
		Other_Details AS CR_Other_Details,operatorname AS CR_Employee_Name
		FROM(
		SELECT soTable.Controlno AS Control_No,soTable.TransDate AS Transaction_Time,
			soTable.KPTNNo AS NEW_KPTN,IF(soTable.oldkptnno IS NULL,soTable.OLDKPTN,oldkptnno) AS OLD_KPTN,soTable.AccountNo AS Account_No,
			CONCAT(soTable.AccountFname,'' '',soTable.AccountMname,'' '',soTable.AccountLname)AS Account_Name,
			CONCAT(soTable.PayorFname,'' '',soTable.PayorMname,'' '',soTable.PayorLname)AS Payor_Name,
			soTable.CompanyName AS Payment_To, soTable.IRNo AS IR_No, soTable.amountPaid AS Amount_Paid, 
			soTable.CancelCharge AS Cancellation_Charge,soTable.CustomerCharge AS Other_Charge,soTable.OperatorID AS Operator_ID,
			soTable.BranchCode AS Branch_Code, soTable.ZoneCode AS Zone_Code, soTable.PayorAddress AS Payor_Address, 
			soTable.PayorContactNo AS Payor_ContactNo, soTable.OtherDetails AS Other_Details,soTable.OperatorID AS operatorname
			FROM kpbillspayment.sendout',sotable,' soTable 
			#INNER JOIN kpadminpartners.accountlist acl on acl.AccountID=soTable.CompanyID
			INNER JOIN kpusersglobal.branches b ON b.branchcode=IF(soTable.cancelledbybranchcode IS NULL,soTable.branchcode,soTable.cancelledbybranchcode) 
			AND b.zonecode=',zcode,' AND b.oldzonecode=',oldzcode,' AND b.areacode=''',acode,''' AND b.regioncode=',rcode,'
			WHERE  
			soTable.CompanyID=''',accountCode,''' AND ',globe,'
		        AND (soTable.ZoneCode=',zcode,' OR soTable.ZoneCode=',oldzcode,')
			AND YEAR(soTable.TransDate)= ''',_year,'''
			AND (soTable.oldkptnno IS NOT NULL OR soTable.OLDKPTN IS NOT NULL) 
			ORDER BY soTable.TransDate
			)X GROUP BY NEW_KPTN
			');
		ELSEIF bcode="" AND acode="" AND rcode<>"" THEN #BY REGION
			SET @n_query= CONCAT('
		SELECT 
		Control_No AS CR_Control_No,Transaction_Time AS CR_Transaction_Date,NEW_KPTN AS CR_KPTN,
		OLD_KPTN AS CR_OLD_KPTN,Account_No AS CR_Account_No,Account_Name AS CR_Account_Name,Payor_Name AS CR_Payor_Name,
		Payment_To AS CR_Payment_To,IR_No AS CR_IR_NO,Amount_Paid AS CR_Amount_Paid,Cancellation_Charge AS CR_Cancellation_Charge,
		Other_Charge AS CR_Other_Charge,Operator_ID AS CR_Operator_ID,
		Branch_Code AS CR_Branch_Code,Zone_Code,Payor_Address AS CR_Payor_Address,Payor_ContactNo AS CR_Payor_ContactNo,
		Other_Details AS CR_Other_Details,operatorname AS CR_Employee_Name
		FROM(
		SELECT soTable.Controlno AS Control_No,soTable.TransDate AS Transaction_Time,
			soTable.KPTNNo AS NEW_KPTN,IF(soTable.oldkptnno IS NULL,soTable.OLDKPTN,oldkptnno) AS OLD_KPTN,soTable.AccountNo AS Account_No,
			CONCAT(soTable.AccountFname,'' '',soTable.AccountMname,'' '',soTable.AccountLname)AS Account_Name,
			CONCAT(soTable.PayorFname,'' '',soTable.PayorMname,'' '',soTable.PayorLname)AS Payor_Name,
			soTable.CompanyName AS Payment_To, soTable.IRNo AS IR_No, soTable.amountPaid AS Amount_Paid, 
			soTable.CancelCharge AS Cancellation_Charge,soTable.CustomerCharge AS Other_Charge,soTable.OperatorID AS Operator_ID,
			soTable.BranchCode AS Branch_Code, soTable.ZoneCode AS Zone_Code, soTable.PayorAddress AS Payor_Address, 
			soTable.PayorContactNo AS Payor_ContactNo, soTable.OtherDetails AS Other_Details,soTable.OperatorID AS operatorname
			FROM kpbillspayment.sendout',sotable,' soTable 
			#INNER JOIN kpadminpartners.accountlist acl on acl.AccountID=soTable.CompanyID
			INNER JOIN kpusersglobal.branches b ON b.branchcode=IF(soTable.cancelledbybranchcode IS NULL,soTable.branchcode,soTable.cancelledbybranchcode) 
			AND b.zonecode=',zcode,' AND b.oldzonecode=',oldzcode,'  AND b.regioncode=',rcode,'
			WHERE  
			soTable.CompanyID=''',accountCode,''' AND ',globe,'
		        AND (soTable.ZoneCode=',zcode,' OR soTable.ZoneCode=',oldzcode,')
			AND YEAR(soTable.TransDate)= ''',_year,'''
			AND (soTable.oldkptnno IS NOT NULL OR soTable.OLDKPTN IS NOT NULL) 
			ORDER BY soTable.TransDate
			)X GROUP BY NEW_KPTN
			');
		END IF;
	END IF;
END IF;															
	PREPARE n_StrSQL FROM @n_query;
	EXECUTE n_StrSQL;
	DEALLOCATE PREPARE n_StrSQL;
    END $$
DELIMITER ;
